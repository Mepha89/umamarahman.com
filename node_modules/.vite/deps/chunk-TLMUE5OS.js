import {
  __commonJS
} from "./chunk-OROXOI2D.js";

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/picocolors/picocolors.browser.js
var require_picocolors_browser = __commonJS({
  "node_modules/picocolors/picocolors.browser.js"(exports, module) {
    var x = String;
    var create = function() {
      return { isColorSupported: false, reset: x, bold: x, dim: x, italic: x, underline: x, inverse: x, hidden: x, strikethrough: x, black: x, red: x, green: x, yellow: x, blue: x, magenta: x, cyan: x, white: x, gray: x, bgBlack: x, bgRed: x, bgGreen: x, bgYellow: x, bgBlue: x, bgMagenta: x, bgCyan: x, bgWhite: x };
    };
    module.exports = create();
    module.exports.createColors = create;
  }
});

// (disabled):node_modules/postcss/lib/terminal-highlight
var require_terminal_highlight = __commonJS({
  "(disabled):node_modules/postcss/lib/terminal-highlight"() {
  }
});

// node_modules/postcss/lib/css-syntax-error.js
var require_css_syntax_error = __commonJS({
  "node_modules/postcss/lib/css-syntax-error.js"(exports, module) {
    "use strict";
    var pico = require_picocolors_browser();
    var terminalHighlight = require_terminal_highlight();
    var CssSyntaxError = class extends Error {
      constructor(message, line, column, source, file, plugin) {
        super(message);
        this.name = "CssSyntaxError";
        this.reason = message;
        if (file) {
          this.file = file;
        }
        if (source) {
          this.source = source;
        }
        if (plugin) {
          this.plugin = plugin;
        }
        if (typeof line !== "undefined" && typeof column !== "undefined") {
          if (typeof line === "number") {
            this.line = line;
            this.column = column;
          } else {
            this.line = line.line;
            this.column = line.column;
            this.endLine = column.line;
            this.endColumn = column.column;
          }
        }
        this.setMessage();
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, CssSyntaxError);
        }
      }
      setMessage() {
        this.message = this.plugin ? this.plugin + ": " : "";
        this.message += this.file ? this.file : "<css input>";
        if (typeof this.line !== "undefined") {
          this.message += ":" + this.line + ":" + this.column;
        }
        this.message += ": " + this.reason;
      }
      showSourceCode(color) {
        if (!this.source)
          return "";
        let css = this.source;
        if (color == null)
          color = pico.isColorSupported;
        if (terminalHighlight) {
          if (color)
            css = terminalHighlight(css);
        }
        let lines = css.split(/\r?\n/);
        let start = Math.max(this.line - 3, 0);
        let end = Math.min(this.line + 2, lines.length);
        let maxWidth = String(end).length;
        let mark, aside;
        if (color) {
          let { bold, red, gray } = pico.createColors(true);
          mark = (text) => bold(red(text));
          aside = (text) => gray(text);
        } else {
          mark = aside = (str) => str;
        }
        return lines.slice(start, end).map((line, index) => {
          let number = start + 1 + index;
          let gutter = " " + (" " + number).slice(-maxWidth) + " | ";
          if (number === this.line) {
            let spacing = aside(gutter.replace(/\d/g, " ")) + line.slice(0, this.column - 1).replace(/[^\t]/g, " ");
            return mark(">") + aside(gutter) + line + "\n " + spacing + mark("^");
          }
          return " " + aside(gutter) + line;
        }).join("\n");
      }
      toString() {
        let code = this.showSourceCode();
        if (code) {
          code = "\n\n" + code + "\n";
        }
        return this.name + ": " + this.message + code;
      }
    };
    module.exports = CssSyntaxError;
    CssSyntaxError.default = CssSyntaxError;
  }
});

// node_modules/postcss/lib/symbols.js
var require_symbols = __commonJS({
  "node_modules/postcss/lib/symbols.js"(exports, module) {
    "use strict";
    module.exports.isClean = Symbol("isClean");
    module.exports.my = Symbol("my");
  }
});

// node_modules/postcss/lib/stringifier.js
var require_stringifier = __commonJS({
  "node_modules/postcss/lib/stringifier.js"(exports, module) {
    "use strict";
    var DEFAULT_RAW = {
      colon: ": ",
      indent: "    ",
      beforeDecl: "\n",
      beforeRule: "\n",
      beforeOpen: " ",
      beforeClose: "\n",
      beforeComment: "\n",
      after: "\n",
      emptyBody: "",
      commentLeft: " ",
      commentRight: " ",
      semicolon: false
    };
    function capitalize(str) {
      return str[0].toUpperCase() + str.slice(1);
    }
    var Stringifier = class {
      constructor(builder) {
        this.builder = builder;
      }
      stringify(node, semicolon) {
        if (!this[node.type]) {
          throw new Error(
            "Unknown AST node type " + node.type + ". Maybe you need to change PostCSS stringifier."
          );
        }
        this[node.type](node, semicolon);
      }
      document(node) {
        this.body(node);
      }
      root(node) {
        this.body(node);
        if (node.raws.after)
          this.builder(node.raws.after);
      }
      comment(node) {
        let left = this.raw(node, "left", "commentLeft");
        let right = this.raw(node, "right", "commentRight");
        this.builder("/*" + left + node.text + right + "*/", node);
      }
      decl(node, semicolon) {
        let between = this.raw(node, "between", "colon");
        let string = node.prop + between + this.rawValue(node, "value");
        if (node.important) {
          string += node.raws.important || " !important";
        }
        if (semicolon)
          string += ";";
        this.builder(string, node);
      }
      rule(node) {
        this.block(node, this.rawValue(node, "selector"));
        if (node.raws.ownSemicolon) {
          this.builder(node.raws.ownSemicolon, node, "end");
        }
      }
      atrule(node, semicolon) {
        let name = "@" + node.name;
        let params = node.params ? this.rawValue(node, "params") : "";
        if (typeof node.raws.afterName !== "undefined") {
          name += node.raws.afterName;
        } else if (params) {
          name += " ";
        }
        if (node.nodes) {
          this.block(node, name + params);
        } else {
          let end = (node.raws.between || "") + (semicolon ? ";" : "");
          this.builder(name + params + end, node);
        }
      }
      body(node) {
        let last = node.nodes.length - 1;
        while (last > 0) {
          if (node.nodes[last].type !== "comment")
            break;
          last -= 1;
        }
        let semicolon = this.raw(node, "semicolon");
        for (let i = 0; i < node.nodes.length; i++) {
          let child = node.nodes[i];
          let before = this.raw(child, "before");
          if (before)
            this.builder(before);
          this.stringify(child, last !== i || semicolon);
        }
      }
      block(node, start) {
        let between = this.raw(node, "between", "beforeOpen");
        this.builder(start + between + "{", node, "start");
        let after;
        if (node.nodes && node.nodes.length) {
          this.body(node);
          after = this.raw(node, "after");
        } else {
          after = this.raw(node, "after", "emptyBody");
        }
        if (after)
          this.builder(after);
        this.builder("}", node, "end");
      }
      raw(node, own, detect) {
        let value;
        if (!detect)
          detect = own;
        if (own) {
          value = node.raws[own];
          if (typeof value !== "undefined")
            return value;
        }
        let parent = node.parent;
        if (detect === "before") {
          if (!parent || parent.type === "root" && parent.first === node) {
            return "";
          }
          if (parent && parent.type === "document") {
            return "";
          }
        }
        if (!parent)
          return DEFAULT_RAW[detect];
        let root = node.root();
        if (!root.rawCache)
          root.rawCache = {};
        if (typeof root.rawCache[detect] !== "undefined") {
          return root.rawCache[detect];
        }
        if (detect === "before" || detect === "after") {
          return this.beforeAfter(node, detect);
        } else {
          let method = "raw" + capitalize(detect);
          if (this[method]) {
            value = this[method](root, node);
          } else {
            root.walk((i) => {
              value = i.raws[own];
              if (typeof value !== "undefined")
                return false;
            });
          }
        }
        if (typeof value === "undefined")
          value = DEFAULT_RAW[detect];
        root.rawCache[detect] = value;
        return value;
      }
      rawSemicolon(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && i.nodes.length && i.last.type === "decl") {
            value = i.raws.semicolon;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawEmptyBody(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && i.nodes.length === 0) {
            value = i.raws.after;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawIndent(root) {
        if (root.raws.indent)
          return root.raws.indent;
        let value;
        root.walk((i) => {
          let p = i.parent;
          if (p && p !== root && p.parent && p.parent === root) {
            if (typeof i.raws.before !== "undefined") {
              let parts = i.raws.before.split("\n");
              value = parts[parts.length - 1];
              value = value.replace(/\S/g, "");
              return false;
            }
          }
        });
        return value;
      }
      rawBeforeComment(root, node) {
        let value;
        root.walkComments((i) => {
          if (typeof i.raws.before !== "undefined") {
            value = i.raws.before;
            if (value.includes("\n")) {
              value = value.replace(/[^\n]+$/, "");
            }
            return false;
          }
        });
        if (typeof value === "undefined") {
          value = this.raw(node, null, "beforeDecl");
        } else if (value) {
          value = value.replace(/\S/g, "");
        }
        return value;
      }
      rawBeforeDecl(root, node) {
        let value;
        root.walkDecls((i) => {
          if (typeof i.raws.before !== "undefined") {
            value = i.raws.before;
            if (value.includes("\n")) {
              value = value.replace(/[^\n]+$/, "");
            }
            return false;
          }
        });
        if (typeof value === "undefined") {
          value = this.raw(node, null, "beforeRule");
        } else if (value) {
          value = value.replace(/\S/g, "");
        }
        return value;
      }
      rawBeforeRule(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && (i.parent !== root || root.first !== i)) {
            if (typeof i.raws.before !== "undefined") {
              value = i.raws.before;
              if (value.includes("\n")) {
                value = value.replace(/[^\n]+$/, "");
              }
              return false;
            }
          }
        });
        if (value)
          value = value.replace(/\S/g, "");
        return value;
      }
      rawBeforeClose(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && i.nodes.length > 0) {
            if (typeof i.raws.after !== "undefined") {
              value = i.raws.after;
              if (value.includes("\n")) {
                value = value.replace(/[^\n]+$/, "");
              }
              return false;
            }
          }
        });
        if (value)
          value = value.replace(/\S/g, "");
        return value;
      }
      rawBeforeOpen(root) {
        let value;
        root.walk((i) => {
          if (i.type !== "decl") {
            value = i.raws.between;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawColon(root) {
        let value;
        root.walkDecls((i) => {
          if (typeof i.raws.between !== "undefined") {
            value = i.raws.between.replace(/[^\s:]/g, "");
            return false;
          }
        });
        return value;
      }
      beforeAfter(node, detect) {
        let value;
        if (node.type === "decl") {
          value = this.raw(node, null, "beforeDecl");
        } else if (node.type === "comment") {
          value = this.raw(node, null, "beforeComment");
        } else if (detect === "before") {
          value = this.raw(node, null, "beforeRule");
        } else {
          value = this.raw(node, null, "beforeClose");
        }
        let buf = node.parent;
        let depth = 0;
        while (buf && buf.type !== "root") {
          depth += 1;
          buf = buf.parent;
        }
        if (value.includes("\n")) {
          let indent = this.raw(node, null, "indent");
          if (indent.length) {
            for (let step = 0; step < depth; step++)
              value += indent;
          }
        }
        return value;
      }
      rawValue(node, prop) {
        let value = node[prop];
        let raw = node.raws[prop];
        if (raw && raw.value === value) {
          return raw.raw;
        }
        return value;
      }
    };
    module.exports = Stringifier;
    Stringifier.default = Stringifier;
  }
});

// node_modules/postcss/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/postcss/lib/stringify.js"(exports, module) {
    "use strict";
    var Stringifier = require_stringifier();
    function stringify(node, builder) {
      let str = new Stringifier(builder);
      str.stringify(node);
    }
    module.exports = stringify;
    stringify.default = stringify;
  }
});

// node_modules/postcss/lib/node.js
var require_node = __commonJS({
  "node_modules/postcss/lib/node.js"(exports, module) {
    "use strict";
    var { isClean, my } = require_symbols();
    var CssSyntaxError = require_css_syntax_error();
    var Stringifier = require_stringifier();
    var stringify = require_stringify();
    function cloneNode(obj, parent) {
      let cloned = new obj.constructor();
      for (let i in obj) {
        if (!Object.prototype.hasOwnProperty.call(obj, i)) {
          continue;
        }
        if (i === "proxyCache")
          continue;
        let value = obj[i];
        let type = typeof value;
        if (i === "parent" && type === "object") {
          if (parent)
            cloned[i] = parent;
        } else if (i === "source") {
          cloned[i] = value;
        } else if (Array.isArray(value)) {
          cloned[i] = value.map((j) => cloneNode(j, cloned));
        } else {
          if (type === "object" && value !== null)
            value = cloneNode(value);
          cloned[i] = value;
        }
      }
      return cloned;
    }
    var Node = class {
      constructor(defaults = {}) {
        this.raws = {};
        this[isClean] = false;
        this[my] = true;
        for (let name in defaults) {
          if (name === "nodes") {
            this.nodes = [];
            for (let node of defaults[name]) {
              if (typeof node.clone === "function") {
                this.append(node.clone());
              } else {
                this.append(node);
              }
            }
          } else {
            this[name] = defaults[name];
          }
        }
      }
      error(message, opts = {}) {
        if (this.source) {
          let { start, end } = this.rangeBy(opts);
          return this.source.input.error(
            message,
            { line: start.line, column: start.column },
            { line: end.line, column: end.column },
            opts
          );
        }
        return new CssSyntaxError(message);
      }
      warn(result, text, opts) {
        let data = { node: this };
        for (let i in opts)
          data[i] = opts[i];
        return result.warn(text, data);
      }
      remove() {
        if (this.parent) {
          this.parent.removeChild(this);
        }
        this.parent = void 0;
        return this;
      }
      toString(stringifier = stringify) {
        if (stringifier.stringify)
          stringifier = stringifier.stringify;
        let result = "";
        stringifier(this, (i) => {
          result += i;
        });
        return result;
      }
      assign(overrides = {}) {
        for (let name in overrides) {
          this[name] = overrides[name];
        }
        return this;
      }
      clone(overrides = {}) {
        let cloned = cloneNode(this);
        for (let name in overrides) {
          cloned[name] = overrides[name];
        }
        return cloned;
      }
      cloneBefore(overrides = {}) {
        let cloned = this.clone(overrides);
        this.parent.insertBefore(this, cloned);
        return cloned;
      }
      cloneAfter(overrides = {}) {
        let cloned = this.clone(overrides);
        this.parent.insertAfter(this, cloned);
        return cloned;
      }
      replaceWith(...nodes) {
        if (this.parent) {
          let bookmark = this;
          let foundSelf = false;
          for (let node of nodes) {
            if (node === this) {
              foundSelf = true;
            } else if (foundSelf) {
              this.parent.insertAfter(bookmark, node);
              bookmark = node;
            } else {
              this.parent.insertBefore(bookmark, node);
            }
          }
          if (!foundSelf) {
            this.remove();
          }
        }
        return this;
      }
      next() {
        if (!this.parent)
          return void 0;
        let index = this.parent.index(this);
        return this.parent.nodes[index + 1];
      }
      prev() {
        if (!this.parent)
          return void 0;
        let index = this.parent.index(this);
        return this.parent.nodes[index - 1];
      }
      before(add) {
        this.parent.insertBefore(this, add);
        return this;
      }
      after(add) {
        this.parent.insertAfter(this, add);
        return this;
      }
      root() {
        let result = this;
        while (result.parent && result.parent.type !== "document") {
          result = result.parent;
        }
        return result;
      }
      raw(prop, defaultType) {
        let str = new Stringifier();
        return str.raw(this, prop, defaultType);
      }
      cleanRaws(keepBetween) {
        delete this.raws.before;
        delete this.raws.after;
        if (!keepBetween)
          delete this.raws.between;
      }
      toJSON(_, inputs) {
        let fixed = {};
        let emitInputs = inputs == null;
        inputs = inputs || /* @__PURE__ */ new Map();
        let inputsNextIndex = 0;
        for (let name in this) {
          if (!Object.prototype.hasOwnProperty.call(this, name)) {
            continue;
          }
          if (name === "parent" || name === "proxyCache")
            continue;
          let value = this[name];
          if (Array.isArray(value)) {
            fixed[name] = value.map((i) => {
              if (typeof i === "object" && i.toJSON) {
                return i.toJSON(null, inputs);
              } else {
                return i;
              }
            });
          } else if (typeof value === "object" && value.toJSON) {
            fixed[name] = value.toJSON(null, inputs);
          } else if (name === "source") {
            let inputId = inputs.get(value.input);
            if (inputId == null) {
              inputId = inputsNextIndex;
              inputs.set(value.input, inputsNextIndex);
              inputsNextIndex++;
            }
            fixed[name] = {
              inputId,
              start: value.start,
              end: value.end
            };
          } else {
            fixed[name] = value;
          }
        }
        if (emitInputs) {
          fixed.inputs = [...inputs.keys()].map((input) => input.toJSON());
        }
        return fixed;
      }
      positionInside(index) {
        let string = this.toString();
        let column = this.source.start.column;
        let line = this.source.start.line;
        for (let i = 0; i < index; i++) {
          if (string[i] === "\n") {
            column = 1;
            line += 1;
          } else {
            column += 1;
          }
        }
        return { line, column };
      }
      positionBy(opts) {
        let pos = this.source.start;
        if (opts.index) {
          pos = this.positionInside(opts.index);
        } else if (opts.word) {
          let index = this.toString().indexOf(opts.word);
          if (index !== -1)
            pos = this.positionInside(index);
        }
        return pos;
      }
      rangeBy(opts) {
        let start = {
          line: this.source.start.line,
          column: this.source.start.column
        };
        let end = this.source.end ? {
          line: this.source.end.line,
          column: this.source.end.column + 1
        } : {
          line: start.line,
          column: start.column + 1
        };
        if (opts.word) {
          let index = this.toString().indexOf(opts.word);
          if (index !== -1) {
            start = this.positionInside(index);
            end = this.positionInside(index + opts.word.length);
          }
        } else {
          if (opts.start) {
            start = {
              line: opts.start.line,
              column: opts.start.column
            };
          } else if (opts.index) {
            start = this.positionInside(opts.index);
          }
          if (opts.end) {
            end = {
              line: opts.end.line,
              column: opts.end.column
            };
          } else if (opts.endIndex) {
            end = this.positionInside(opts.endIndex);
          } else if (opts.index) {
            end = this.positionInside(opts.index + 1);
          }
        }
        if (end.line < start.line || end.line === start.line && end.column <= start.column) {
          end = { line: start.line, column: start.column + 1 };
        }
        return { start, end };
      }
      getProxyProcessor() {
        return {
          set(node, prop, value) {
            if (node[prop] === value)
              return true;
            node[prop] = value;
            if (prop === "prop" || prop === "value" || prop === "name" || prop === "params" || prop === "important" || /* c8 ignore next */
            prop === "text") {
              node.markDirty();
            }
            return true;
          },
          get(node, prop) {
            if (prop === "proxyOf") {
              return node;
            } else if (prop === "root") {
              return () => node.root().toProxy();
            } else {
              return node[prop];
            }
          }
        };
      }
      toProxy() {
        if (!this.proxyCache) {
          this.proxyCache = new Proxy(this, this.getProxyProcessor());
        }
        return this.proxyCache;
      }
      addToError(error) {
        error.postcssNode = this;
        if (error.stack && this.source && /\n\s{4}at /.test(error.stack)) {
          let s = this.source;
          error.stack = error.stack.replace(
            /\n\s{4}at /,
            `$&${s.input.from}:${s.start.line}:${s.start.column}$&`
          );
        }
        return error;
      }
      markDirty() {
        if (this[isClean]) {
          this[isClean] = false;
          let next = this;
          while (next = next.parent) {
            next[isClean] = false;
          }
        }
      }
      get proxyOf() {
        return this;
      }
    };
    module.exports = Node;
    Node.default = Node;
  }
});

// node_modules/postcss/lib/declaration.js
var require_declaration = __commonJS({
  "node_modules/postcss/lib/declaration.js"(exports, module) {
    "use strict";
    var Node = require_node();
    var Declaration = class extends Node {
      constructor(defaults) {
        if (defaults && typeof defaults.value !== "undefined" && typeof defaults.value !== "string") {
          defaults = { ...defaults, value: String(defaults.value) };
        }
        super(defaults);
        this.type = "decl";
      }
      get variable() {
        return this.prop.startsWith("--") || this.prop[0] === "$";
      }
    };
    module.exports = Declaration;
    Declaration.default = Declaration;
  }
});

// browser-external:source-map-js
var require_source_map_js = __commonJS({
  "browser-external:source-map-js"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "source-map-js" has been externalized for browser compatibility. Cannot access "source-map-js.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:url
var require_url = __commonJS({
  "browser-external:url"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "url" has been externalized for browser compatibility. Cannot access "url.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/nanoid/non-secure/index.cjs
var require_non_secure = __commonJS({
  "node_modules/nanoid/non-secure/index.cjs"(exports, module) {
    var urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
    var customAlphabet = (alphabet, defaultSize = 21) => {
      return (size = defaultSize) => {
        let id = "";
        let i = size;
        while (i--) {
          id += alphabet[Math.random() * alphabet.length | 0];
        }
        return id;
      };
    };
    var nanoid = (size = 21) => {
      let id = "";
      let i = size;
      while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
      }
      return id;
    };
    module.exports = { nanoid, customAlphabet };
  }
});

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/postcss/lib/previous-map.js
var require_previous_map = __commonJS({
  "node_modules/postcss/lib/previous-map.js"(exports, module) {
    "use strict";
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map_js();
    var { existsSync, readFileSync } = require_fs();
    var { dirname, join } = require_path();
    function fromBase64(str) {
      if (Buffer) {
        return Buffer.from(str, "base64").toString();
      } else {
        return window.atob(str);
      }
    }
    var PreviousMap = class {
      constructor(css, opts) {
        if (opts.map === false)
          return;
        this.loadAnnotation(css);
        this.inline = this.startWith(this.annotation, "data:");
        let prev = opts.map ? opts.map.prev : void 0;
        let text = this.loadMap(opts.from, prev);
        if (!this.mapFile && opts.from) {
          this.mapFile = opts.from;
        }
        if (this.mapFile)
          this.root = dirname(this.mapFile);
        if (text)
          this.text = text;
      }
      consumer() {
        if (!this.consumerCache) {
          this.consumerCache = new SourceMapConsumer(this.text);
        }
        return this.consumerCache;
      }
      withContent() {
        return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
      }
      startWith(string, start) {
        if (!string)
          return false;
        return string.substr(0, start.length) === start;
      }
      getAnnotationURL(sourceMapString) {
        return sourceMapString.replace(/^\/\*\s*# sourceMappingURL=/, "").trim();
      }
      loadAnnotation(css) {
        let comments = css.match(/\/\*\s*# sourceMappingURL=/gm);
        if (!comments)
          return;
        let start = css.lastIndexOf(comments.pop());
        let end = css.indexOf("*/", start);
        if (start > -1 && end > -1) {
          this.annotation = this.getAnnotationURL(css.substring(start, end));
        }
      }
      decodeInline(text) {
        let baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/;
        let baseUri = /^data:application\/json;base64,/;
        let charsetUri = /^data:application\/json;charset=utf-?8,/;
        let uri = /^data:application\/json,/;
        if (charsetUri.test(text) || uri.test(text)) {
          return decodeURIComponent(text.substr(RegExp.lastMatch.length));
        }
        if (baseCharsetUri.test(text) || baseUri.test(text)) {
          return fromBase64(text.substr(RegExp.lastMatch.length));
        }
        let encoding = text.match(/data:application\/json;([^,]+),/)[1];
        throw new Error("Unsupported source map encoding " + encoding);
      }
      loadFile(path) {
        this.root = dirname(path);
        if (existsSync(path)) {
          this.mapFile = path;
          return readFileSync(path, "utf-8").toString().trim();
        }
      }
      loadMap(file, prev) {
        if (prev === false)
          return false;
        if (prev) {
          if (typeof prev === "string") {
            return prev;
          } else if (typeof prev === "function") {
            let prevPath = prev(file);
            if (prevPath) {
              let map = this.loadFile(prevPath);
              if (!map) {
                throw new Error(
                  "Unable to load previous source map: " + prevPath.toString()
                );
              }
              return map;
            }
          } else if (prev instanceof SourceMapConsumer) {
            return SourceMapGenerator.fromSourceMap(prev).toString();
          } else if (prev instanceof SourceMapGenerator) {
            return prev.toString();
          } else if (this.isMap(prev)) {
            return JSON.stringify(prev);
          } else {
            throw new Error(
              "Unsupported previous source map format: " + prev.toString()
            );
          }
        } else if (this.inline) {
          return this.decodeInline(this.annotation);
        } else if (this.annotation) {
          let map = this.annotation;
          if (file)
            map = join(dirname(file), map);
          return this.loadFile(map);
        }
      }
      isMap(map) {
        if (typeof map !== "object")
          return false;
        return typeof map.mappings === "string" || typeof map._mappings === "string" || Array.isArray(map.sections);
      }
    };
    module.exports = PreviousMap;
    PreviousMap.default = PreviousMap;
  }
});

// node_modules/postcss/lib/input.js
var require_input = __commonJS({
  "node_modules/postcss/lib/input.js"(exports, module) {
    "use strict";
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map_js();
    var { fileURLToPath, pathToFileURL } = require_url();
    var { resolve, isAbsolute } = require_path();
    var { nanoid } = require_non_secure();
    var terminalHighlight = require_terminal_highlight();
    var CssSyntaxError = require_css_syntax_error();
    var PreviousMap = require_previous_map();
    var fromOffsetCache = Symbol("fromOffsetCache");
    var sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
    var pathAvailable = Boolean(resolve && isAbsolute);
    var Input = class {
      constructor(css, opts = {}) {
        if (css === null || typeof css === "undefined" || typeof css === "object" && !css.toString) {
          throw new Error(`PostCSS received ${css} instead of CSS string`);
        }
        this.css = css.toString();
        if (this.css[0] === "\uFEFF" || this.css[0] === "￾") {
          this.hasBOM = true;
          this.css = this.css.slice(1);
        } else {
          this.hasBOM = false;
        }
        if (opts.from) {
          if (!pathAvailable || /^\w+:\/\//.test(opts.from) || isAbsolute(opts.from)) {
            this.file = opts.from;
          } else {
            this.file = resolve(opts.from);
          }
        }
        if (pathAvailable && sourceMapAvailable) {
          let map = new PreviousMap(this.css, opts);
          if (map.text) {
            this.map = map;
            let file = map.consumer().file;
            if (!this.file && file)
              this.file = this.mapResolve(file);
          }
        }
        if (!this.file) {
          this.id = "<input css " + nanoid(6) + ">";
        }
        if (this.map)
          this.map.file = this.from;
      }
      fromOffset(offset) {
        let lastLine, lineToIndex;
        if (!this[fromOffsetCache]) {
          let lines = this.css.split("\n");
          lineToIndex = new Array(lines.length);
          let prevIndex = 0;
          for (let i = 0, l = lines.length; i < l; i++) {
            lineToIndex[i] = prevIndex;
            prevIndex += lines[i].length + 1;
          }
          this[fromOffsetCache] = lineToIndex;
        } else {
          lineToIndex = this[fromOffsetCache];
        }
        lastLine = lineToIndex[lineToIndex.length - 1];
        let min = 0;
        if (offset >= lastLine) {
          min = lineToIndex.length - 1;
        } else {
          let max = lineToIndex.length - 2;
          let mid;
          while (min < max) {
            mid = min + (max - min >> 1);
            if (offset < lineToIndex[mid]) {
              max = mid - 1;
            } else if (offset >= lineToIndex[mid + 1]) {
              min = mid + 1;
            } else {
              min = mid;
              break;
            }
          }
        }
        return {
          line: min + 1,
          col: offset - lineToIndex[min] + 1
        };
      }
      error(message, line, column, opts = {}) {
        let result, endLine, endColumn;
        if (line && typeof line === "object") {
          let start = line;
          let end = column;
          if (typeof start.offset === "number") {
            let pos = this.fromOffset(start.offset);
            line = pos.line;
            column = pos.col;
          } else {
            line = start.line;
            column = start.column;
          }
          if (typeof end.offset === "number") {
            let pos = this.fromOffset(end.offset);
            endLine = pos.line;
            endColumn = pos.col;
          } else {
            endLine = end.line;
            endColumn = end.column;
          }
        } else if (!column) {
          let pos = this.fromOffset(line);
          line = pos.line;
          column = pos.col;
        }
        let origin = this.origin(line, column, endLine, endColumn);
        if (origin) {
          result = new CssSyntaxError(
            message,
            origin.endLine === void 0 ? origin.line : { line: origin.line, column: origin.column },
            origin.endLine === void 0 ? origin.column : { line: origin.endLine, column: origin.endColumn },
            origin.source,
            origin.file,
            opts.plugin
          );
        } else {
          result = new CssSyntaxError(
            message,
            endLine === void 0 ? line : { line, column },
            endLine === void 0 ? column : { line: endLine, column: endColumn },
            this.css,
            this.file,
            opts.plugin
          );
        }
        result.input = { line, column, endLine, endColumn, source: this.css };
        if (this.file) {
          if (pathToFileURL) {
            result.input.url = pathToFileURL(this.file).toString();
          }
          result.input.file = this.file;
        }
        return result;
      }
      origin(line, column, endLine, endColumn) {
        if (!this.map)
          return false;
        let consumer = this.map.consumer();
        let from = consumer.originalPositionFor({ line, column });
        if (!from.source)
          return false;
        let to;
        if (typeof endLine === "number") {
          to = consumer.originalPositionFor({ line: endLine, column: endColumn });
        }
        let fromUrl;
        if (isAbsolute(from.source)) {
          fromUrl = pathToFileURL(from.source);
        } else {
          fromUrl = new URL(
            from.source,
            this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)
          );
        }
        let result = {
          url: fromUrl.toString(),
          line: from.line,
          column: from.column,
          endLine: to && to.line,
          endColumn: to && to.column
        };
        if (fromUrl.protocol === "file:") {
          if (fileURLToPath) {
            result.file = fileURLToPath(fromUrl);
          } else {
            throw new Error(`file: protocol is not available in this PostCSS build`);
          }
        }
        let source = consumer.sourceContentFor(from.source);
        if (source)
          result.source = source;
        return result;
      }
      mapResolve(file) {
        if (/^\w+:\/\//.test(file)) {
          return file;
        }
        return resolve(this.map.consumer().sourceRoot || this.map.root || ".", file);
      }
      get from() {
        return this.file || this.id;
      }
      toJSON() {
        let json = {};
        for (let name of ["hasBOM", "css", "file", "id"]) {
          if (this[name] != null) {
            json[name] = this[name];
          }
        }
        if (this.map) {
          json.map = { ...this.map };
          if (json.map.consumerCache) {
            json.map.consumerCache = void 0;
          }
        }
        return json;
      }
    };
    module.exports = Input;
    Input.default = Input;
    if (terminalHighlight && terminalHighlight.registerInput) {
      terminalHighlight.registerInput(Input);
    }
  }
});

// node_modules/postcss/lib/map-generator.js
var require_map_generator = __commonJS({
  "node_modules/postcss/lib/map-generator.js"(exports, module) {
    "use strict";
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map_js();
    var { dirname, resolve, relative, sep } = require_path();
    var { pathToFileURL } = require_url();
    var Input = require_input();
    var sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
    var pathAvailable = Boolean(dirname && resolve && relative && sep);
    var MapGenerator = class {
      constructor(stringify, root, opts, cssString) {
        this.stringify = stringify;
        this.mapOpts = opts.map || {};
        this.root = root;
        this.opts = opts;
        this.css = cssString;
        this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;
      }
      isMap() {
        if (typeof this.opts.map !== "undefined") {
          return !!this.opts.map;
        }
        return this.previous().length > 0;
      }
      previous() {
        if (!this.previousMaps) {
          this.previousMaps = [];
          if (this.root) {
            this.root.walk((node) => {
              if (node.source && node.source.input.map) {
                let map = node.source.input.map;
                if (!this.previousMaps.includes(map)) {
                  this.previousMaps.push(map);
                }
              }
            });
          } else {
            let input = new Input(this.css, this.opts);
            if (input.map)
              this.previousMaps.push(input.map);
          }
        }
        return this.previousMaps;
      }
      isInline() {
        if (typeof this.mapOpts.inline !== "undefined") {
          return this.mapOpts.inline;
        }
        let annotation = this.mapOpts.annotation;
        if (typeof annotation !== "undefined" && annotation !== true) {
          return false;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.inline);
        }
        return true;
      }
      isSourcesContent() {
        if (typeof this.mapOpts.sourcesContent !== "undefined") {
          return this.mapOpts.sourcesContent;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.withContent());
        }
        return true;
      }
      clearAnnotation() {
        if (this.mapOpts.annotation === false)
          return;
        if (this.root) {
          let node;
          for (let i = this.root.nodes.length - 1; i >= 0; i--) {
            node = this.root.nodes[i];
            if (node.type !== "comment")
              continue;
            if (node.text.indexOf("# sourceMappingURL=") === 0) {
              this.root.removeChild(i);
            }
          }
        } else if (this.css) {
          this.css = this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm, "");
        }
      }
      setSourcesContent() {
        let already = {};
        if (this.root) {
          this.root.walk((node) => {
            if (node.source) {
              let from = node.source.input.from;
              if (from && !already[from]) {
                already[from] = true;
                let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));
                this.map.setSourceContent(fromUrl, node.source.input.css);
              }
            }
          });
        } else if (this.css) {
          let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>";
          this.map.setSourceContent(from, this.css);
        }
      }
      applyPrevMaps() {
        for (let prev of this.previous()) {
          let from = this.toUrl(this.path(prev.file));
          let root = prev.root || dirname(prev.file);
          let map;
          if (this.mapOpts.sourcesContent === false) {
            map = new SourceMapConsumer(prev.text);
            if (map.sourcesContent) {
              map.sourcesContent = map.sourcesContent.map(() => null);
            }
          } else {
            map = prev.consumer();
          }
          this.map.applySourceMap(map, from, this.toUrl(this.path(root)));
        }
      }
      isAnnotation() {
        if (this.isInline()) {
          return true;
        }
        if (typeof this.mapOpts.annotation !== "undefined") {
          return this.mapOpts.annotation;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.annotation);
        }
        return true;
      }
      toBase64(str) {
        if (Buffer) {
          return Buffer.from(str).toString("base64");
        } else {
          return window.btoa(unescape(encodeURIComponent(str)));
        }
      }
      addAnnotation() {
        let content;
        if (this.isInline()) {
          content = "data:application/json;base64," + this.toBase64(this.map.toString());
        } else if (typeof this.mapOpts.annotation === "string") {
          content = this.mapOpts.annotation;
        } else if (typeof this.mapOpts.annotation === "function") {
          content = this.mapOpts.annotation(this.opts.to, this.root);
        } else {
          content = this.outputFile() + ".map";
        }
        let eol = "\n";
        if (this.css.includes("\r\n"))
          eol = "\r\n";
        this.css += eol + "/*# sourceMappingURL=" + content + " */";
      }
      outputFile() {
        if (this.opts.to) {
          return this.path(this.opts.to);
        } else if (this.opts.from) {
          return this.path(this.opts.from);
        } else {
          return "to.css";
        }
      }
      generateMap() {
        if (this.root) {
          this.generateString();
        } else if (this.previous().length === 1) {
          let prev = this.previous()[0].consumer();
          prev.file = this.outputFile();
          this.map = SourceMapGenerator.fromSourceMap(prev);
        } else {
          this.map = new SourceMapGenerator({ file: this.outputFile() });
          this.map.addMapping({
            source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>",
            generated: { line: 1, column: 0 },
            original: { line: 1, column: 0 }
          });
        }
        if (this.isSourcesContent())
          this.setSourcesContent();
        if (this.root && this.previous().length > 0)
          this.applyPrevMaps();
        if (this.isAnnotation())
          this.addAnnotation();
        if (this.isInline()) {
          return [this.css];
        } else {
          return [this.css, this.map];
        }
      }
      path(file) {
        if (file.indexOf("<") === 0)
          return file;
        if (/^\w+:\/\//.test(file))
          return file;
        if (this.mapOpts.absolute)
          return file;
        let from = this.opts.to ? dirname(this.opts.to) : ".";
        if (typeof this.mapOpts.annotation === "string") {
          from = dirname(resolve(from, this.mapOpts.annotation));
        }
        file = relative(from, file);
        return file;
      }
      toUrl(path) {
        if (sep === "\\") {
          path = path.replace(/\\/g, "/");
        }
        return encodeURI(path).replace(/[#?]/g, encodeURIComponent);
      }
      toFileUrl(path) {
        if (pathToFileURL) {
          return pathToFileURL(path).toString();
        } else {
          throw new Error(
            "`map.absolute` option is not available in this PostCSS build"
          );
        }
      }
      sourcePath(node) {
        if (this.mapOpts.from) {
          return this.toUrl(this.mapOpts.from);
        } else if (this.usesFileUrls) {
          return this.toFileUrl(node.source.input.from);
        } else {
          return this.toUrl(this.path(node.source.input.from));
        }
      }
      generateString() {
        this.css = "";
        this.map = new SourceMapGenerator({ file: this.outputFile() });
        let line = 1;
        let column = 1;
        let noSource = "<no source>";
        let mapping = {
          source: "",
          generated: { line: 0, column: 0 },
          original: { line: 0, column: 0 }
        };
        let lines, last;
        this.stringify(this.root, (str, node, type) => {
          this.css += str;
          if (node && type !== "end") {
            mapping.generated.line = line;
            mapping.generated.column = column - 1;
            if (node.source && node.source.start) {
              mapping.source = this.sourcePath(node);
              mapping.original.line = node.source.start.line;
              mapping.original.column = node.source.start.column - 1;
              this.map.addMapping(mapping);
            } else {
              mapping.source = noSource;
              mapping.original.line = 1;
              mapping.original.column = 0;
              this.map.addMapping(mapping);
            }
          }
          lines = str.match(/\n/g);
          if (lines) {
            line += lines.length;
            last = str.lastIndexOf("\n");
            column = str.length - last;
          } else {
            column += str.length;
          }
          if (node && type !== "start") {
            let p = node.parent || { raws: {} };
            let childless = node.type === "decl" || node.type === "atrule" && !node.nodes;
            if (!childless || node !== p.last || p.raws.semicolon) {
              if (node.source && node.source.end) {
                mapping.source = this.sourcePath(node);
                mapping.original.line = node.source.end.line;
                mapping.original.column = node.source.end.column - 1;
                mapping.generated.line = line;
                mapping.generated.column = column - 2;
                this.map.addMapping(mapping);
              } else {
                mapping.source = noSource;
                mapping.original.line = 1;
                mapping.original.column = 0;
                mapping.generated.line = line;
                mapping.generated.column = column - 1;
                this.map.addMapping(mapping);
              }
            }
          }
        });
      }
      generate() {
        this.clearAnnotation();
        if (pathAvailable && sourceMapAvailable && this.isMap()) {
          return this.generateMap();
        } else {
          let result = "";
          this.stringify(this.root, (i) => {
            result += i;
          });
          return [result];
        }
      }
    };
    module.exports = MapGenerator;
  }
});

// node_modules/postcss/lib/comment.js
var require_comment = __commonJS({
  "node_modules/postcss/lib/comment.js"(exports, module) {
    "use strict";
    var Node = require_node();
    var Comment = class extends Node {
      constructor(defaults) {
        super(defaults);
        this.type = "comment";
      }
    };
    module.exports = Comment;
    Comment.default = Comment;
  }
});

// node_modules/postcss/lib/container.js
var require_container = __commonJS({
  "node_modules/postcss/lib/container.js"(exports, module) {
    "use strict";
    var { isClean, my } = require_symbols();
    var Declaration = require_declaration();
    var Comment = require_comment();
    var Node = require_node();
    var parse;
    var Rule;
    var AtRule;
    var Root;
    function cleanSource(nodes) {
      return nodes.map((i) => {
        if (i.nodes)
          i.nodes = cleanSource(i.nodes);
        delete i.source;
        return i;
      });
    }
    function markDirtyUp(node) {
      node[isClean] = false;
      if (node.proxyOf.nodes) {
        for (let i of node.proxyOf.nodes) {
          markDirtyUp(i);
        }
      }
    }
    var Container = class extends Node {
      push(child) {
        child.parent = this;
        this.proxyOf.nodes.push(child);
        return this;
      }
      each(callback) {
        if (!this.proxyOf.nodes)
          return void 0;
        let iterator = this.getIterator();
        let index, result;
        while (this.indexes[iterator] < this.proxyOf.nodes.length) {
          index = this.indexes[iterator];
          result = callback(this.proxyOf.nodes[index], index);
          if (result === false)
            break;
          this.indexes[iterator] += 1;
        }
        delete this.indexes[iterator];
        return result;
      }
      walk(callback) {
        return this.each((child, i) => {
          let result;
          try {
            result = callback(child, i);
          } catch (e) {
            throw child.addToError(e);
          }
          if (result !== false && child.walk) {
            result = child.walk(callback);
          }
          return result;
        });
      }
      walkDecls(prop, callback) {
        if (!callback) {
          callback = prop;
          return this.walk((child, i) => {
            if (child.type === "decl") {
              return callback(child, i);
            }
          });
        }
        if (prop instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "decl" && prop.test(child.prop)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "decl" && child.prop === prop) {
            return callback(child, i);
          }
        });
      }
      walkRules(selector, callback) {
        if (!callback) {
          callback = selector;
          return this.walk((child, i) => {
            if (child.type === "rule") {
              return callback(child, i);
            }
          });
        }
        if (selector instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "rule" && selector.test(child.selector)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "rule" && child.selector === selector) {
            return callback(child, i);
          }
        });
      }
      walkAtRules(name, callback) {
        if (!callback) {
          callback = name;
          return this.walk((child, i) => {
            if (child.type === "atrule") {
              return callback(child, i);
            }
          });
        }
        if (name instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "atrule" && name.test(child.name)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "atrule" && child.name === name) {
            return callback(child, i);
          }
        });
      }
      walkComments(callback) {
        return this.walk((child, i) => {
          if (child.type === "comment") {
            return callback(child, i);
          }
        });
      }
      append(...children) {
        for (let child of children) {
          let nodes = this.normalize(child, this.last);
          for (let node of nodes)
            this.proxyOf.nodes.push(node);
        }
        this.markDirty();
        return this;
      }
      prepend(...children) {
        children = children.reverse();
        for (let child of children) {
          let nodes = this.normalize(child, this.first, "prepend").reverse();
          for (let node of nodes)
            this.proxyOf.nodes.unshift(node);
          for (let id in this.indexes) {
            this.indexes[id] = this.indexes[id] + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      cleanRaws(keepBetween) {
        super.cleanRaws(keepBetween);
        if (this.nodes) {
          for (let node of this.nodes)
            node.cleanRaws(keepBetween);
        }
      }
      insertBefore(exist, add) {
        let existIndex = this.index(exist);
        let type = existIndex === 0 ? "prepend" : false;
        let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();
        existIndex = this.index(exist);
        for (let node of nodes)
          this.proxyOf.nodes.splice(existIndex, 0, node);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (existIndex <= index) {
            this.indexes[id] = index + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      insertAfter(exist, add) {
        let existIndex = this.index(exist);
        let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();
        existIndex = this.index(exist);
        for (let node of nodes)
          this.proxyOf.nodes.splice(existIndex + 1, 0, node);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (existIndex < index) {
            this.indexes[id] = index + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      removeChild(child) {
        child = this.index(child);
        this.proxyOf.nodes[child].parent = void 0;
        this.proxyOf.nodes.splice(child, 1);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (index >= child) {
            this.indexes[id] = index - 1;
          }
        }
        this.markDirty();
        return this;
      }
      removeAll() {
        for (let node of this.proxyOf.nodes)
          node.parent = void 0;
        this.proxyOf.nodes = [];
        this.markDirty();
        return this;
      }
      replaceValues(pattern, opts, callback) {
        if (!callback) {
          callback = opts;
          opts = {};
        }
        this.walkDecls((decl) => {
          if (opts.props && !opts.props.includes(decl.prop))
            return;
          if (opts.fast && !decl.value.includes(opts.fast))
            return;
          decl.value = decl.value.replace(pattern, callback);
        });
        this.markDirty();
        return this;
      }
      every(condition) {
        return this.nodes.every(condition);
      }
      some(condition) {
        return this.nodes.some(condition);
      }
      index(child) {
        if (typeof child === "number")
          return child;
        if (child.proxyOf)
          child = child.proxyOf;
        return this.proxyOf.nodes.indexOf(child);
      }
      get first() {
        if (!this.proxyOf.nodes)
          return void 0;
        return this.proxyOf.nodes[0];
      }
      get last() {
        if (!this.proxyOf.nodes)
          return void 0;
        return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];
      }
      normalize(nodes, sample) {
        if (typeof nodes === "string") {
          nodes = cleanSource(parse(nodes).nodes);
        } else if (Array.isArray(nodes)) {
          nodes = nodes.slice(0);
          for (let i of nodes) {
            if (i.parent)
              i.parent.removeChild(i, "ignore");
          }
        } else if (nodes.type === "root" && this.type !== "document") {
          nodes = nodes.nodes.slice(0);
          for (let i of nodes) {
            if (i.parent)
              i.parent.removeChild(i, "ignore");
          }
        } else if (nodes.type) {
          nodes = [nodes];
        } else if (nodes.prop) {
          if (typeof nodes.value === "undefined") {
            throw new Error("Value field is missed in node creation");
          } else if (typeof nodes.value !== "string") {
            nodes.value = String(nodes.value);
          }
          nodes = [new Declaration(nodes)];
        } else if (nodes.selector) {
          nodes = [new Rule(nodes)];
        } else if (nodes.name) {
          nodes = [new AtRule(nodes)];
        } else if (nodes.text) {
          nodes = [new Comment(nodes)];
        } else {
          throw new Error("Unknown node type in node creation");
        }
        let processed = nodes.map((i) => {
          if (!i[my])
            Container.rebuild(i);
          i = i.proxyOf;
          if (i.parent)
            i.parent.removeChild(i);
          if (i[isClean])
            markDirtyUp(i);
          if (typeof i.raws.before === "undefined") {
            if (sample && typeof sample.raws.before !== "undefined") {
              i.raws.before = sample.raws.before.replace(/\S/g, "");
            }
          }
          i.parent = this.proxyOf;
          return i;
        });
        return processed;
      }
      getProxyProcessor() {
        return {
          set(node, prop, value) {
            if (node[prop] === value)
              return true;
            node[prop] = value;
            if (prop === "name" || prop === "params" || prop === "selector") {
              node.markDirty();
            }
            return true;
          },
          get(node, prop) {
            if (prop === "proxyOf") {
              return node;
            } else if (!node[prop]) {
              return node[prop];
            } else if (prop === "each" || typeof prop === "string" && prop.startsWith("walk")) {
              return (...args) => {
                return node[prop](
                  ...args.map((i) => {
                    if (typeof i === "function") {
                      return (child, index) => i(child.toProxy(), index);
                    } else {
                      return i;
                    }
                  })
                );
              };
            } else if (prop === "every" || prop === "some") {
              return (cb) => {
                return node[prop](
                  (child, ...other) => cb(child.toProxy(), ...other)
                );
              };
            } else if (prop === "root") {
              return () => node.root().toProxy();
            } else if (prop === "nodes") {
              return node.nodes.map((i) => i.toProxy());
            } else if (prop === "first" || prop === "last") {
              return node[prop].toProxy();
            } else {
              return node[prop];
            }
          }
        };
      }
      getIterator() {
        if (!this.lastEach)
          this.lastEach = 0;
        if (!this.indexes)
          this.indexes = {};
        this.lastEach += 1;
        let iterator = this.lastEach;
        this.indexes[iterator] = 0;
        return iterator;
      }
    };
    Container.registerParse = (dependant) => {
      parse = dependant;
    };
    Container.registerRule = (dependant) => {
      Rule = dependant;
    };
    Container.registerAtRule = (dependant) => {
      AtRule = dependant;
    };
    Container.registerRoot = (dependant) => {
      Root = dependant;
    };
    module.exports = Container;
    Container.default = Container;
    Container.rebuild = (node) => {
      if (node.type === "atrule") {
        Object.setPrototypeOf(node, AtRule.prototype);
      } else if (node.type === "rule") {
        Object.setPrototypeOf(node, Rule.prototype);
      } else if (node.type === "decl") {
        Object.setPrototypeOf(node, Declaration.prototype);
      } else if (node.type === "comment") {
        Object.setPrototypeOf(node, Comment.prototype);
      } else if (node.type === "root") {
        Object.setPrototypeOf(node, Root.prototype);
      }
      node[my] = true;
      if (node.nodes) {
        node.nodes.forEach((child) => {
          Container.rebuild(child);
        });
      }
    };
  }
});

// node_modules/postcss/lib/document.js
var require_document = __commonJS({
  "node_modules/postcss/lib/document.js"(exports, module) {
    "use strict";
    var Container = require_container();
    var LazyResult;
    var Processor;
    var Document = class extends Container {
      constructor(defaults) {
        super({ type: "document", ...defaults });
        if (!this.nodes) {
          this.nodes = [];
        }
      }
      toResult(opts = {}) {
        let lazy = new LazyResult(new Processor(), this, opts);
        return lazy.stringify();
      }
    };
    Document.registerLazyResult = (dependant) => {
      LazyResult = dependant;
    };
    Document.registerProcessor = (dependant) => {
      Processor = dependant;
    };
    module.exports = Document;
    Document.default = Document;
  }
});

// node_modules/postcss/lib/warn-once.js
var require_warn_once = __commonJS({
  "node_modules/postcss/lib/warn-once.js"(exports, module) {
    "use strict";
    var printed = {};
    module.exports = function warnOnce(message) {
      if (printed[message])
        return;
      printed[message] = true;
      if (typeof console !== "undefined" && console.warn) {
        console.warn(message);
      }
    };
  }
});

// node_modules/postcss/lib/warning.js
var require_warning = __commonJS({
  "node_modules/postcss/lib/warning.js"(exports, module) {
    "use strict";
    var Warning = class {
      constructor(text, opts = {}) {
        this.type = "warning";
        this.text = text;
        if (opts.node && opts.node.source) {
          let range = opts.node.rangeBy(opts);
          this.line = range.start.line;
          this.column = range.start.column;
          this.endLine = range.end.line;
          this.endColumn = range.end.column;
        }
        for (let opt in opts)
          this[opt] = opts[opt];
      }
      toString() {
        if (this.node) {
          return this.node.error(this.text, {
            plugin: this.plugin,
            index: this.index,
            word: this.word
          }).message;
        }
        if (this.plugin) {
          return this.plugin + ": " + this.text;
        }
        return this.text;
      }
    };
    module.exports = Warning;
    Warning.default = Warning;
  }
});

// node_modules/postcss/lib/result.js
var require_result = __commonJS({
  "node_modules/postcss/lib/result.js"(exports, module) {
    "use strict";
    var Warning = require_warning();
    var Result = class {
      constructor(processor, root, opts) {
        this.processor = processor;
        this.messages = [];
        this.root = root;
        this.opts = opts;
        this.css = void 0;
        this.map = void 0;
      }
      toString() {
        return this.css;
      }
      warn(text, opts = {}) {
        if (!opts.plugin) {
          if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
            opts.plugin = this.lastPlugin.postcssPlugin;
          }
        }
        let warning = new Warning(text, opts);
        this.messages.push(warning);
        return warning;
      }
      warnings() {
        return this.messages.filter((i) => i.type === "warning");
      }
      get content() {
        return this.css;
      }
    };
    module.exports = Result;
    Result.default = Result;
  }
});

// node_modules/postcss/lib/tokenize.js
var require_tokenize = __commonJS({
  "node_modules/postcss/lib/tokenize.js"(exports, module) {
    "use strict";
    var SINGLE_QUOTE = "'".charCodeAt(0);
    var DOUBLE_QUOTE = '"'.charCodeAt(0);
    var BACKSLASH = "\\".charCodeAt(0);
    var SLASH = "/".charCodeAt(0);
    var NEWLINE = "\n".charCodeAt(0);
    var SPACE = " ".charCodeAt(0);
    var FEED = "\f".charCodeAt(0);
    var TAB = "	".charCodeAt(0);
    var CR = "\r".charCodeAt(0);
    var OPEN_SQUARE = "[".charCodeAt(0);
    var CLOSE_SQUARE = "]".charCodeAt(0);
    var OPEN_PARENTHESES = "(".charCodeAt(0);
    var CLOSE_PARENTHESES = ")".charCodeAt(0);
    var OPEN_CURLY = "{".charCodeAt(0);
    var CLOSE_CURLY = "}".charCodeAt(0);
    var SEMICOLON = ";".charCodeAt(0);
    var ASTERISK = "*".charCodeAt(0);
    var COLON = ":".charCodeAt(0);
    var AT = "@".charCodeAt(0);
    var RE_AT_END = /[\t\n\f\r "#'()/;[\\\]{}]/g;
    var RE_WORD_END = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g;
    var RE_BAD_BRACKET = /.[\n"'(/\\]/;
    var RE_HEX_ESCAPE = /[\da-f]/i;
    module.exports = function tokenizer(input, options = {}) {
      let css = input.css.valueOf();
      let ignore = options.ignoreErrors;
      let code, next, quote, content, escape;
      let escaped, escapePos, prev, n, currentToken;
      let length = css.length;
      let pos = 0;
      let buffer = [];
      let returned = [];
      function position() {
        return pos;
      }
      function unclosed(what) {
        throw input.error("Unclosed " + what, pos);
      }
      function endOfFile() {
        return returned.length === 0 && pos >= length;
      }
      function nextToken(opts) {
        if (returned.length)
          return returned.pop();
        if (pos >= length)
          return;
        let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;
        code = css.charCodeAt(pos);
        switch (code) {
          case NEWLINE:
          case SPACE:
          case TAB:
          case CR:
          case FEED: {
            next = pos;
            do {
              next += 1;
              code = css.charCodeAt(next);
            } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);
            currentToken = ["space", css.slice(pos, next)];
            pos = next - 1;
            break;
          }
          case OPEN_SQUARE:
          case CLOSE_SQUARE:
          case OPEN_CURLY:
          case CLOSE_CURLY:
          case COLON:
          case SEMICOLON:
          case CLOSE_PARENTHESES: {
            let controlChar = String.fromCharCode(code);
            currentToken = [controlChar, controlChar, pos];
            break;
          }
          case OPEN_PARENTHESES: {
            prev = buffer.length ? buffer.pop()[1] : "";
            n = css.charCodeAt(pos + 1);
            if (prev === "url" && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {
              next = pos;
              do {
                escaped = false;
                next = css.indexOf(")", next + 1);
                if (next === -1) {
                  if (ignore || ignoreUnclosed) {
                    next = pos;
                    break;
                  } else {
                    unclosed("bracket");
                  }
                }
                escapePos = next;
                while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                  escapePos -= 1;
                  escaped = !escaped;
                }
              } while (escaped);
              currentToken = ["brackets", css.slice(pos, next + 1), pos, next];
              pos = next;
            } else {
              next = css.indexOf(")", pos + 1);
              content = css.slice(pos, next + 1);
              if (next === -1 || RE_BAD_BRACKET.test(content)) {
                currentToken = ["(", "(", pos];
              } else {
                currentToken = ["brackets", content, pos, next];
                pos = next;
              }
            }
            break;
          }
          case SINGLE_QUOTE:
          case DOUBLE_QUOTE: {
            quote = code === SINGLE_QUOTE ? "'" : '"';
            next = pos;
            do {
              escaped = false;
              next = css.indexOf(quote, next + 1);
              if (next === -1) {
                if (ignore || ignoreUnclosed) {
                  next = pos + 1;
                  break;
                } else {
                  unclosed("string");
                }
              }
              escapePos = next;
              while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                escapePos -= 1;
                escaped = !escaped;
              }
            } while (escaped);
            currentToken = ["string", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          case AT: {
            RE_AT_END.lastIndex = pos + 1;
            RE_AT_END.test(css);
            if (RE_AT_END.lastIndex === 0) {
              next = css.length - 1;
            } else {
              next = RE_AT_END.lastIndex - 2;
            }
            currentToken = ["at-word", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          case BACKSLASH: {
            next = pos;
            escape = true;
            while (css.charCodeAt(next + 1) === BACKSLASH) {
              next += 1;
              escape = !escape;
            }
            code = css.charCodeAt(next + 1);
            if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {
              next += 1;
              if (RE_HEX_ESCAPE.test(css.charAt(next))) {
                while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
                  next += 1;
                }
                if (css.charCodeAt(next + 1) === SPACE) {
                  next += 1;
                }
              }
            }
            currentToken = ["word", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          default: {
            if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
              next = css.indexOf("*/", pos + 2) + 1;
              if (next === 0) {
                if (ignore || ignoreUnclosed) {
                  next = css.length;
                } else {
                  unclosed("comment");
                }
              }
              currentToken = ["comment", css.slice(pos, next + 1), pos, next];
              pos = next;
            } else {
              RE_WORD_END.lastIndex = pos + 1;
              RE_WORD_END.test(css);
              if (RE_WORD_END.lastIndex === 0) {
                next = css.length - 1;
              } else {
                next = RE_WORD_END.lastIndex - 2;
              }
              currentToken = ["word", css.slice(pos, next + 1), pos, next];
              buffer.push(currentToken);
              pos = next;
            }
            break;
          }
        }
        pos++;
        return currentToken;
      }
      function back(token) {
        returned.push(token);
      }
      return {
        back,
        nextToken,
        endOfFile,
        position
      };
    };
  }
});

// node_modules/postcss/lib/at-rule.js
var require_at_rule = __commonJS({
  "node_modules/postcss/lib/at-rule.js"(exports, module) {
    "use strict";
    var Container = require_container();
    var AtRule = class extends Container {
      constructor(defaults) {
        super(defaults);
        this.type = "atrule";
      }
      append(...children) {
        if (!this.proxyOf.nodes)
          this.nodes = [];
        return super.append(...children);
      }
      prepend(...children) {
        if (!this.proxyOf.nodes)
          this.nodes = [];
        return super.prepend(...children);
      }
    };
    module.exports = AtRule;
    AtRule.default = AtRule;
    Container.registerAtRule(AtRule);
  }
});

// node_modules/postcss/lib/root.js
var require_root = __commonJS({
  "node_modules/postcss/lib/root.js"(exports, module) {
    "use strict";
    var Container = require_container();
    var LazyResult;
    var Processor;
    var Root = class extends Container {
      constructor(defaults) {
        super(defaults);
        this.type = "root";
        if (!this.nodes)
          this.nodes = [];
      }
      removeChild(child, ignore) {
        let index = this.index(child);
        if (!ignore && index === 0 && this.nodes.length > 1) {
          this.nodes[1].raws.before = this.nodes[index].raws.before;
        }
        return super.removeChild(child);
      }
      normalize(child, sample, type) {
        let nodes = super.normalize(child);
        if (sample) {
          if (type === "prepend") {
            if (this.nodes.length > 1) {
              sample.raws.before = this.nodes[1].raws.before;
            } else {
              delete sample.raws.before;
            }
          } else if (this.first !== sample) {
            for (let node of nodes) {
              node.raws.before = sample.raws.before;
            }
          }
        }
        return nodes;
      }
      toResult(opts = {}) {
        let lazy = new LazyResult(new Processor(), this, opts);
        return lazy.stringify();
      }
    };
    Root.registerLazyResult = (dependant) => {
      LazyResult = dependant;
    };
    Root.registerProcessor = (dependant) => {
      Processor = dependant;
    };
    module.exports = Root;
    Root.default = Root;
    Container.registerRoot(Root);
  }
});

// node_modules/postcss/lib/list.js
var require_list = __commonJS({
  "node_modules/postcss/lib/list.js"(exports, module) {
    "use strict";
    var list = {
      split(string, separators, last) {
        let array = [];
        let current = "";
        let split = false;
        let func = 0;
        let inQuote = false;
        let prevQuote = "";
        let escape = false;
        for (let letter of string) {
          if (escape) {
            escape = false;
          } else if (letter === "\\") {
            escape = true;
          } else if (inQuote) {
            if (letter === prevQuote) {
              inQuote = false;
            }
          } else if (letter === '"' || letter === "'") {
            inQuote = true;
            prevQuote = letter;
          } else if (letter === "(") {
            func += 1;
          } else if (letter === ")") {
            if (func > 0)
              func -= 1;
          } else if (func === 0) {
            if (separators.includes(letter))
              split = true;
          }
          if (split) {
            if (current !== "")
              array.push(current.trim());
            current = "";
            split = false;
          } else {
            current += letter;
          }
        }
        if (last || current !== "")
          array.push(current.trim());
        return array;
      },
      space(string) {
        let spaces = [" ", "\n", "	"];
        return list.split(string, spaces);
      },
      comma(string) {
        return list.split(string, [","], true);
      }
    };
    module.exports = list;
    list.default = list;
  }
});

// node_modules/postcss/lib/rule.js
var require_rule = __commonJS({
  "node_modules/postcss/lib/rule.js"(exports, module) {
    "use strict";
    var Container = require_container();
    var list = require_list();
    var Rule = class extends Container {
      constructor(defaults) {
        super(defaults);
        this.type = "rule";
        if (!this.nodes)
          this.nodes = [];
      }
      get selectors() {
        return list.comma(this.selector);
      }
      set selectors(values) {
        let match = this.selector ? this.selector.match(/,\s*/) : null;
        let sep = match ? match[0] : "," + this.raw("between", "beforeOpen");
        this.selector = values.join(sep);
      }
    };
    module.exports = Rule;
    Rule.default = Rule;
    Container.registerRule(Rule);
  }
});

// node_modules/postcss/lib/parser.js
var require_parser = __commonJS({
  "node_modules/postcss/lib/parser.js"(exports, module) {
    "use strict";
    var Declaration = require_declaration();
    var tokenizer = require_tokenize();
    var Comment = require_comment();
    var AtRule = require_at_rule();
    var Root = require_root();
    var Rule = require_rule();
    var SAFE_COMMENT_NEIGHBOR = {
      empty: true,
      space: true
    };
    function findLastWithPosition(tokens) {
      for (let i = tokens.length - 1; i >= 0; i--) {
        let token = tokens[i];
        let pos = token[3] || token[2];
        if (pos)
          return pos;
      }
    }
    var Parser = class {
      constructor(input) {
        this.input = input;
        this.root = new Root();
        this.current = this.root;
        this.spaces = "";
        this.semicolon = false;
        this.customProperty = false;
        this.createTokenizer();
        this.root.source = { input, start: { offset: 0, line: 1, column: 1 } };
      }
      createTokenizer() {
        this.tokenizer = tokenizer(this.input);
      }
      parse() {
        let token;
        while (!this.tokenizer.endOfFile()) {
          token = this.tokenizer.nextToken();
          switch (token[0]) {
            case "space":
              this.spaces += token[1];
              break;
            case ";":
              this.freeSemicolon(token);
              break;
            case "}":
              this.end(token);
              break;
            case "comment":
              this.comment(token);
              break;
            case "at-word":
              this.atrule(token);
              break;
            case "{":
              this.emptyRule(token);
              break;
            default:
              this.other(token);
              break;
          }
        }
        this.endFile();
      }
      comment(token) {
        let node = new Comment();
        this.init(node, token[2]);
        node.source.end = this.getPosition(token[3] || token[2]);
        let text = token[1].slice(2, -2);
        if (/^\s*$/.test(text)) {
          node.text = "";
          node.raws.left = text;
          node.raws.right = "";
        } else {
          let match = text.match(/^(\s*)([^]*\S)(\s*)$/);
          node.text = match[2];
          node.raws.left = match[1];
          node.raws.right = match[3];
        }
      }
      emptyRule(token) {
        let node = new Rule();
        this.init(node, token[2]);
        node.selector = "";
        node.raws.between = "";
        this.current = node;
      }
      other(start) {
        let end = false;
        let type = null;
        let colon = false;
        let bracket = null;
        let brackets = [];
        let customProperty = start[1].startsWith("--");
        let tokens = [];
        let token = start;
        while (token) {
          type = token[0];
          tokens.push(token);
          if (type === "(" || type === "[") {
            if (!bracket)
              bracket = token;
            brackets.push(type === "(" ? ")" : "]");
          } else if (customProperty && colon && type === "{") {
            if (!bracket)
              bracket = token;
            brackets.push("}");
          } else if (brackets.length === 0) {
            if (type === ";") {
              if (colon) {
                this.decl(tokens, customProperty);
                return;
              } else {
                break;
              }
            } else if (type === "{") {
              this.rule(tokens);
              return;
            } else if (type === "}") {
              this.tokenizer.back(tokens.pop());
              end = true;
              break;
            } else if (type === ":") {
              colon = true;
            }
          } else if (type === brackets[brackets.length - 1]) {
            brackets.pop();
            if (brackets.length === 0)
              bracket = null;
          }
          token = this.tokenizer.nextToken();
        }
        if (this.tokenizer.endOfFile())
          end = true;
        if (brackets.length > 0)
          this.unclosedBracket(bracket);
        if (end && colon) {
          if (!customProperty) {
            while (tokens.length) {
              token = tokens[tokens.length - 1][0];
              if (token !== "space" && token !== "comment")
                break;
              this.tokenizer.back(tokens.pop());
            }
          }
          this.decl(tokens, customProperty);
        } else {
          this.unknownWord(tokens);
        }
      }
      rule(tokens) {
        tokens.pop();
        let node = new Rule();
        this.init(node, tokens[0][2]);
        node.raws.between = this.spacesAndCommentsFromEnd(tokens);
        this.raw(node, "selector", tokens);
        this.current = node;
      }
      decl(tokens, customProperty) {
        let node = new Declaration();
        this.init(node, tokens[0][2]);
        let last = tokens[tokens.length - 1];
        if (last[0] === ";") {
          this.semicolon = true;
          tokens.pop();
        }
        node.source.end = this.getPosition(
          last[3] || last[2] || findLastWithPosition(tokens)
        );
        while (tokens[0][0] !== "word") {
          if (tokens.length === 1)
            this.unknownWord(tokens);
          node.raws.before += tokens.shift()[1];
        }
        node.source.start = this.getPosition(tokens[0][2]);
        node.prop = "";
        while (tokens.length) {
          let type = tokens[0][0];
          if (type === ":" || type === "space" || type === "comment") {
            break;
          }
          node.prop += tokens.shift()[1];
        }
        node.raws.between = "";
        let token;
        while (tokens.length) {
          token = tokens.shift();
          if (token[0] === ":") {
            node.raws.between += token[1];
            break;
          } else {
            if (token[0] === "word" && /\w/.test(token[1])) {
              this.unknownWord([token]);
            }
            node.raws.between += token[1];
          }
        }
        if (node.prop[0] === "_" || node.prop[0] === "*") {
          node.raws.before += node.prop[0];
          node.prop = node.prop.slice(1);
        }
        let firstSpaces = [];
        let next;
        while (tokens.length) {
          next = tokens[0][0];
          if (next !== "space" && next !== "comment")
            break;
          firstSpaces.push(tokens.shift());
        }
        this.precheckMissedSemicolon(tokens);
        for (let i = tokens.length - 1; i >= 0; i--) {
          token = tokens[i];
          if (token[1].toLowerCase() === "!important") {
            node.important = true;
            let string = this.stringFrom(tokens, i);
            string = this.spacesFromEnd(tokens) + string;
            if (string !== " !important")
              node.raws.important = string;
            break;
          } else if (token[1].toLowerCase() === "important") {
            let cache = tokens.slice(0);
            let str = "";
            for (let j = i; j > 0; j--) {
              let type = cache[j][0];
              if (str.trim().indexOf("!") === 0 && type !== "space") {
                break;
              }
              str = cache.pop()[1] + str;
            }
            if (str.trim().indexOf("!") === 0) {
              node.important = true;
              node.raws.important = str;
              tokens = cache;
            }
          }
          if (token[0] !== "space" && token[0] !== "comment") {
            break;
          }
        }
        let hasWord = tokens.some((i) => i[0] !== "space" && i[0] !== "comment");
        if (hasWord) {
          node.raws.between += firstSpaces.map((i) => i[1]).join("");
          firstSpaces = [];
        }
        this.raw(node, "value", firstSpaces.concat(tokens), customProperty);
        if (node.value.includes(":") && !customProperty) {
          this.checkMissedSemicolon(tokens);
        }
      }
      atrule(token) {
        let node = new AtRule();
        node.name = token[1].slice(1);
        if (node.name === "") {
          this.unnamedAtrule(node, token);
        }
        this.init(node, token[2]);
        let type;
        let prev;
        let shift;
        let last = false;
        let open = false;
        let params = [];
        let brackets = [];
        while (!this.tokenizer.endOfFile()) {
          token = this.tokenizer.nextToken();
          type = token[0];
          if (type === "(" || type === "[") {
            brackets.push(type === "(" ? ")" : "]");
          } else if (type === "{" && brackets.length > 0) {
            brackets.push("}");
          } else if (type === brackets[brackets.length - 1]) {
            brackets.pop();
          }
          if (brackets.length === 0) {
            if (type === ";") {
              node.source.end = this.getPosition(token[2]);
              this.semicolon = true;
              break;
            } else if (type === "{") {
              open = true;
              break;
            } else if (type === "}") {
              if (params.length > 0) {
                shift = params.length - 1;
                prev = params[shift];
                while (prev && prev[0] === "space") {
                  prev = params[--shift];
                }
                if (prev) {
                  node.source.end = this.getPosition(prev[3] || prev[2]);
                }
              }
              this.end(token);
              break;
            } else {
              params.push(token);
            }
          } else {
            params.push(token);
          }
          if (this.tokenizer.endOfFile()) {
            last = true;
            break;
          }
        }
        node.raws.between = this.spacesAndCommentsFromEnd(params);
        if (params.length) {
          node.raws.afterName = this.spacesAndCommentsFromStart(params);
          this.raw(node, "params", params);
          if (last) {
            token = params[params.length - 1];
            node.source.end = this.getPosition(token[3] || token[2]);
            this.spaces = node.raws.between;
            node.raws.between = "";
          }
        } else {
          node.raws.afterName = "";
          node.params = "";
        }
        if (open) {
          node.nodes = [];
          this.current = node;
        }
      }
      end(token) {
        if (this.current.nodes && this.current.nodes.length) {
          this.current.raws.semicolon = this.semicolon;
        }
        this.semicolon = false;
        this.current.raws.after = (this.current.raws.after || "") + this.spaces;
        this.spaces = "";
        if (this.current.parent) {
          this.current.source.end = this.getPosition(token[2]);
          this.current = this.current.parent;
        } else {
          this.unexpectedClose(token);
        }
      }
      endFile() {
        if (this.current.parent)
          this.unclosedBlock();
        if (this.current.nodes && this.current.nodes.length) {
          this.current.raws.semicolon = this.semicolon;
        }
        this.current.raws.after = (this.current.raws.after || "") + this.spaces;
      }
      freeSemicolon(token) {
        this.spaces += token[1];
        if (this.current.nodes) {
          let prev = this.current.nodes[this.current.nodes.length - 1];
          if (prev && prev.type === "rule" && !prev.raws.ownSemicolon) {
            prev.raws.ownSemicolon = this.spaces;
            this.spaces = "";
          }
        }
      }
      // Helpers
      getPosition(offset) {
        let pos = this.input.fromOffset(offset);
        return {
          offset,
          line: pos.line,
          column: pos.col
        };
      }
      init(node, offset) {
        this.current.push(node);
        node.source = {
          start: this.getPosition(offset),
          input: this.input
        };
        node.raws.before = this.spaces;
        this.spaces = "";
        if (node.type !== "comment")
          this.semicolon = false;
      }
      raw(node, prop, tokens, customProperty) {
        let token, type;
        let length = tokens.length;
        let value = "";
        let clean = true;
        let next, prev;
        for (let i = 0; i < length; i += 1) {
          token = tokens[i];
          type = token[0];
          if (type === "space" && i === length - 1 && !customProperty) {
            clean = false;
          } else if (type === "comment") {
            prev = tokens[i - 1] ? tokens[i - 1][0] : "empty";
            next = tokens[i + 1] ? tokens[i + 1][0] : "empty";
            if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {
              if (value.slice(-1) === ",") {
                clean = false;
              } else {
                value += token[1];
              }
            } else {
              clean = false;
            }
          } else {
            value += token[1];
          }
        }
        if (!clean) {
          let raw = tokens.reduce((all, i) => all + i[1], "");
          node.raws[prop] = { value, raw };
        }
        node[prop] = value;
      }
      spacesAndCommentsFromEnd(tokens) {
        let lastTokenType;
        let spaces = "";
        while (tokens.length) {
          lastTokenType = tokens[tokens.length - 1][0];
          if (lastTokenType !== "space" && lastTokenType !== "comment")
            break;
          spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
      }
      spacesAndCommentsFromStart(tokens) {
        let next;
        let spaces = "";
        while (tokens.length) {
          next = tokens[0][0];
          if (next !== "space" && next !== "comment")
            break;
          spaces += tokens.shift()[1];
        }
        return spaces;
      }
      spacesFromEnd(tokens) {
        let lastTokenType;
        let spaces = "";
        while (tokens.length) {
          lastTokenType = tokens[tokens.length - 1][0];
          if (lastTokenType !== "space")
            break;
          spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
      }
      stringFrom(tokens, from) {
        let result = "";
        for (let i = from; i < tokens.length; i++) {
          result += tokens[i][1];
        }
        tokens.splice(from, tokens.length - from);
        return result;
      }
      colon(tokens) {
        let brackets = 0;
        let token, type, prev;
        for (let [i, element] of tokens.entries()) {
          token = element;
          type = token[0];
          if (type === "(") {
            brackets += 1;
          }
          if (type === ")") {
            brackets -= 1;
          }
          if (brackets === 0 && type === ":") {
            if (!prev) {
              this.doubleColon(token);
            } else if (prev[0] === "word" && prev[1] === "progid") {
              continue;
            } else {
              return i;
            }
          }
          prev = token;
        }
        return false;
      }
      // Errors
      unclosedBracket(bracket) {
        throw this.input.error(
          "Unclosed bracket",
          { offset: bracket[2] },
          { offset: bracket[2] + 1 }
        );
      }
      unknownWord(tokens) {
        throw this.input.error(
          "Unknown word",
          { offset: tokens[0][2] },
          { offset: tokens[0][2] + tokens[0][1].length }
        );
      }
      unexpectedClose(token) {
        throw this.input.error(
          "Unexpected }",
          { offset: token[2] },
          { offset: token[2] + 1 }
        );
      }
      unclosedBlock() {
        let pos = this.current.source.start;
        throw this.input.error("Unclosed block", pos.line, pos.column);
      }
      doubleColon(token) {
        throw this.input.error(
          "Double colon",
          { offset: token[2] },
          { offset: token[2] + token[1].length }
        );
      }
      unnamedAtrule(node, token) {
        throw this.input.error(
          "At-rule without name",
          { offset: token[2] },
          { offset: token[2] + token[1].length }
        );
      }
      precheckMissedSemicolon() {
      }
      checkMissedSemicolon(tokens) {
        let colon = this.colon(tokens);
        if (colon === false)
          return;
        let founded = 0;
        let token;
        for (let j = colon - 1; j >= 0; j--) {
          token = tokens[j];
          if (token[0] !== "space") {
            founded += 1;
            if (founded === 2)
              break;
          }
        }
        throw this.input.error(
          "Missed semicolon",
          token[0] === "word" ? token[3] + 1 : token[2]
        );
      }
    };
    module.exports = Parser;
  }
});

// node_modules/postcss/lib/parse.js
var require_parse = __commonJS({
  "node_modules/postcss/lib/parse.js"(exports, module) {
    "use strict";
    var Container = require_container();
    var Parser = require_parser();
    var Input = require_input();
    function parse(css, opts) {
      let input = new Input(css, opts);
      let parser = new Parser(input);
      try {
        parser.parse();
      } catch (e) {
        if (true) {
          if (e.name === "CssSyntaxError" && opts && opts.from) {
            if (/\.scss$/i.test(opts.from)) {
              e.message += "\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser";
            } else if (/\.sass/i.test(opts.from)) {
              e.message += "\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser";
            } else if (/\.less$/i.test(opts.from)) {
              e.message += "\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser";
            }
          }
        }
        throw e;
      }
      return parser.root;
    }
    module.exports = parse;
    parse.default = parse;
    Container.registerParse(parse);
  }
});

// node_modules/postcss/lib/lazy-result.js
var require_lazy_result = __commonJS({
  "node_modules/postcss/lib/lazy-result.js"(exports, module) {
    "use strict";
    var { isClean, my } = require_symbols();
    var MapGenerator = require_map_generator();
    var stringify = require_stringify();
    var Container = require_container();
    var Document = require_document();
    var warnOnce = require_warn_once();
    var Result = require_result();
    var parse = require_parse();
    var Root = require_root();
    var TYPE_TO_CLASS_NAME = {
      document: "Document",
      root: "Root",
      atrule: "AtRule",
      rule: "Rule",
      decl: "Declaration",
      comment: "Comment"
    };
    var PLUGIN_PROPS = {
      postcssPlugin: true,
      prepare: true,
      Once: true,
      Document: true,
      Root: true,
      Declaration: true,
      Rule: true,
      AtRule: true,
      Comment: true,
      DeclarationExit: true,
      RuleExit: true,
      AtRuleExit: true,
      CommentExit: true,
      RootExit: true,
      DocumentExit: true,
      OnceExit: true
    };
    var NOT_VISITORS = {
      postcssPlugin: true,
      prepare: true,
      Once: true
    };
    var CHILDREN = 0;
    function isPromise(obj) {
      return typeof obj === "object" && typeof obj.then === "function";
    }
    function getEvents(node) {
      let key = false;
      let type = TYPE_TO_CLASS_NAME[node.type];
      if (node.type === "decl") {
        key = node.prop.toLowerCase();
      } else if (node.type === "atrule") {
        key = node.name.toLowerCase();
      }
      if (key && node.append) {
        return [
          type,
          type + "-" + key,
          CHILDREN,
          type + "Exit",
          type + "Exit-" + key
        ];
      } else if (key) {
        return [type, type + "-" + key, type + "Exit", type + "Exit-" + key];
      } else if (node.append) {
        return [type, CHILDREN, type + "Exit"];
      } else {
        return [type, type + "Exit"];
      }
    }
    function toStack(node) {
      let events;
      if (node.type === "document") {
        events = ["Document", CHILDREN, "DocumentExit"];
      } else if (node.type === "root") {
        events = ["Root", CHILDREN, "RootExit"];
      } else {
        events = getEvents(node);
      }
      return {
        node,
        events,
        eventIndex: 0,
        visitors: [],
        visitorIndex: 0,
        iterator: 0
      };
    }
    function cleanMarks(node) {
      node[isClean] = false;
      if (node.nodes)
        node.nodes.forEach((i) => cleanMarks(i));
      return node;
    }
    var postcss = {};
    var LazyResult = class {
      constructor(processor, css, opts) {
        this.stringified = false;
        this.processed = false;
        let root;
        if (typeof css === "object" && css !== null && (css.type === "root" || css.type === "document")) {
          root = cleanMarks(css);
        } else if (css instanceof LazyResult || css instanceof Result) {
          root = cleanMarks(css.root);
          if (css.map) {
            if (typeof opts.map === "undefined")
              opts.map = {};
            if (!opts.map.inline)
              opts.map.inline = false;
            opts.map.prev = css.map;
          }
        } else {
          let parser = parse;
          if (opts.syntax)
            parser = opts.syntax.parse;
          if (opts.parser)
            parser = opts.parser;
          if (parser.parse)
            parser = parser.parse;
          try {
            root = parser(css, opts);
          } catch (error) {
            this.processed = true;
            this.error = error;
          }
          if (root && !root[my]) {
            Container.rebuild(root);
          }
        }
        this.result = new Result(processor, root, opts);
        this.helpers = { ...postcss, result: this.result, postcss };
        this.plugins = this.processor.plugins.map((plugin) => {
          if (typeof plugin === "object" && plugin.prepare) {
            return { ...plugin, ...plugin.prepare(this.result) };
          } else {
            return plugin;
          }
        });
      }
      get [Symbol.toStringTag]() {
        return "LazyResult";
      }
      get processor() {
        return this.result.processor;
      }
      get opts() {
        return this.result.opts;
      }
      get css() {
        return this.stringify().css;
      }
      get content() {
        return this.stringify().content;
      }
      get map() {
        return this.stringify().map;
      }
      get root() {
        return this.sync().root;
      }
      get messages() {
        return this.sync().messages;
      }
      warnings() {
        return this.sync().warnings();
      }
      toString() {
        return this.css;
      }
      then(onFulfilled, onRejected) {
        if (true) {
          if (!("from" in this.opts)) {
            warnOnce(
              "Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning."
            );
          }
        }
        return this.async().then(onFulfilled, onRejected);
      }
      catch(onRejected) {
        return this.async().catch(onRejected);
      }
      finally(onFinally) {
        return this.async().then(onFinally, onFinally);
      }
      async() {
        if (this.error)
          return Promise.reject(this.error);
        if (this.processed)
          return Promise.resolve(this.result);
        if (!this.processing) {
          this.processing = this.runAsync();
        }
        return this.processing;
      }
      sync() {
        if (this.error)
          throw this.error;
        if (this.processed)
          return this.result;
        this.processed = true;
        if (this.processing) {
          throw this.getAsyncError();
        }
        for (let plugin of this.plugins) {
          let promise = this.runOnRoot(plugin);
          if (isPromise(promise)) {
            throw this.getAsyncError();
          }
        }
        this.prepareVisitors();
        if (this.hasListener) {
          let root = this.result.root;
          while (!root[isClean]) {
            root[isClean] = true;
            this.walkSync(root);
          }
          if (this.listeners.OnceExit) {
            if (root.type === "document") {
              for (let subRoot of root.nodes) {
                this.visitSync(this.listeners.OnceExit, subRoot);
              }
            } else {
              this.visitSync(this.listeners.OnceExit, root);
            }
          }
        }
        return this.result;
      }
      stringify() {
        if (this.error)
          throw this.error;
        if (this.stringified)
          return this.result;
        this.stringified = true;
        this.sync();
        let opts = this.result.opts;
        let str = stringify;
        if (opts.syntax)
          str = opts.syntax.stringify;
        if (opts.stringifier)
          str = opts.stringifier;
        if (str.stringify)
          str = str.stringify;
        let map = new MapGenerator(str, this.result.root, this.result.opts);
        let data = map.generate();
        this.result.css = data[0];
        this.result.map = data[1];
        return this.result;
      }
      walkSync(node) {
        node[isClean] = true;
        let events = getEvents(node);
        for (let event of events) {
          if (event === CHILDREN) {
            if (node.nodes) {
              node.each((child) => {
                if (!child[isClean])
                  this.walkSync(child);
              });
            }
          } else {
            let visitors = this.listeners[event];
            if (visitors) {
              if (this.visitSync(visitors, node.toProxy()))
                return;
            }
          }
        }
      }
      visitSync(visitors, node) {
        for (let [plugin, visitor] of visitors) {
          this.result.lastPlugin = plugin;
          let promise;
          try {
            promise = visitor(node, this.helpers);
          } catch (e) {
            throw this.handleError(e, node.proxyOf);
          }
          if (node.type !== "root" && node.type !== "document" && !node.parent) {
            return true;
          }
          if (isPromise(promise)) {
            throw this.getAsyncError();
          }
        }
      }
      runOnRoot(plugin) {
        this.result.lastPlugin = plugin;
        try {
          if (typeof plugin === "object" && plugin.Once) {
            if (this.result.root.type === "document") {
              let roots = this.result.root.nodes.map(
                (root) => plugin.Once(root, this.helpers)
              );
              if (isPromise(roots[0])) {
                return Promise.all(roots);
              }
              return roots;
            }
            return plugin.Once(this.result.root, this.helpers);
          } else if (typeof plugin === "function") {
            return plugin(this.result.root, this.result);
          }
        } catch (error) {
          throw this.handleError(error);
        }
      }
      getAsyncError() {
        throw new Error("Use process(css).then(cb) to work with async plugins");
      }
      handleError(error, node) {
        let plugin = this.result.lastPlugin;
        try {
          if (node)
            node.addToError(error);
          this.error = error;
          if (error.name === "CssSyntaxError" && !error.plugin) {
            error.plugin = plugin.postcssPlugin;
            error.setMessage();
          } else if (plugin.postcssVersion) {
            if (true) {
              let pluginName = plugin.postcssPlugin;
              let pluginVer = plugin.postcssVersion;
              let runtimeVer = this.result.processor.version;
              let a = pluginVer.split(".");
              let b = runtimeVer.split(".");
              if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
                console.error(
                  "Unknown error from PostCSS plugin. Your current PostCSS version is " + runtimeVer + ", but " + pluginName + " uses " + pluginVer + ". Perhaps this is the source of the error below."
                );
              }
            }
          }
        } catch (err) {
          if (console && console.error)
            console.error(err);
        }
        return error;
      }
      async runAsync() {
        this.plugin = 0;
        for (let i = 0; i < this.plugins.length; i++) {
          let plugin = this.plugins[i];
          let promise = this.runOnRoot(plugin);
          if (isPromise(promise)) {
            try {
              await promise;
            } catch (error) {
              throw this.handleError(error);
            }
          }
        }
        this.prepareVisitors();
        if (this.hasListener) {
          let root = this.result.root;
          while (!root[isClean]) {
            root[isClean] = true;
            let stack = [toStack(root)];
            while (stack.length > 0) {
              let promise = this.visitTick(stack);
              if (isPromise(promise)) {
                try {
                  await promise;
                } catch (e) {
                  let node = stack[stack.length - 1].node;
                  throw this.handleError(e, node);
                }
              }
            }
          }
          if (this.listeners.OnceExit) {
            for (let [plugin, visitor] of this.listeners.OnceExit) {
              this.result.lastPlugin = plugin;
              try {
                if (root.type === "document") {
                  let roots = root.nodes.map(
                    (subRoot) => visitor(subRoot, this.helpers)
                  );
                  await Promise.all(roots);
                } else {
                  await visitor(root, this.helpers);
                }
              } catch (e) {
                throw this.handleError(e);
              }
            }
          }
        }
        this.processed = true;
        return this.stringify();
      }
      prepareVisitors() {
        this.listeners = {};
        let add = (plugin, type, cb) => {
          if (!this.listeners[type])
            this.listeners[type] = [];
          this.listeners[type].push([plugin, cb]);
        };
        for (let plugin of this.plugins) {
          if (typeof plugin === "object") {
            for (let event in plugin) {
              if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {
                throw new Error(
                  `Unknown event ${event} in ${plugin.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`
                );
              }
              if (!NOT_VISITORS[event]) {
                if (typeof plugin[event] === "object") {
                  for (let filter in plugin[event]) {
                    if (filter === "*") {
                      add(plugin, event, plugin[event][filter]);
                    } else {
                      add(
                        plugin,
                        event + "-" + filter.toLowerCase(),
                        plugin[event][filter]
                      );
                    }
                  }
                } else if (typeof plugin[event] === "function") {
                  add(plugin, event, plugin[event]);
                }
              }
            }
          }
        }
        this.hasListener = Object.keys(this.listeners).length > 0;
      }
      visitTick(stack) {
        let visit = stack[stack.length - 1];
        let { node, visitors } = visit;
        if (node.type !== "root" && node.type !== "document" && !node.parent) {
          stack.pop();
          return;
        }
        if (visitors.length > 0 && visit.visitorIndex < visitors.length) {
          let [plugin, visitor] = visitors[visit.visitorIndex];
          visit.visitorIndex += 1;
          if (visit.visitorIndex === visitors.length) {
            visit.visitors = [];
            visit.visitorIndex = 0;
          }
          this.result.lastPlugin = plugin;
          try {
            return visitor(node.toProxy(), this.helpers);
          } catch (e) {
            throw this.handleError(e, node);
          }
        }
        if (visit.iterator !== 0) {
          let iterator = visit.iterator;
          let child;
          while (child = node.nodes[node.indexes[iterator]]) {
            node.indexes[iterator] += 1;
            if (!child[isClean]) {
              child[isClean] = true;
              stack.push(toStack(child));
              return;
            }
          }
          visit.iterator = 0;
          delete node.indexes[iterator];
        }
        let events = visit.events;
        while (visit.eventIndex < events.length) {
          let event = events[visit.eventIndex];
          visit.eventIndex += 1;
          if (event === CHILDREN) {
            if (node.nodes && node.nodes.length) {
              node[isClean] = true;
              visit.iterator = node.getIterator();
            }
            return;
          } else if (this.listeners[event]) {
            visit.visitors = this.listeners[event];
            return;
          }
        }
        stack.pop();
      }
    };
    LazyResult.registerPostcss = (dependant) => {
      postcss = dependant;
    };
    module.exports = LazyResult;
    LazyResult.default = LazyResult;
    Root.registerLazyResult(LazyResult);
    Document.registerLazyResult(LazyResult);
  }
});

// node_modules/postcss/lib/no-work-result.js
var require_no_work_result = __commonJS({
  "node_modules/postcss/lib/no-work-result.js"(exports, module) {
    "use strict";
    var MapGenerator = require_map_generator();
    var stringify = require_stringify();
    var warnOnce = require_warn_once();
    var parse = require_parse();
    var Result = require_result();
    var NoWorkResult = class {
      constructor(processor, css, opts) {
        css = css.toString();
        this.stringified = false;
        this._processor = processor;
        this._css = css;
        this._opts = opts;
        this._map = void 0;
        let root;
        let str = stringify;
        this.result = new Result(this._processor, root, this._opts);
        this.result.css = css;
        let self = this;
        Object.defineProperty(this.result, "root", {
          get() {
            return self.root;
          }
        });
        let map = new MapGenerator(str, root, this._opts, css);
        if (map.isMap()) {
          let [generatedCSS, generatedMap] = map.generate();
          if (generatedCSS) {
            this.result.css = generatedCSS;
          }
          if (generatedMap) {
            this.result.map = generatedMap;
          }
        }
      }
      get [Symbol.toStringTag]() {
        return "NoWorkResult";
      }
      get processor() {
        return this.result.processor;
      }
      get opts() {
        return this.result.opts;
      }
      get css() {
        return this.result.css;
      }
      get content() {
        return this.result.css;
      }
      get map() {
        return this.result.map;
      }
      get root() {
        if (this._root) {
          return this._root;
        }
        let root;
        let parser = parse;
        try {
          root = parser(this._css, this._opts);
        } catch (error) {
          this.error = error;
        }
        if (this.error) {
          throw this.error;
        } else {
          this._root = root;
          return root;
        }
      }
      get messages() {
        return [];
      }
      warnings() {
        return [];
      }
      toString() {
        return this._css;
      }
      then(onFulfilled, onRejected) {
        if (true) {
          if (!("from" in this._opts)) {
            warnOnce(
              "Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning."
            );
          }
        }
        return this.async().then(onFulfilled, onRejected);
      }
      catch(onRejected) {
        return this.async().catch(onRejected);
      }
      finally(onFinally) {
        return this.async().then(onFinally, onFinally);
      }
      async() {
        if (this.error)
          return Promise.reject(this.error);
        return Promise.resolve(this.result);
      }
      sync() {
        if (this.error)
          throw this.error;
        return this.result;
      }
    };
    module.exports = NoWorkResult;
    NoWorkResult.default = NoWorkResult;
  }
});

// node_modules/postcss/lib/processor.js
var require_processor = __commonJS({
  "node_modules/postcss/lib/processor.js"(exports, module) {
    "use strict";
    var NoWorkResult = require_no_work_result();
    var LazyResult = require_lazy_result();
    var Document = require_document();
    var Root = require_root();
    var Processor = class {
      constructor(plugins = []) {
        this.version = "8.4.21";
        this.plugins = this.normalize(plugins);
      }
      use(plugin) {
        this.plugins = this.plugins.concat(this.normalize([plugin]));
        return this;
      }
      process(css, opts = {}) {
        if (this.plugins.length === 0 && typeof opts.parser === "undefined" && typeof opts.stringifier === "undefined" && typeof opts.syntax === "undefined") {
          return new NoWorkResult(this, css, opts);
        } else {
          return new LazyResult(this, css, opts);
        }
      }
      normalize(plugins) {
        let normalized = [];
        for (let i of plugins) {
          if (i.postcss === true) {
            i = i();
          } else if (i.postcss) {
            i = i.postcss;
          }
          if (typeof i === "object" && Array.isArray(i.plugins)) {
            normalized = normalized.concat(i.plugins);
          } else if (typeof i === "object" && i.postcssPlugin) {
            normalized.push(i);
          } else if (typeof i === "function") {
            normalized.push(i);
          } else if (typeof i === "object" && (i.parse || i.stringify)) {
            if (true) {
              throw new Error(
                "PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation."
              );
            }
          } else {
            throw new Error(i + " is not a PostCSS plugin");
          }
        }
        return normalized;
      }
    };
    module.exports = Processor;
    Processor.default = Processor;
    Root.registerProcessor(Processor);
    Document.registerProcessor(Processor);
  }
});

// node_modules/postcss/lib/fromJSON.js
var require_fromJSON = __commonJS({
  "node_modules/postcss/lib/fromJSON.js"(exports, module) {
    "use strict";
    var Declaration = require_declaration();
    var PreviousMap = require_previous_map();
    var Comment = require_comment();
    var AtRule = require_at_rule();
    var Input = require_input();
    var Root = require_root();
    var Rule = require_rule();
    function fromJSON(json, inputs) {
      if (Array.isArray(json))
        return json.map((n) => fromJSON(n));
      let { inputs: ownInputs, ...defaults } = json;
      if (ownInputs) {
        inputs = [];
        for (let input of ownInputs) {
          let inputHydrated = { ...input, __proto__: Input.prototype };
          if (inputHydrated.map) {
            inputHydrated.map = {
              ...inputHydrated.map,
              __proto__: PreviousMap.prototype
            };
          }
          inputs.push(inputHydrated);
        }
      }
      if (defaults.nodes) {
        defaults.nodes = json.nodes.map((n) => fromJSON(n, inputs));
      }
      if (defaults.source) {
        let { inputId, ...source } = defaults.source;
        defaults.source = source;
        if (inputId != null) {
          defaults.source.input = inputs[inputId];
        }
      }
      if (defaults.type === "root") {
        return new Root(defaults);
      } else if (defaults.type === "decl") {
        return new Declaration(defaults);
      } else if (defaults.type === "rule") {
        return new Rule(defaults);
      } else if (defaults.type === "comment") {
        return new Comment(defaults);
      } else if (defaults.type === "atrule") {
        return new AtRule(defaults);
      } else {
        throw new Error("Unknown node type: " + json.type);
      }
    }
    module.exports = fromJSON;
    fromJSON.default = fromJSON;
  }
});

// node_modules/postcss/lib/postcss.js
var require_postcss = __commonJS({
  "node_modules/postcss/lib/postcss.js"(exports, module) {
    "use strict";
    var CssSyntaxError = require_css_syntax_error();
    var Declaration = require_declaration();
    var LazyResult = require_lazy_result();
    var Container = require_container();
    var Processor = require_processor();
    var stringify = require_stringify();
    var fromJSON = require_fromJSON();
    var Document = require_document();
    var Warning = require_warning();
    var Comment = require_comment();
    var AtRule = require_at_rule();
    var Result = require_result();
    var Input = require_input();
    var parse = require_parse();
    var list = require_list();
    var Rule = require_rule();
    var Root = require_root();
    var Node = require_node();
    function postcss(...plugins) {
      if (plugins.length === 1 && Array.isArray(plugins[0])) {
        plugins = plugins[0];
      }
      return new Processor(plugins);
    }
    postcss.plugin = function plugin(name, initializer) {
      let warningPrinted = false;
      function creator(...args) {
        if (console && console.warn && !warningPrinted) {
          warningPrinted = true;
          console.warn(
            name + ": postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration"
          );
          if (process.env.LANG && process.env.LANG.startsWith("cn")) {
            console.warn(
              name + ": 里面 postcss.plugin 被弃用. 迁移指南:\nhttps://www.w3ctech.com/topic/2226"
            );
          }
        }
        let transformer = initializer(...args);
        transformer.postcssPlugin = name;
        transformer.postcssVersion = new Processor().version;
        return transformer;
      }
      let cache;
      Object.defineProperty(creator, "postcss", {
        get() {
          if (!cache)
            cache = creator();
          return cache;
        }
      });
      creator.process = function(css, processOpts, pluginOpts) {
        return postcss([creator(pluginOpts)]).process(css, processOpts);
      };
      return creator;
    };
    postcss.stringify = stringify;
    postcss.parse = parse;
    postcss.fromJSON = fromJSON;
    postcss.list = list;
    postcss.comment = (defaults) => new Comment(defaults);
    postcss.atRule = (defaults) => new AtRule(defaults);
    postcss.decl = (defaults) => new Declaration(defaults);
    postcss.rule = (defaults) => new Rule(defaults);
    postcss.root = (defaults) => new Root(defaults);
    postcss.document = (defaults) => new Document(defaults);
    postcss.CssSyntaxError = CssSyntaxError;
    postcss.Declaration = Declaration;
    postcss.Container = Container;
    postcss.Processor = Processor;
    postcss.Document = Document;
    postcss.Comment = Comment;
    postcss.Warning = Warning;
    postcss.AtRule = AtRule;
    postcss.Result = Result;
    postcss.Input = Input;
    postcss.Rule = Rule;
    postcss.Root = Root;
    postcss.Node = Node;
    LazyResult.registerPostcss(postcss);
    module.exports = postcss;
    postcss.default = postcss;
  }
});

// node_modules/caniuse-lite/data/browsers.js
var require_browsers = __commonJS({
  "node_modules/caniuse-lite/data/browsers.js"(exports, module) {
    module.exports = { A: "ie", B: "edge", C: "firefox", D: "chrome", E: "safari", F: "opera", G: "ios_saf", H: "op_mini", I: "android", J: "bb", K: "op_mob", L: "and_chr", M: "and_ff", N: "ie_mob", O: "and_uc", P: "samsung", Q: "and_qq", R: "baidu", S: "kaios" };
  }
});

// node_modules/caniuse-lite/dist/unpacker/browsers.js
var require_browsers2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/browsers.js"(exports, module) {
    module.exports.browsers = require_browsers();
  }
});

// node_modules/caniuse-lite/data/browserVersions.js
var require_browserVersions = __commonJS({
  "node_modules/caniuse-lite/data/browserVersions.js"(exports, module) {
    module.exports = { "0": "22", "1": "23", "2": "24", "3": "25", "4": "26", "5": "27", "6": "28", "7": "29", "8": "30", "9": "31", A: "10", B: "11", C: "12", D: "7", E: "8", F: "9", G: "15", H: "112", I: "4", J: "6", K: "13", L: "14", M: "16", N: "17", O: "18", P: "79", Q: "80", R: "81", S: "83", T: "84", U: "85", V: "86", W: "87", X: "88", Y: "89", Z: "90", a: "91", b: "92", c: "93", d: "94", e: "95", f: "110", g: "20", h: "73", i: "96", j: "97", k: "98", l: "99", m: "100", n: "101", o: "102", p: "103", q: "104", r: "105", s: "106", t: "107", u: "108", v: "109", w: "111", x: "5", y: "19", z: "21", AB: "32", BB: "33", CB: "34", DB: "35", EB: "36", FB: "37", GB: "38", HB: "39", IB: "40", JB: "41", KB: "42", LB: "43", MB: "44", NB: "45", OB: "46", PB: "47", QB: "48", RB: "49", SB: "50", TB: "51", UB: "52", VB: "53", WB: "54", XB: "55", YB: "56", ZB: "57", aB: "58", bB: "60", cB: "62", dB: "63", eB: "64", fB: "65", gB: "66", hB: "67", iB: "68", jB: "69", kB: "70", lB: "71", mB: "72", nB: "74", oB: "75", pB: "76", qB: "77", rB: "78", sB: "11.1", tB: "12.1", uB: "16.0", vB: "3", wB: "59", xB: "61", yB: "82", zB: "113", "0B": "114", "1B": "3.2", "2B": "10.1", "3B": "13.1", "4B": "15.2-15.3", "5B": "15.4", "6B": "15.5", "7B": "15.6", "8B": "16.1", "9B": "16.2", AC: "16.3", BC: "16.4", CC: "16.5", DC: "11.5", EC: "4.2-4.3", FC: "5.5", GC: "2", HC: "3.5", IC: "3.6", JC: "115", KC: "3.1", LC: "5.1", MC: "6.1", NC: "7.1", OC: "9.1", PC: "14.1", QC: "15.1", RC: "TP", SC: "9.5-9.6", TC: "10.0-10.1", UC: "10.5", VC: "10.6", WC: "11.6", XC: "4.0-4.1", YC: "5.0-5.1", ZC: "6.0-6.1", aC: "7.0-7.1", bC: "8.1-8.4", cC: "9.0-9.2", dC: "9.3", eC: "10.0-10.2", fC: "10.3", gC: "11.0-11.2", hC: "11.3-11.4", iC: "12.0-12.1", jC: "12.2-12.5", kC: "13.0-13.1", lC: "13.2", mC: "13.3", nC: "13.4-13.7", oC: "14.0-14.4", pC: "14.5-14.8", qC: "15.0-15.1", rC: "all", sC: "2.1", tC: "2.2", uC: "2.3", vC: "4.1", wC: "4.4", xC: "4.4.3-4.4.4", yC: "13.4", zC: "5.0-5.4", "0C": "6.2-6.4", "1C": "7.2-7.4", "2C": "8.2", "3C": "9.2", "4C": "11.1-11.2", "5C": "12.0", "6C": "13.0", "7C": "14.0", "8C": "15.0", "9C": "17.0", AD: "18.0", BD: "19.0", CD: "13.18", DD: "2.5", ED: "3.0-3.1" };
  }
});

// node_modules/caniuse-lite/dist/unpacker/browserVersions.js
var require_browserVersions2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/browserVersions.js"(exports, module) {
    module.exports.browserVersions = require_browserVersions();
  }
});

// node_modules/caniuse-lite/data/agents.js
var require_agents = __commonJS({
  "node_modules/caniuse-lite/data/agents.js"(exports, module) {
    module.exports = { A: { A: { J: 0.0131217, D: 621152e-8, E: 0.0497493, F: 0.0580409, A: 829156e-8, B: 0.406286, FC: 9298e-6 }, B: "ms", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "FC", "J", "D", "E", "F", "A", "B", "", "", ""], E: "IE", F: { FC: 962323200, J: 998870400, D: 1161129600, E: 1237420800, F: 1300060800, A: 1346716800, B: 1381968e3 } }, B: { A: { C: 4081e-6, K: 4267e-6, L: 4268e-6, G: 4081e-6, M: 3702e-6, N: 4081e-6, O: 0.016324, P: 0, Q: 4298e-6, R: 944e-5, S: 4043e-6, T: 4081e-6, U: 3861e-6, V: 3861e-6, W: 4081e-6, X: 3943e-6, Y: 4081e-6, Z: 3943e-6, a: 3943e-6, b: 8162e-6, c: 4118e-6, d: 3939e-6, e: 3943e-6, i: 3943e-6, j: 3943e-6, k: 3929e-6, l: 3901e-6, m: 0.011829, n: 7886e-6, o: 3943e-6, p: 8162e-6, q: 4081e-6, r: 4081e-6, s: 8162e-6, t: 0.016324, u: 0.044891, v: 0.118349, f: 2.0609, w: 2.19966, H: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "C", "K", "L", "G", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "f", "w", "H", "", "", ""], E: "Edge", F: { C: 1438128e3, K: 1447286400, L: 1470096e3, G: 1491868800, M: 1508198400, N: 1525046400, O: 1542067200, P: 1579046400, Q: 1581033600, R: 1586736e3, S: 1590019200, T: 1594857600, U: 1598486400, V: 1602201600, W: 1605830400, X: 161136e4, Y: 1614816e3, Z: 1618358400, a: 1622073600, b: 1626912e3, c: 1630627200, d: 1632441600, e: 1634774400, i: 1637539200, j: 1641427200, k: 1643932800, l: 1646265600, m: 1649635200, n: 1651190400, o: 1653955200, p: 1655942400, q: 1659657600, r: 1661990400, s: 1664755200, t: 1666915200, u: 1670198400, v: 1673481600, f: 1675900800, w: 1678665600, H: 1680825600 }, D: { C: "ms", K: "ms", L: "ms", G: "ms", M: "ms", N: "ms", O: "ms" } }, C: { A: { "0": 0.013698, "1": 4161e-6, "2": 8786e-6, "3": 4118e-6, "4": 4317e-6, "5": 4393e-6, "6": 4418e-6, "7": 8834e-6, "8": 8322e-6, "9": 8928e-6, GC: 4118e-6, vB: 4271e-6, I: 0.011703, x: 4879e-6, J: 0.020136, D: 5725e-6, E: 4525e-6, F: 533e-5, A: 4283e-6, B: 8162e-6, C: 4471e-6, K: 4486e-6, L: 453e-5, G: 8322e-6, M: 4417e-6, N: 4425e-6, O: 4161e-6, y: 4443e-6, g: 4283e-6, z: 8322e-6, AB: 4471e-6, BB: 9284e-6, CB: 4707e-6, DB: 9076e-6, EB: 4081e-6, FB: 4783e-6, GB: 3929e-6, HB: 4783e-6, IB: 487e-5, JB: 5029e-6, KB: 47e-4, LB: 0.012243, MB: 4081e-6, NB: 3867e-6, OB: 4525e-6, PB: 4293e-6, QB: 4081e-6, RB: 4538e-6, SB: 8282e-6, TB: 0.011601, UB: 0.044891, VB: 0.011601, WB: 3929e-6, XB: 3974e-6, YB: 8162e-6, ZB: 0.011601, aB: 3939e-6, wB: 4081e-6, bB: 3929e-6, xB: 4356e-6, cB: 4425e-6, dB: 8322e-6, eB: 415e-5, fB: 4267e-6, gB: 3801e-6, hB: 4267e-6, iB: 4081e-6, jB: 415e-5, kB: 4293e-6, lB: 4425e-6, mB: 8162e-6, h: 415e-5, nB: 415e-5, oB: 4318e-6, pB: 4356e-6, qB: 3974e-6, rB: 0.036729, P: 4081e-6, Q: 4081e-6, R: 4081e-6, yB: 3861e-6, S: 4081e-6, T: 3929e-6, U: 4268e-6, V: 3801e-6, W: 0.012243, X: 8162e-6, Y: 3943e-6, Z: 3943e-6, a: 0.012243, b: 3801e-6, c: 7722e-6, d: 0.016324, e: 3773e-6, i: 7886e-6, j: 3901e-6, k: 3901e-6, l: 4081e-6, m: 3861e-6, n: 4081e-6, o: 0.110187, p: 0.036729, q: 8162e-6, r: 8162e-6, s: 8162e-6, t: 0.012243, u: 0.024486, v: 0.053053, f: 1.10187, w: 0.926387, H: 8162e-6, zB: 0, "0B": 0, HC: 8786e-6, IC: 487e-5 }, B: "moz", C: ["GC", "vB", "HC", "IC", "I", "x", "J", "D", "E", "F", "A", "B", "C", "K", "L", "G", "M", "N", "O", "y", "g", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "wB", "bB", "xB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "h", "nB", "oB", "pB", "qB", "rB", "P", "Q", "R", "yB", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "f", "w", "H", "zB", "0B", ""], E: "Firefox", F: { "0": 1368489600, "1": 1372118400, "2": 1375747200, "3": 1379376e3, "4": 1386633600, "5": 1391472e3, "6": 1395100800, "7": 1398729600, "8": 1402358400, "9": 1405987200, GC: 1161648e3, vB: 1213660800, HC: 124632e4, IC: 1264032e3, I: 1300752e3, x: 1308614400, J: 1313452800, D: 1317081600, E: 1317081600, F: 1320710400, A: 1324339200, B: 1327968e3, C: 1331596800, K: 1335225600, L: 1338854400, G: 1342483200, M: 1346112e3, N: 1349740800, O: 1353628800, y: 1357603200, g: 1361232e3, z: 1364860800, AB: 1409616e3, BB: 1413244800, CB: 1417392e3, DB: 1421107200, EB: 1424736e3, FB: 1428278400, GB: 1431475200, HB: 1435881600, IB: 1439251200, JB: 144288e4, KB: 1446508800, LB: 1450137600, MB: 1453852800, NB: 1457395200, OB: 1461628800, PB: 1465257600, QB: 1470096e3, RB: 1474329600, SB: 1479168e3, TB: 1485216e3, UB: 1488844800, VB: 149256e4, WB: 1497312e3, XB: 1502150400, YB: 1506556800, ZB: 1510617600, aB: 1516665600, wB: 1520985600, bB: 1525824e3, xB: 1529971200, cB: 1536105600, dB: 1540252800, eB: 1544486400, fB: 154872e4, gB: 1552953600, hB: 1558396800, iB: 1562630400, jB: 1567468800, kB: 1571788800, lB: 1575331200, mB: 1578355200, h: 1581379200, nB: 1583798400, oB: 1586304e3, pB: 1588636800, qB: 1591056e3, rB: 1593475200, P: 1595894400, Q: 1598313600, R: 1600732800, yB: 1603152e3, S: 1605571200, T: 1607990400, U: 1611619200, V: 1614038400, W: 1616457600, X: 1618790400, Y: 1622505600, Z: 1626134400, a: 1628553600, b: 1630972800, c: 1633392e3, d: 1635811200, e: 1638835200, i: 1641859200, j: 1644364800, k: 1646697600, l: 1649116800, m: 1651536e3, n: 1653955200, o: 1656374400, p: 1658793600, q: 1661212800, r: 1663632e3, s: 1666051200, t: 1668470400, u: 1670889600, v: 1673913600, f: 1676332800, w: 1678752e3, H: 1681171200, zB: null, "0B": null } }, D: { A: { "0": 3901e-6, "1": 8786e-6, "2": 3939e-6, "3": 4461e-6, "4": 4141e-6, "5": 4326e-6, "6": 47e-4, "7": 4538e-6, "8": 8322e-6, "9": 8596e-6, I: 4706e-6, x: 4879e-6, J: 4879e-6, D: 5591e-6, E: 5591e-6, F: 5591e-6, A: 4534e-6, B: 4464e-6, C: 0.010424, K: 83e-4, L: 4706e-6, G: 0.015087, M: 4393e-6, N: 4393e-6, O: 8652e-6, y: 8322e-6, g: 4393e-6, z: 4317e-6, AB: 4566e-6, BB: 4118e-6, CB: 4081e-6, DB: 8162e-6, EB: 4335e-6, FB: 4464e-6, GB: 0.016324, HB: 3867e-6, IB: 0.016324, JB: 3773e-6, KB: 3974e-6, LB: 8162e-6, MB: 7948e-6, NB: 3974e-6, OB: 3867e-6, PB: 8162e-6, QB: 0.020405, RB: 0.036729, SB: 3867e-6, TB: 4081e-6, UB: 8162e-6, VB: 8162e-6, WB: 3867e-6, XB: 4081e-6, YB: 0.073458, ZB: 4081e-6, aB: 0.015772, wB: 3773e-6, bB: 0.016324, xB: 8162e-6, cB: 3773e-6, dB: 0.012243, eB: 3943e-6, fB: 8162e-6, gB: 0.028567, hB: 8162e-6, iB: 8162e-6, jB: 0.036729, kB: 0.016324, lB: 0.012243, mB: 0.020405, h: 8162e-6, nB: 0.036729, oB: 0.048972, pB: 0.044891, qB: 0.016324, rB: 0.024486, P: 0.134673, Q: 0.036729, R: 0.04081, S: 0.065296, T: 0.04081, U: 0.089782, V: 0.065296, W: 0.097944, X: 0.020405, Y: 0.036729, Z: 0.04081, a: 0.077539, b: 0.044891, c: 0.085701, d: 0.044891, e: 0.032648, i: 0.04081, j: 0.053053, k: 0.04081, l: 0.053053, m: 0.053053, n: 0.048972, o: 0.073458, p: 0.355047, q: 0.114268, r: 0.106106, s: 0.077539, t: 0.126511, u: 0.399938, v: 2.73019, f: 7.54169, w: 10.7208, H: 0.020405, zB: 0.020405, "0B": 4081e-6, JC: 0 }, B: "webkit", C: ["", "", "", "", "", "I", "x", "J", "D", "E", "F", "A", "B", "C", "K", "L", "G", "M", "N", "O", "y", "g", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "wB", "bB", "xB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "h", "nB", "oB", "pB", "qB", "rB", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "f", "w", "H", "zB", "0B", "JC"], E: "Chrome", F: { "0": 1343692800, "1": 1348531200, "2": 1352246400, "3": 1357862400, "4": 1361404800, "5": 1364428800, "6": 1369094400, "7": 1374105600, "8": 1376956800, "9": 1384214400, I: 1264377600, x: 1274745600, J: 1283385600, D: 1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400, C: 1307404800, K: 1312243200, L: 1316131200, G: 1316131200, M: 1319500800, N: 1323734400, O: 1328659200, y: 1332892800, g: 133704e4, z: 1340668800, AB: 1389657600, BB: 1392940800, CB: 1397001600, DB: 1400544e3, EB: 1405468800, FB: 1409011200, GB: 141264e4, HB: 1416268800, IB: 1421798400, JB: 1425513600, KB: 1429401600, LB: 143208e4, MB: 1437523200, NB: 1441152e3, OB: 1444780800, PB: 1449014400, QB: 1453248e3, RB: 1456963200, SB: 1460592e3, TB: 1464134400, UB: 1469059200, VB: 1472601600, WB: 1476230400, XB: 1480550400, YB: 1485302400, ZB: 1489017600, aB: 149256e4, wB: 1496707200, bB: 1500940800, xB: 1504569600, cB: 1508198400, dB: 1512518400, eB: 1516752e3, fB: 1520294400, gB: 1523923200, hB: 1527552e3, iB: 1532390400, jB: 1536019200, kB: 1539648e3, lB: 1543968e3, mB: 154872e4, h: 1552348800, nB: 1555977600, oB: 1559606400, pB: 1564444800, qB: 1568073600, rB: 1571702400, P: 1575936e3, Q: 1580860800, R: 1586304e3, S: 1589846400, T: 1594684800, U: 1598313600, V: 1601942400, W: 1605571200, X: 1611014400, Y: 1614556800, Z: 1618272e3, a: 1621987200, b: 1626739200, c: 1630368e3, d: 1632268800, e: 1634601600, i: 1637020800, j: 1641340800, k: 1643673600, l: 1646092800, m: 1648512e3, n: 1650931200, o: 1653350400, p: 1655769600, q: 1659398400, r: 1661817600, s: 1664236800, t: 1666656e3, u: 166968e4, v: 1673308800, f: 1675728e3, w: 1678147200, H: 1680566400, zB: null, "0B": null, JC: null } }, E: { A: { I: 0, x: 8322e-6, J: 4656e-6, D: 4465e-6, E: 3974e-6, F: 3929e-6, A: 4425e-6, B: 4318e-6, C: 3801e-6, K: 0.020405, L: 0.102025, G: 0.024486, KC: 0, "1B": 8692e-6, LC: 8162e-6, MC: 456e-5, NC: 4283e-6, OC: 0.028567, "2B": 7802e-6, sB: 8162e-6, tB: 0.036729, "3B": 0.183645, PC: 0.289751, QC: 0.044891, "4B": 0.036729, "5B": 0.093863, "6B": 0.171402, "7B": 0.754985, uB: 0.08162, "8B": 0.261184, "9B": 0.465234, AC: 1.69361, BC: 0.028567, CC: 0, RC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "KC", "1B", "I", "x", "LC", "J", "MC", "D", "NC", "E", "F", "OC", "A", "2B", "B", "sB", "C", "tB", "K", "3B", "L", "PC", "G", "QC", "4B", "5B", "6B", "7B", "uB", "8B", "9B", "AC", "BC", "CC", "RC", ""], E: "Safari", F: { KC: 1205798400, "1B": 1226534400, I: 1244419200, x: 1275868800, LC: 131112e4, J: 1343174400, MC: 13824e5, D: 13824e5, NC: 1410998400, E: 1413417600, F: 1443657600, OC: 1458518400, A: 1474329600, "2B": 1490572800, B: 1505779200, sB: 1522281600, C: 1537142400, tB: 1553472e3, K: 1568851200, "3B": 1585008e3, L: 1600214400, PC: 1619395200, G: 1632096e3, QC: 1635292800, "4B": 1639353600, "5B": 1647216e3, "6B": 1652745600, "7B": 1658275200, uB: 1662940800, "8B": 1666569600, "9B": 1670889600, AC: 1674432e3, BC: 1679875200, CC: null, RC: null } }, F: { A: { "0": 6597e-6, "1": 0.013434, "2": 6702e-6, "3": 6015e-6, "4": 5595e-6, "5": 4393e-6, "6": 8162e-6, "7": 4879e-6, "8": 4879e-6, "9": 3861e-6, F: 82e-4, B: 0.016581, C: 4317e-6, G: 685e-5, M: 685e-5, N: 685e-5, O: 5014e-6, y: 6015e-6, g: 4879e-6, z: 6597e-6, AB: 5152e-6, BB: 5014e-6, CB: 9758e-6, DB: 4879e-6, EB: 4081e-6, FB: 4283e-6, GB: 4367e-6, HB: 4534e-6, IB: 4081e-6, JB: 4227e-6, KB: 4418e-6, LB: 4161e-6, MB: 4227e-6, NB: 4725e-6, OB: 0.012243, PB: 8942e-6, QB: 4707e-6, RB: 4827e-6, SB: 4707e-6, TB: 4707e-6, UB: 4326e-6, VB: 8922e-6, WB: 0.014349, XB: 4425e-6, YB: 472e-5, ZB: 4425e-6, aB: 4425e-6, bB: 472e-5, cB: 4532e-6, dB: 4566e-6, eB: 0.02283, fB: 867e-5, gB: 4656e-6, hB: 4642e-6, iB: 3929e-6, jB: 944e-5, kB: 4293e-6, lB: 3929e-6, mB: 4298e-6, h: 0.096692, nB: 8162e-6, oB: 4141e-6, pB: 4257e-6, qB: 3939e-6, rB: 8236e-6, P: 3855e-6, Q: 3939e-6, R: 8514e-6, yB: 3939e-6, S: 3939e-6, T: 3702e-6, U: 4081e-6, V: 3855e-6, W: 3855e-6, X: 3929e-6, Y: 3861e-6, Z: 0.011703, a: 7546e-6, b: 0.011829, c: 0.069498, d: 0.020405, e: 0.514206, SC: 685e-5, TC: 0, UC: 8392e-6, VC: 4706e-6, sB: 6229e-6, DC: 4879e-6, WC: 8786e-6, tB: 472e-5 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "F", "SC", "TC", "UC", "VC", "B", "sB", "DC", "WC", "C", "tB", "G", "M", "N", "O", "y", "g", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "h", "nB", "oB", "pB", "qB", "rB", "P", "Q", "R", "yB", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "", "", ""], E: "Opera", F: { "0": 1401753600, "1": 1405987200, "2": 1409616e3, "3": 1413331200, "4": 1417132800, "5": 1422316800, "6": 1425945600, "7": 1430179200, "8": 1433808e3, "9": 1438646400, F: 1150761600, SC: 1223424e3, TC: 1251763200, UC: 1267488e3, VC: 1277942400, B: 1292457600, sB: 1302566400, DC: 1309219200, WC: 1323129600, C: 1323129600, tB: 1352073600, G: 1372723200, M: 1377561600, N: 1381104e3, O: 1386288e3, y: 1390867200, g: 1393891200, z: 1399334400, AB: 1442448e3, BB: 1445904e3, CB: 1449100800, DB: 1454371200, EB: 1457308800, FB: 146232e4, GB: 1465344e3, HB: 1470096e3, IB: 1474329600, JB: 1477267200, KB: 1481587200, LB: 1486425600, MB: 1490054400, NB: 1494374400, OB: 1498003200, PB: 1502236800, QB: 1506470400, RB: 1510099200, SB: 1515024e3, TB: 1517961600, UB: 1521676800, VB: 1525910400, WB: 1530144e3, XB: 1534982400, YB: 1537833600, ZB: 1543363200, aB: 1548201600, bB: 1554768e3, cB: 1561593600, dB: 1566259200, eB: 1570406400, fB: 1573689600, gB: 1578441600, hB: 1583971200, iB: 1587513600, jB: 1592956800, kB: 1595894400, lB: 1600128e3, mB: 1603238400, h: 161352e4, nB: 1612224e3, oB: 1616544e3, pB: 1619568e3, qB: 1623715200, rB: 1627948800, P: 1631577600, Q: 1633392e3, R: 1635984e3, yB: 1638403200, S: 1642550400, T: 1644969600, U: 1647993600, V: 1650412800, W: 1652745600, X: 1654646400, Y: 1657152e3, Z: 1660780800, a: 1663113600, b: 1668816e3, c: 1668643200, d: 1671062400, e: 1675209600 }, D: { F: "o", B: "o", C: "o", SC: "o", TC: "o", UC: "o", VC: "o", sB: "o", DC: "o", WC: "o", tB: "o" } }, G: { A: { E: 0, "1B": 0, XC: 0, EC: 316399e-8, YC: 474599e-8, ZC: 316399e-8, aC: 0.014238, bC: 790998e-8, cC: 0.018984, dC: 0.0569519, eC: 316399e-8, fC: 0.0696078, gC: 0.0205659, hC: 0.0237299, iC: 0.0205659, jC: 0.376515, kC: 0.012656, lC: 0.0348039, mC: 0.0316399, nC: 0.0996657, oC: 0.259447, pC: 0.480927, qC: 0.14238, "4B": 0.177184, "5B": 0.207241, "6B": 0.357531, "7B": 1.01406, uB: 1.11214, "8B": 2.47741, "9B": 1.67533, AC: 6.04164, BC: 0.11865, CC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1B", "XC", "EC", "YC", "ZC", "aC", "E", "bC", "cC", "dC", "eC", "fC", "gC", "hC", "iC", "jC", "kC", "lC", "mC", "nC", "oC", "pC", "qC", "4B", "5B", "6B", "7B", "uB", "8B", "9B", "AC", "BC", "CC", "", ""], E: "Safari on iOS", F: { "1B": 1270252800, XC: 1283904e3, EC: 1299628800, YC: 1331078400, ZC: 1359331200, aC: 1394409600, E: 1410912e3, bC: 1413763200, cC: 1442361600, dC: 1458518400, eC: 1473724800, fC: 1490572800, gC: 1505779200, hC: 1522281600, iC: 1537142400, jC: 1553472e3, kC: 1568851200, lC: 1572220800, mC: 1580169600, nC: 1585008e3, oC: 1600214400, pC: 1619395200, qC: 1632096e3, "4B": 1639353600, "5B": 1647216e3, "6B": 1652659200, "7B": 1658275200, uB: 1662940800, "8B": 1666569600, "9B": 1670889600, AC: 1674432e3, BC: 1679875200, CC: null } }, H: { A: { rC: 1.0085 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "rC", "", "", ""], E: "Opera Mini", F: { rC: 1426464e3 } }, I: { A: { vB: 0, I: 0.0240008, H: 0, sC: 0, tC: 0.0720023, uC: 0, vC: 0.0160005, EC: 0.0720023, wC: 0, xC: 0.248008 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "sC", "tC", "uC", "vB", "I", "vC", "EC", "wC", "xC", "H", "", "", ""], E: "Android Browser", F: { sC: 1256515200, tC: 1274313600, uC: 1291593600, vB: 1298332800, I: 1318896e3, vC: 1341792e3, EC: 1374624e3, wC: 1386547200, xC: 1401667200, H: 1680652800 } }, J: { A: { D: 0, A: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "D", "A", "", "", ""], E: "Blackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, h: 0.0111391, sB: 0, DC: 0, tB: 0 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "sB", "DC", "C", "tB", "h", "", "", ""], E: "Opera Mobile", F: { A: 1287100800, B: 1300752e3, sB: 1314835200, DC: 1318291200, C: 1330300800, tB: 1349740800, h: 1673827200 }, D: { h: "webkit" } }, L: { A: { H: 40.8907 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "H", "", "", ""], E: "Chrome for Android", F: { H: 1680652800 } }, M: { A: { f: 0.2959 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "f", "", "", ""], E: "Firefox for Android", F: { f: 1676332800 } }, N: { A: { A: 0.0115934, B: 0.022664 }, B: "ms", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "", "", ""], E: "IE Mobile", F: { A: 1340150400, B: 1353456e3 } }, O: { A: { yC: 0.905454 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "yC", "", "", ""], E: "UC Browser for Android", F: { yC: 1634688e3 }, D: { yC: "webkit" } }, P: { A: { I: 0.147621, g: 1.90853, zC: 0.0103543, "0C": 0.010304, "1C": 0.0527219, "2C": 0.0103584, "3C": 0.0104443, "2B": 0.0105043, "4C": 0.0210887, "5C": 0.0103982, "6C": 0.0316331, "7C": 0.0316331, "8C": 0.0210887, uB: 0.0527219, "9C": 0.0632662, AD: 0.0738106, BD: 0.253065 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "I", "zC", "0C", "1C", "2C", "3C", "2B", "4C", "5C", "6C", "7C", "8C", "uB", "9C", "AD", "BD", "g", "", "", ""], E: "Samsung Internet", F: { I: 1461024e3, zC: 1481846400, "0C": 1509408e3, "1C": 1528329600, "2C": 1546128e3, "3C": 1554163200, "2B": 1567900800, "4C": 1582588800, "5C": 1593475200, "6C": 1605657600, "7C": 1618531200, "8C": 1629072e3, uB: 1640736e3, "9C": 1651708800, AD: 1659657600, BD: 1667260800, g: 1677369600 } }, Q: { A: { "3B": 0.11836 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "3B", "", "", ""], E: "QQ Browser", F: { "3B": 1663718400 } }, R: { A: { CD: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "CD", "", "", ""], E: "Baidu Browser", F: { CD: 1663027200 } }, S: { A: { DD: 0.071016, ED: 0 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "DD", "ED", "", "", ""], E: "KaiOS Browser", F: { DD: 1527811200, ED: 1631664e3 } } };
  }
});

// node_modules/caniuse-lite/dist/unpacker/agents.js
var require_agents2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/agents.js"(exports, module) {
    "use strict";
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var agentsData = require_agents();
    function unpackBrowserVersions(versionsData) {
      return Object.keys(versionsData).reduce((usage, version) => {
        usage[versions[version]] = versionsData[version];
        return usage;
      }, {});
    }
    module.exports.agents = Object.keys(agentsData).reduce((map, key) => {
      let versionsData = agentsData[key];
      map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {
        if (entry === "A") {
          data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "C") {
          data.versions = versionsData[entry].reduce((list, version) => {
            if (version === "") {
              list.push(null);
            } else {
              list.push(versions[version]);
            }
            return list;
          }, []);
        } else if (entry === "D") {
          data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "E") {
          data.browser = versionsData[entry];
        } else if (entry === "F") {
          data.release_date = Object.keys(versionsData[entry]).reduce(
            (map2, key2) => {
              map2[versions[key2]] = versionsData[entry][key2];
              return map2;
            },
            {}
          );
        } else {
          data.prefix = versionsData[entry];
        }
        return data;
      }, {});
      return map;
    }, {});
  }
});

// node_modules/node-releases/data/processed/envs.json
var require_envs = __commonJS({
  "node_modules/node-releases/data/processed/envs.json"(exports, module) {
    module.exports = [{ name: "nodejs", version: "0.2.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.3.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.4.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.5.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.6.0", date: "2011-11-04", lts: false, security: false }, { name: "nodejs", version: "0.7.0", date: "2012-01-17", lts: false, security: false }, { name: "nodejs", version: "0.8.0", date: "2012-06-22", lts: false, security: false }, { name: "nodejs", version: "0.9.0", date: "2012-07-20", lts: false, security: false }, { name: "nodejs", version: "0.10.0", date: "2013-03-11", lts: false, security: false }, { name: "nodejs", version: "0.11.0", date: "2013-03-28", lts: false, security: false }, { name: "nodejs", version: "0.12.0", date: "2015-02-06", lts: false, security: false }, { name: "nodejs", version: "4.0.0", date: "2015-09-08", lts: false, security: false }, { name: "nodejs", version: "4.1.0", date: "2015-09-17", lts: false, security: false }, { name: "nodejs", version: "4.2.0", date: "2015-10-12", lts: "Argon", security: false }, { name: "nodejs", version: "4.3.0", date: "2016-02-09", lts: "Argon", security: false }, { name: "nodejs", version: "4.4.0", date: "2016-03-08", lts: "Argon", security: false }, { name: "nodejs", version: "4.5.0", date: "2016-08-16", lts: "Argon", security: false }, { name: "nodejs", version: "4.6.0", date: "2016-09-27", lts: "Argon", security: true }, { name: "nodejs", version: "4.7.0", date: "2016-12-06", lts: "Argon", security: false }, { name: "nodejs", version: "4.8.0", date: "2017-02-21", lts: "Argon", security: false }, { name: "nodejs", version: "4.9.0", date: "2018-03-28", lts: "Argon", security: true }, { name: "nodejs", version: "5.0.0", date: "2015-10-29", lts: false, security: false }, { name: "nodejs", version: "5.1.0", date: "2015-11-17", lts: false, security: false }, { name: "nodejs", version: "5.2.0", date: "2015-12-09", lts: false, security: false }, { name: "nodejs", version: "5.3.0", date: "2015-12-15", lts: false, security: false }, { name: "nodejs", version: "5.4.0", date: "2016-01-06", lts: false, security: false }, { name: "nodejs", version: "5.5.0", date: "2016-01-21", lts: false, security: false }, { name: "nodejs", version: "5.6.0", date: "2016-02-09", lts: false, security: false }, { name: "nodejs", version: "5.7.0", date: "2016-02-23", lts: false, security: false }, { name: "nodejs", version: "5.8.0", date: "2016-03-09", lts: false, security: false }, { name: "nodejs", version: "5.9.0", date: "2016-03-16", lts: false, security: false }, { name: "nodejs", version: "5.10.0", date: "2016-04-01", lts: false, security: false }, { name: "nodejs", version: "5.11.0", date: "2016-04-21", lts: false, security: false }, { name: "nodejs", version: "5.12.0", date: "2016-06-23", lts: false, security: false }, { name: "nodejs", version: "6.0.0", date: "2016-04-26", lts: false, security: false }, { name: "nodejs", version: "6.1.0", date: "2016-05-05", lts: false, security: false }, { name: "nodejs", version: "6.2.0", date: "2016-05-17", lts: false, security: false }, { name: "nodejs", version: "6.3.0", date: "2016-07-06", lts: false, security: false }, { name: "nodejs", version: "6.4.0", date: "2016-08-12", lts: false, security: false }, { name: "nodejs", version: "6.5.0", date: "2016-08-26", lts: false, security: false }, { name: "nodejs", version: "6.6.0", date: "2016-09-14", lts: false, security: false }, { name: "nodejs", version: "6.7.0", date: "2016-09-27", lts: false, security: true }, { name: "nodejs", version: "6.8.0", date: "2016-10-12", lts: false, security: false }, { name: "nodejs", version: "6.9.0", date: "2016-10-18", lts: "Boron", security: false }, { name: "nodejs", version: "6.10.0", date: "2017-02-21", lts: "Boron", security: false }, { name: "nodejs", version: "6.11.0", date: "2017-06-06", lts: "Boron", security: false }, { name: "nodejs", version: "6.12.0", date: "2017-11-06", lts: "Boron", security: false }, { name: "nodejs", version: "6.13.0", date: "2018-02-10", lts: "Boron", security: false }, { name: "nodejs", version: "6.14.0", date: "2018-03-28", lts: "Boron", security: true }, { name: "nodejs", version: "6.15.0", date: "2018-11-27", lts: "Boron", security: true }, { name: "nodejs", version: "6.16.0", date: "2018-12-26", lts: "Boron", security: false }, { name: "nodejs", version: "6.17.0", date: "2019-02-28", lts: "Boron", security: true }, { name: "nodejs", version: "7.0.0", date: "2016-10-25", lts: false, security: false }, { name: "nodejs", version: "7.1.0", date: "2016-11-08", lts: false, security: false }, { name: "nodejs", version: "7.2.0", date: "2016-11-22", lts: false, security: false }, { name: "nodejs", version: "7.3.0", date: "2016-12-20", lts: false, security: false }, { name: "nodejs", version: "7.4.0", date: "2017-01-04", lts: false, security: false }, { name: "nodejs", version: "7.5.0", date: "2017-01-31", lts: false, security: false }, { name: "nodejs", version: "7.6.0", date: "2017-02-21", lts: false, security: false }, { name: "nodejs", version: "7.7.0", date: "2017-02-28", lts: false, security: false }, { name: "nodejs", version: "7.8.0", date: "2017-03-29", lts: false, security: false }, { name: "nodejs", version: "7.9.0", date: "2017-04-11", lts: false, security: false }, { name: "nodejs", version: "7.10.0", date: "2017-05-02", lts: false, security: false }, { name: "nodejs", version: "8.0.0", date: "2017-05-30", lts: false, security: false }, { name: "nodejs", version: "8.1.0", date: "2017-06-08", lts: false, security: false }, { name: "nodejs", version: "8.2.0", date: "2017-07-19", lts: false, security: false }, { name: "nodejs", version: "8.3.0", date: "2017-08-08", lts: false, security: false }, { name: "nodejs", version: "8.4.0", date: "2017-08-15", lts: false, security: false }, { name: "nodejs", version: "8.5.0", date: "2017-09-12", lts: false, security: false }, { name: "nodejs", version: "8.6.0", date: "2017-09-26", lts: false, security: false }, { name: "nodejs", version: "8.7.0", date: "2017-10-11", lts: false, security: false }, { name: "nodejs", version: "8.8.0", date: "2017-10-24", lts: false, security: false }, { name: "nodejs", version: "8.9.0", date: "2017-10-31", lts: "Carbon", security: false }, { name: "nodejs", version: "8.10.0", date: "2018-03-06", lts: "Carbon", security: false }, { name: "nodejs", version: "8.11.0", date: "2018-03-28", lts: "Carbon", security: true }, { name: "nodejs", version: "8.12.0", date: "2018-09-10", lts: "Carbon", security: false }, { name: "nodejs", version: "8.13.0", date: "2018-11-20", lts: "Carbon", security: false }, { name: "nodejs", version: "8.14.0", date: "2018-11-27", lts: "Carbon", security: true }, { name: "nodejs", version: "8.15.0", date: "2018-12-26", lts: "Carbon", security: false }, { name: "nodejs", version: "8.16.0", date: "2019-04-16", lts: "Carbon", security: false }, { name: "nodejs", version: "8.17.0", date: "2019-12-17", lts: "Carbon", security: true }, { name: "nodejs", version: "9.0.0", date: "2017-10-31", lts: false, security: false }, { name: "nodejs", version: "9.1.0", date: "2017-11-07", lts: false, security: false }, { name: "nodejs", version: "9.2.0", date: "2017-11-14", lts: false, security: false }, { name: "nodejs", version: "9.3.0", date: "2017-12-12", lts: false, security: false }, { name: "nodejs", version: "9.4.0", date: "2018-01-10", lts: false, security: false }, { name: "nodejs", version: "9.5.0", date: "2018-01-31", lts: false, security: false }, { name: "nodejs", version: "9.6.0", date: "2018-02-21", lts: false, security: false }, { name: "nodejs", version: "9.7.0", date: "2018-03-01", lts: false, security: false }, { name: "nodejs", version: "9.8.0", date: "2018-03-07", lts: false, security: false }, { name: "nodejs", version: "9.9.0", date: "2018-03-21", lts: false, security: false }, { name: "nodejs", version: "9.10.0", date: "2018-03-28", lts: false, security: true }, { name: "nodejs", version: "9.11.0", date: "2018-04-04", lts: false, security: false }, { name: "nodejs", version: "10.0.0", date: "2018-04-24", lts: false, security: false }, { name: "nodejs", version: "10.1.0", date: "2018-05-08", lts: false, security: false }, { name: "nodejs", version: "10.2.0", date: "2018-05-23", lts: false, security: false }, { name: "nodejs", version: "10.3.0", date: "2018-05-29", lts: false, security: false }, { name: "nodejs", version: "10.4.0", date: "2018-06-06", lts: false, security: false }, { name: "nodejs", version: "10.5.0", date: "2018-06-20", lts: false, security: false }, { name: "nodejs", version: "10.6.0", date: "2018-07-04", lts: false, security: false }, { name: "nodejs", version: "10.7.0", date: "2018-07-18", lts: false, security: false }, { name: "nodejs", version: "10.8.0", date: "2018-08-01", lts: false, security: false }, { name: "nodejs", version: "10.9.0", date: "2018-08-15", lts: false, security: false }, { name: "nodejs", version: "10.10.0", date: "2018-09-06", lts: false, security: false }, { name: "nodejs", version: "10.11.0", date: "2018-09-19", lts: false, security: false }, { name: "nodejs", version: "10.12.0", date: "2018-10-10", lts: false, security: false }, { name: "nodejs", version: "10.13.0", date: "2018-10-30", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.14.0", date: "2018-11-27", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.15.0", date: "2018-12-26", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.16.0", date: "2019-05-28", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.17.0", date: "2019-10-22", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.18.0", date: "2019-12-17", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.19.0", date: "2020-02-05", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.20.0", date: "2020-03-26", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.21.0", date: "2020-06-02", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.22.0", date: "2020-07-21", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.23.0", date: "2020-10-27", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.24.0", date: "2021-02-23", lts: "Dubnium", security: true }, { name: "nodejs", version: "11.0.0", date: "2018-10-23", lts: false, security: false }, { name: "nodejs", version: "11.1.0", date: "2018-10-30", lts: false, security: false }, { name: "nodejs", version: "11.2.0", date: "2018-11-15", lts: false, security: false }, { name: "nodejs", version: "11.3.0", date: "2018-11-27", lts: false, security: true }, { name: "nodejs", version: "11.4.0", date: "2018-12-07", lts: false, security: false }, { name: "nodejs", version: "11.5.0", date: "2018-12-18", lts: false, security: false }, { name: "nodejs", version: "11.6.0", date: "2018-12-26", lts: false, security: false }, { name: "nodejs", version: "11.7.0", date: "2019-01-17", lts: false, security: false }, { name: "nodejs", version: "11.8.0", date: "2019-01-24", lts: false, security: false }, { name: "nodejs", version: "11.9.0", date: "2019-01-30", lts: false, security: false }, { name: "nodejs", version: "11.10.0", date: "2019-02-14", lts: false, security: false }, { name: "nodejs", version: "11.11.0", date: "2019-03-05", lts: false, security: false }, { name: "nodejs", version: "11.12.0", date: "2019-03-14", lts: false, security: false }, { name: "nodejs", version: "11.13.0", date: "2019-03-28", lts: false, security: false }, { name: "nodejs", version: "11.14.0", date: "2019-04-10", lts: false, security: false }, { name: "nodejs", version: "11.15.0", date: "2019-04-30", lts: false, security: false }, { name: "nodejs", version: "12.0.0", date: "2019-04-23", lts: false, security: false }, { name: "nodejs", version: "12.1.0", date: "2019-04-29", lts: false, security: false }, { name: "nodejs", version: "12.2.0", date: "2019-05-07", lts: false, security: false }, { name: "nodejs", version: "12.3.0", date: "2019-05-21", lts: false, security: false }, { name: "nodejs", version: "12.4.0", date: "2019-06-04", lts: false, security: false }, { name: "nodejs", version: "12.5.0", date: "2019-06-26", lts: false, security: false }, { name: "nodejs", version: "12.6.0", date: "2019-07-03", lts: false, security: false }, { name: "nodejs", version: "12.7.0", date: "2019-07-23", lts: false, security: false }, { name: "nodejs", version: "12.8.0", date: "2019-08-06", lts: false, security: false }, { name: "nodejs", version: "12.9.0", date: "2019-08-20", lts: false, security: false }, { name: "nodejs", version: "12.10.0", date: "2019-09-04", lts: false, security: false }, { name: "nodejs", version: "12.11.0", date: "2019-09-25", lts: false, security: false }, { name: "nodejs", version: "12.12.0", date: "2019-10-11", lts: false, security: false }, { name: "nodejs", version: "12.13.0", date: "2019-10-21", lts: "Erbium", security: false }, { name: "nodejs", version: "12.14.0", date: "2019-12-17", lts: "Erbium", security: true }, { name: "nodejs", version: "12.15.0", date: "2020-02-05", lts: "Erbium", security: true }, { name: "nodejs", version: "12.16.0", date: "2020-02-11", lts: "Erbium", security: false }, { name: "nodejs", version: "12.17.0", date: "2020-05-26", lts: "Erbium", security: false }, { name: "nodejs", version: "12.18.0", date: "2020-06-02", lts: "Erbium", security: true }, { name: "nodejs", version: "12.19.0", date: "2020-10-06", lts: "Erbium", security: false }, { name: "nodejs", version: "12.20.0", date: "2020-11-24", lts: "Erbium", security: false }, { name: "nodejs", version: "12.21.0", date: "2021-02-23", lts: "Erbium", security: true }, { name: "nodejs", version: "12.22.0", date: "2021-03-30", lts: "Erbium", security: false }, { name: "nodejs", version: "13.0.0", date: "2019-10-22", lts: false, security: false }, { name: "nodejs", version: "13.1.0", date: "2019-11-05", lts: false, security: false }, { name: "nodejs", version: "13.2.0", date: "2019-11-21", lts: false, security: false }, { name: "nodejs", version: "13.3.0", date: "2019-12-03", lts: false, security: false }, { name: "nodejs", version: "13.4.0", date: "2019-12-17", lts: false, security: true }, { name: "nodejs", version: "13.5.0", date: "2019-12-18", lts: false, security: false }, { name: "nodejs", version: "13.6.0", date: "2020-01-07", lts: false, security: false }, { name: "nodejs", version: "13.7.0", date: "2020-01-21", lts: false, security: false }, { name: "nodejs", version: "13.8.0", date: "2020-02-05", lts: false, security: true }, { name: "nodejs", version: "13.9.0", date: "2020-02-18", lts: false, security: false }, { name: "nodejs", version: "13.10.0", date: "2020-03-04", lts: false, security: false }, { name: "nodejs", version: "13.11.0", date: "2020-03-12", lts: false, security: false }, { name: "nodejs", version: "13.12.0", date: "2020-03-26", lts: false, security: false }, { name: "nodejs", version: "13.13.0", date: "2020-04-14", lts: false, security: false }, { name: "nodejs", version: "13.14.0", date: "2020-04-29", lts: false, security: false }, { name: "nodejs", version: "14.0.0", date: "2020-04-21", lts: false, security: false }, { name: "nodejs", version: "14.1.0", date: "2020-04-29", lts: false, security: false }, { name: "nodejs", version: "14.2.0", date: "2020-05-05", lts: false, security: false }, { name: "nodejs", version: "14.3.0", date: "2020-05-19", lts: false, security: false }, { name: "nodejs", version: "14.4.0", date: "2020-06-02", lts: false, security: true }, { name: "nodejs", version: "14.5.0", date: "2020-06-30", lts: false, security: false }, { name: "nodejs", version: "14.6.0", date: "2020-07-20", lts: false, security: false }, { name: "nodejs", version: "14.7.0", date: "2020-07-29", lts: false, security: false }, { name: "nodejs", version: "14.8.0", date: "2020-08-11", lts: false, security: false }, { name: "nodejs", version: "14.9.0", date: "2020-08-27", lts: false, security: false }, { name: "nodejs", version: "14.10.0", date: "2020-09-08", lts: false, security: false }, { name: "nodejs", version: "14.11.0", date: "2020-09-15", lts: false, security: true }, { name: "nodejs", version: "14.12.0", date: "2020-09-22", lts: false, security: false }, { name: "nodejs", version: "14.13.0", date: "2020-09-29", lts: false, security: false }, { name: "nodejs", version: "14.14.0", date: "2020-10-15", lts: false, security: false }, { name: "nodejs", version: "14.15.0", date: "2020-10-27", lts: "Fermium", security: false }, { name: "nodejs", version: "14.16.0", date: "2021-02-23", lts: "Fermium", security: true }, { name: "nodejs", version: "14.17.0", date: "2021-05-11", lts: "Fermium", security: false }, { name: "nodejs", version: "14.18.0", date: "2021-09-28", lts: "Fermium", security: false }, { name: "nodejs", version: "14.19.0", date: "2022-02-01", lts: "Fermium", security: false }, { name: "nodejs", version: "14.20.0", date: "2022-07-07", lts: "Fermium", security: true }, { name: "nodejs", version: "14.21.0", date: "2022-11-01", lts: "Fermium", security: false }, { name: "nodejs", version: "15.0.0", date: "2020-10-20", lts: false, security: false }, { name: "nodejs", version: "15.1.0", date: "2020-11-04", lts: false, security: false }, { name: "nodejs", version: "15.2.0", date: "2020-11-10", lts: false, security: false }, { name: "nodejs", version: "15.3.0", date: "2020-11-24", lts: false, security: false }, { name: "nodejs", version: "15.4.0", date: "2020-12-09", lts: false, security: false }, { name: "nodejs", version: "15.5.0", date: "2020-12-22", lts: false, security: false }, { name: "nodejs", version: "15.6.0", date: "2021-01-14", lts: false, security: false }, { name: "nodejs", version: "15.7.0", date: "2021-01-25", lts: false, security: false }, { name: "nodejs", version: "15.8.0", date: "2021-02-02", lts: false, security: false }, { name: "nodejs", version: "15.9.0", date: "2021-02-18", lts: false, security: false }, { name: "nodejs", version: "15.10.0", date: "2021-02-23", lts: false, security: true }, { name: "nodejs", version: "15.11.0", date: "2021-03-03", lts: false, security: false }, { name: "nodejs", version: "15.12.0", date: "2021-03-17", lts: false, security: false }, { name: "nodejs", version: "15.13.0", date: "2021-03-31", lts: false, security: false }, { name: "nodejs", version: "15.14.0", date: "2021-04-06", lts: false, security: false }, { name: "nodejs", version: "16.0.0", date: "2021-04-20", lts: false, security: false }, { name: "nodejs", version: "16.1.0", date: "2021-05-04", lts: false, security: false }, { name: "nodejs", version: "16.2.0", date: "2021-05-19", lts: false, security: false }, { name: "nodejs", version: "16.3.0", date: "2021-06-03", lts: false, security: false }, { name: "nodejs", version: "16.4.0", date: "2021-06-23", lts: false, security: false }, { name: "nodejs", version: "16.5.0", date: "2021-07-14", lts: false, security: false }, { name: "nodejs", version: "16.6.0", date: "2021-07-29", lts: false, security: true }, { name: "nodejs", version: "16.7.0", date: "2021-08-18", lts: false, security: false }, { name: "nodejs", version: "16.8.0", date: "2021-08-25", lts: false, security: false }, { name: "nodejs", version: "16.9.0", date: "2021-09-07", lts: false, security: false }, { name: "nodejs", version: "16.10.0", date: "2021-09-22", lts: false, security: false }, { name: "nodejs", version: "16.11.0", date: "2021-10-08", lts: false, security: false }, { name: "nodejs", version: "16.12.0", date: "2021-10-20", lts: false, security: false }, { name: "nodejs", version: "16.13.0", date: "2021-10-26", lts: "Gallium", security: false }, { name: "nodejs", version: "16.14.0", date: "2022-02-08", lts: "Gallium", security: false }, { name: "nodejs", version: "16.15.0", date: "2022-04-26", lts: "Gallium", security: false }, { name: "nodejs", version: "16.16.0", date: "2022-07-07", lts: "Gallium", security: true }, { name: "nodejs", version: "16.17.0", date: "2022-08-16", lts: "Gallium", security: false }, { name: "nodejs", version: "16.18.0", date: "2022-10-12", lts: "Gallium", security: false }, { name: "nodejs", version: "16.19.0", date: "2022-12-13", lts: "Gallium", security: false }, { name: "nodejs", version: "17.0.0", date: "2021-10-19", lts: false, security: false }, { name: "nodejs", version: "17.1.0", date: "2021-11-09", lts: false, security: false }, { name: "nodejs", version: "17.2.0", date: "2021-11-30", lts: false, security: false }, { name: "nodejs", version: "17.3.0", date: "2021-12-17", lts: false, security: false }, { name: "nodejs", version: "17.4.0", date: "2022-01-18", lts: false, security: false }, { name: "nodejs", version: "17.5.0", date: "2022-02-10", lts: false, security: false }, { name: "nodejs", version: "17.6.0", date: "2022-02-22", lts: false, security: false }, { name: "nodejs", version: "17.7.0", date: "2022-03-09", lts: false, security: false }, { name: "nodejs", version: "17.8.0", date: "2022-03-22", lts: false, security: false }, { name: "nodejs", version: "17.9.0", date: "2022-04-07", lts: false, security: false }, { name: "nodejs", version: "18.0.0", date: "2022-04-18", lts: false, security: false }, { name: "nodejs", version: "18.1.0", date: "2022-05-03", lts: false, security: false }, { name: "nodejs", version: "18.2.0", date: "2022-05-17", lts: false, security: false }, { name: "nodejs", version: "18.3.0", date: "2022-06-02", lts: false, security: false }, { name: "nodejs", version: "18.4.0", date: "2022-06-16", lts: false, security: false }, { name: "nodejs", version: "18.5.0", date: "2022-07-06", lts: false, security: true }, { name: "nodejs", version: "18.6.0", date: "2022-07-13", lts: false, security: false }, { name: "nodejs", version: "18.7.0", date: "2022-07-26", lts: false, security: false }, { name: "nodejs", version: "18.8.0", date: "2022-08-24", lts: false, security: false }, { name: "nodejs", version: "18.9.0", date: "2022-09-07", lts: false, security: false }, { name: "nodejs", version: "18.10.0", date: "2022-09-28", lts: false, security: false }, { name: "nodejs", version: "18.11.0", date: "2022-10-13", lts: false, security: false }, { name: "nodejs", version: "18.12.0", date: "2022-10-25", lts: "Hydrogen", security: false }, { name: "nodejs", version: "18.13.0", date: "2023-01-05", lts: "Hydrogen", security: false }, { name: "nodejs", version: "18.14.0", date: "2023-02-01", lts: "Hydrogen", security: false }, { name: "nodejs", version: "19.0.0", date: "2022-10-17", lts: false, security: false }, { name: "nodejs", version: "19.1.0", date: "2022-11-14", lts: false, security: false }, { name: "nodejs", version: "19.2.0", date: "2022-11-29", lts: false, security: false }, { name: "nodejs", version: "19.3.0", date: "2022-12-14", lts: false, security: false }, { name: "nodejs", version: "19.4.0", date: "2023-01-05", lts: false, security: false }, { name: "nodejs", version: "19.5.0", date: "2023-01-24", lts: false, security: false }, { name: "nodejs", version: "19.6.0", date: "2023-02-01", lts: false, security: false }];
  }
});

// node_modules/node-releases/data/release-schedule/release-schedule.json
var require_release_schedule = __commonJS({
  "node_modules/node-releases/data/release-schedule/release-schedule.json"(exports, module) {
    module.exports = { "v0.8": { start: "2012-06-25", end: "2014-07-31" }, "v0.10": { start: "2013-03-11", end: "2016-10-31" }, "v0.12": { start: "2015-02-06", end: "2016-12-31" }, v4: { start: "2015-09-08", lts: "2015-10-12", maintenance: "2017-04-01", end: "2018-04-30", codename: "Argon" }, v5: { start: "2015-10-29", maintenance: "2016-04-30", end: "2016-06-30" }, v6: { start: "2016-04-26", lts: "2016-10-18", maintenance: "2018-04-30", end: "2019-04-30", codename: "Boron" }, v7: { start: "2016-10-25", maintenance: "2017-04-30", end: "2017-06-30" }, v8: { start: "2017-05-30", lts: "2017-10-31", maintenance: "2019-01-01", end: "2019-12-31", codename: "Carbon" }, v9: { start: "2017-10-01", maintenance: "2018-04-01", end: "2018-06-30" }, v10: { start: "2018-04-24", lts: "2018-10-30", maintenance: "2020-05-19", end: "2021-04-30", codename: "Dubnium" }, v11: { start: "2018-10-23", maintenance: "2019-04-22", end: "2019-06-01" }, v12: { start: "2019-04-23", lts: "2019-10-21", maintenance: "2020-11-30", end: "2022-04-30", codename: "Erbium" }, v13: { start: "2019-10-22", maintenance: "2020-04-01", end: "2020-06-01" }, v14: { start: "2020-04-21", lts: "2020-10-27", maintenance: "2021-10-19", end: "2023-04-30", codename: "Fermium" }, v15: { start: "2020-10-20", maintenance: "2021-04-01", end: "2021-06-01" }, v16: { start: "2021-04-20", lts: "2021-10-26", maintenance: "2022-10-18", end: "2023-09-11", codename: "Gallium" }, v17: { start: "2021-10-19", maintenance: "2022-04-01", end: "2022-06-01" }, v18: { start: "2022-04-19", lts: "2022-10-25", maintenance: "2023-10-18", end: "2025-04-30", codename: "Hydrogen" }, v19: { start: "2022-10-18", maintenance: "2023-04-01", end: "2023-06-01" }, v20: { start: "2023-04-18", lts: "2023-10-24", maintenance: "2024-10-22", end: "2026-04-30", codename: "" } };
  }
});

// node_modules/electron-to-chromium/versions.js
var require_versions = __commonJS({
  "node_modules/electron-to-chromium/versions.js"(exports, module) {
    module.exports = {
      "0.20": "39",
      "0.21": "41",
      "0.22": "41",
      "0.23": "41",
      "0.24": "41",
      "0.25": "42",
      "0.26": "42",
      "0.27": "43",
      "0.28": "43",
      "0.29": "43",
      "0.30": "44",
      "0.31": "45",
      "0.32": "45",
      "0.33": "45",
      "0.34": "45",
      "0.35": "45",
      "0.36": "47",
      "0.37": "49",
      "1.0": "49",
      "1.1": "50",
      "1.2": "51",
      "1.3": "52",
      "1.4": "53",
      "1.5": "54",
      "1.6": "56",
      "1.7": "58",
      "1.8": "59",
      "2.0": "61",
      "2.1": "61",
      "3.0": "66",
      "3.1": "66",
      "4.0": "69",
      "4.1": "69",
      "4.2": "69",
      "5.0": "73",
      "6.0": "76",
      "6.1": "76",
      "7.0": "78",
      "7.1": "78",
      "7.2": "78",
      "7.3": "78",
      "8.0": "80",
      "8.1": "80",
      "8.2": "80",
      "8.3": "80",
      "8.4": "80",
      "8.5": "80",
      "9.0": "83",
      "9.1": "83",
      "9.2": "83",
      "9.3": "83",
      "9.4": "83",
      "10.0": "85",
      "10.1": "85",
      "10.2": "85",
      "10.3": "85",
      "10.4": "85",
      "11.0": "87",
      "11.1": "87",
      "11.2": "87",
      "11.3": "87",
      "11.4": "87",
      "11.5": "87",
      "12.0": "89",
      "12.1": "89",
      "12.2": "89",
      "13.0": "91",
      "13.1": "91",
      "13.2": "91",
      "13.3": "91",
      "13.4": "91",
      "13.5": "91",
      "13.6": "91",
      "14.0": "93",
      "14.1": "93",
      "14.2": "93",
      "15.0": "94",
      "15.1": "94",
      "15.2": "94",
      "15.3": "94",
      "15.4": "94",
      "15.5": "94",
      "16.0": "96",
      "16.1": "96",
      "16.2": "96",
      "17.0": "98",
      "17.1": "98",
      "17.2": "98",
      "17.3": "98",
      "17.4": "98",
      "18.0": "100",
      "18.1": "100",
      "18.2": "100",
      "18.3": "100",
      "19.0": "102",
      "19.1": "102",
      "20.0": "104",
      "20.1": "104",
      "20.2": "104",
      "20.3": "104",
      "21.0": "106",
      "21.1": "106",
      "22.0": "108"
    };
  }
});

// node_modules/browserslist/error.js
var require_error = __commonJS({
  "node_modules/browserslist/error.js"(exports, module) {
    function BrowserslistError(message) {
      this.name = "BrowserslistError";
      this.message = message;
      this.browserslist = true;
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, BrowserslistError);
      }
    }
    BrowserslistError.prototype = Error.prototype;
    module.exports = BrowserslistError;
  }
});

// node_modules/browserslist/parse.js
var require_parse2 = __commonJS({
  "node_modules/browserslist/parse.js"(exports, module) {
    var AND_REGEXP = /^\s+and\s+(.*)/i;
    var OR_REGEXP = /^(?:,\s*|\s+or\s+)(.*)/i;
    function flatten(array) {
      if (!Array.isArray(array))
        return [array];
      return array.reduce(function(a, b) {
        return a.concat(flatten(b));
      }, []);
    }
    function find(string, predicate) {
      for (var n = 1, max = string.length; n <= max; n++) {
        var parsed = string.substr(-n, n);
        if (predicate(parsed, n, max)) {
          return string.slice(0, -n);
        }
      }
      return "";
    }
    function matchQuery(all, query) {
      var node = { query };
      if (query.indexOf("not ") === 0) {
        node.not = true;
        query = query.slice(4);
      }
      for (var name in all) {
        var type = all[name];
        var match = query.match(type.regexp);
        if (match) {
          node.type = name;
          for (var i = 0; i < type.matches.length; i++) {
            node[type.matches[i]] = match[i + 1];
          }
          return node;
        }
      }
      node.type = "unknown";
      return node;
    }
    function matchBlock(all, string, qs) {
      var node;
      return find(string, function(parsed, n, max) {
        if (AND_REGEXP.test(parsed)) {
          node = matchQuery(all, parsed.match(AND_REGEXP)[1]);
          node.compose = "and";
          qs.unshift(node);
          return true;
        } else if (OR_REGEXP.test(parsed)) {
          node = matchQuery(all, parsed.match(OR_REGEXP)[1]);
          node.compose = "or";
          qs.unshift(node);
          return true;
        } else if (n === max) {
          node = matchQuery(all, parsed.trim());
          node.compose = "or";
          qs.unshift(node);
          return true;
        }
        return false;
      });
    }
    module.exports = function parse(all, queries) {
      if (!Array.isArray(queries))
        queries = [queries];
      return flatten(
        queries.map(function(block) {
          var qs = [];
          do {
            block = matchBlock(all, block, qs);
          } while (block);
          return qs;
        })
      );
    };
  }
});

// node_modules/browserslist/browser.js
var require_browser = __commonJS({
  "node_modules/browserslist/browser.js"(exports, module) {
    var BrowserslistError = require_error();
    function noop() {
    }
    module.exports = {
      loadQueries: function loadQueries() {
        throw new BrowserslistError(
          "Sharable configs are not supported in client-side build of Browserslist"
        );
      },
      getStat: function getStat(opts) {
        return opts.stats;
      },
      loadConfig: function loadConfig(opts) {
        if (opts.config) {
          throw new BrowserslistError(
            "Browserslist config are not supported in client-side build"
          );
        }
      },
      loadCountry: function loadCountry() {
        throw new BrowserslistError(
          "Country statistics are not supported in client-side build of Browserslist"
        );
      },
      loadFeature: function loadFeature() {
        throw new BrowserslistError(
          "Supports queries are not available in client-side build of Browserslist"
        );
      },
      currentNode: function currentNode(resolve, context) {
        return resolve(["maintained node versions"], context)[0];
      },
      parseConfig: noop,
      readConfig: noop,
      findConfig: noop,
      clearCaches: noop,
      oldDataWarning: noop,
      env: {}
    };
  }
});

// node_modules/browserslist/index.js
var require_browserslist = __commonJS({
  "node_modules/browserslist/index.js"(exports, module) {
    var jsReleases = require_envs();
    var agents = require_agents2().agents;
    var jsEOL = require_release_schedule();
    var path = require_path();
    var e2c = require_versions();
    var BrowserslistError = require_error();
    var parse = require_parse2();
    var env = require_browser();
    var YEAR = 365.259641 * 24 * 60 * 60 * 1e3;
    var ANDROID_EVERGREEN_FIRST = 37;
    function isVersionsMatch(versionA, versionB) {
      return (versionA + ".").indexOf(versionB + ".") === 0;
    }
    function isEolReleased(name) {
      var version = name.slice(1);
      return browserslist.nodeVersions.some(function(i) {
        return isVersionsMatch(i, version);
      });
    }
    function normalize(versions) {
      return versions.filter(function(version) {
        return typeof version === "string";
      });
    }
    function normalizeElectron(version) {
      var versionToUse = version;
      if (version.split(".").length === 3) {
        versionToUse = version.split(".").slice(0, -1).join(".");
      }
      return versionToUse;
    }
    function nameMapper(name) {
      return function mapName(version) {
        return name + " " + version;
      };
    }
    function getMajor(version) {
      return parseInt(version.split(".")[0]);
    }
    function getMajorVersions(released, number) {
      if (released.length === 0)
        return [];
      var majorVersions = uniq(released.map(getMajor));
      var minimum = majorVersions[majorVersions.length - number];
      if (!minimum) {
        return released;
      }
      var selected = [];
      for (var i = released.length - 1; i >= 0; i--) {
        if (minimum > getMajor(released[i]))
          break;
        selected.unshift(released[i]);
      }
      return selected;
    }
    function uniq(array) {
      var filtered = [];
      for (var i = 0; i < array.length; i++) {
        if (filtered.indexOf(array[i]) === -1)
          filtered.push(array[i]);
      }
      return filtered;
    }
    function fillUsage(result, name, data) {
      for (var i in data) {
        result[name + " " + i] = data[i];
      }
    }
    function generateFilter(sign, version) {
      version = parseFloat(version);
      if (sign === ">") {
        return function(v) {
          return parseFloat(v) > version;
        };
      } else if (sign === ">=") {
        return function(v) {
          return parseFloat(v) >= version;
        };
      } else if (sign === "<") {
        return function(v) {
          return parseFloat(v) < version;
        };
      } else {
        return function(v) {
          return parseFloat(v) <= version;
        };
      }
    }
    function generateSemverFilter(sign, version) {
      version = version.split(".").map(parseSimpleInt);
      version[1] = version[1] || 0;
      version[2] = version[2] || 0;
      if (sign === ">") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(v, version) > 0;
        };
      } else if (sign === ">=") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(v, version) >= 0;
        };
      } else if (sign === "<") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(version, v) > 0;
        };
      } else {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(version, v) >= 0;
        };
      }
    }
    function parseSimpleInt(x) {
      return parseInt(x);
    }
    function compare(a, b) {
      if (a < b)
        return -1;
      if (a > b)
        return 1;
      return 0;
    }
    function compareSemver(a, b) {
      return compare(parseInt(a[0]), parseInt(b[0])) || compare(parseInt(a[1] || "0"), parseInt(b[1] || "0")) || compare(parseInt(a[2] || "0"), parseInt(b[2] || "0"));
    }
    function semverFilterLoose(operator, range) {
      range = range.split(".").map(parseSimpleInt);
      if (typeof range[1] === "undefined") {
        range[1] = "x";
      }
      switch (operator) {
        case "<=":
          return function(version) {
            version = version.split(".").map(parseSimpleInt);
            return compareSemverLoose(version, range) <= 0;
          };
        case ">=":
        default:
          return function(version) {
            version = version.split(".").map(parseSimpleInt);
            return compareSemverLoose(version, range) >= 0;
          };
      }
    }
    function compareSemverLoose(version, range) {
      if (version[0] !== range[0]) {
        return version[0] < range[0] ? -1 : 1;
      }
      if (range[1] === "x") {
        return 0;
      }
      if (version[1] !== range[1]) {
        return version[1] < range[1] ? -1 : 1;
      }
      return 0;
    }
    function resolveVersion(data, version) {
      if (data.versions.indexOf(version) !== -1) {
        return version;
      } else if (browserslist.versionAliases[data.name][version]) {
        return browserslist.versionAliases[data.name][version];
      } else {
        return false;
      }
    }
    function normalizeVersion(data, version) {
      var resolved = resolveVersion(data, version);
      if (resolved) {
        return resolved;
      } else if (data.versions.length === 1) {
        return data.versions[0];
      } else {
        return false;
      }
    }
    function filterByYear(since, context) {
      since = since / 1e3;
      return Object.keys(agents).reduce(function(selected, name) {
        var data = byName(name, context);
        if (!data)
          return selected;
        var versions = Object.keys(data.releaseDate).filter(function(v) {
          var date = data.releaseDate[v];
          return date !== null && date >= since;
        });
        return selected.concat(versions.map(nameMapper(data.name)));
      }, []);
    }
    function cloneData(data) {
      return {
        name: data.name,
        versions: data.versions,
        released: data.released,
        releaseDate: data.releaseDate
      };
    }
    function mapVersions(data, map) {
      data.versions = data.versions.map(function(i2) {
        return map[i2] || i2;
      });
      data.released = data.released.map(function(i2) {
        return map[i2] || i2;
      });
      var fixedDate = {};
      for (var i in data.releaseDate) {
        fixedDate[map[i] || i] = data.releaseDate[i];
      }
      data.releaseDate = fixedDate;
      return data;
    }
    function byName(name, context) {
      name = name.toLowerCase();
      name = browserslist.aliases[name] || name;
      if (context.mobileToDesktop && browserslist.desktopNames[name]) {
        var desktop = browserslist.data[browserslist.desktopNames[name]];
        if (name === "android") {
          return normalizeAndroidData(cloneData(browserslist.data[name]), desktop);
        } else {
          var cloned = cloneData(desktop);
          cloned.name = name;
          if (name === "op_mob") {
            cloned = mapVersions(cloned, { "10.0-10.1": "10" });
          }
          return cloned;
        }
      }
      return browserslist.data[name];
    }
    function normalizeAndroidVersions(androidVersions, chromeVersions) {
      var firstEvergreen = ANDROID_EVERGREEN_FIRST;
      var last = chromeVersions[chromeVersions.length - 1];
      return androidVersions.filter(function(version) {
        return /^(?:[2-4]\.|[34]$)/.test(version);
      }).concat(chromeVersions.slice(firstEvergreen - last - 1));
    }
    function normalizeAndroidData(android, chrome) {
      android.released = normalizeAndroidVersions(android.released, chrome.released);
      android.versions = normalizeAndroidVersions(android.versions, chrome.versions);
      return android;
    }
    function checkName(name, context) {
      var data = byName(name, context);
      if (!data)
        throw new BrowserslistError("Unknown browser " + name);
      return data;
    }
    function unknownQuery(query) {
      return new BrowserslistError(
        "Unknown browser query `" + query + "`. Maybe you are using old Browserslist or made typo in query."
      );
    }
    function filterAndroid(list, versions, context) {
      if (context.mobileToDesktop)
        return list;
      var released = browserslist.data.android.released;
      var last = released[released.length - 1];
      var diff = last - ANDROID_EVERGREEN_FIRST - versions;
      if (diff > 0) {
        return list.slice(-1);
      } else {
        return list.slice(diff - 1);
      }
    }
    function resolve(queries, context) {
      return parse(QUERIES, queries).reduce(function(result, node, index) {
        if (node.not && index === 0) {
          throw new BrowserslistError(
            "Write any browsers query (for instance, `defaults`) before `" + node.query + "`"
          );
        }
        var type = QUERIES[node.type];
        var array = type.select.call(browserslist, context, node).map(function(j) {
          var parts = j.split(" ");
          if (parts[1] === "0") {
            return parts[0] + " " + byName(parts[0], context).versions[0];
          } else {
            return j;
          }
        });
        if (node.compose === "and") {
          if (node.not) {
            return result.filter(function(j) {
              return array.indexOf(j) === -1;
            });
          } else {
            return result.filter(function(j) {
              return array.indexOf(j) !== -1;
            });
          }
        } else {
          if (node.not) {
            var filter = {};
            array.forEach(function(j) {
              filter[j] = true;
            });
            return result.filter(function(j) {
              return !filter[j];
            });
          }
          return result.concat(array);
        }
      }, []);
    }
    function prepareOpts(opts) {
      if (typeof opts === "undefined")
        opts = {};
      if (typeof opts.path === "undefined") {
        opts.path = path.resolve ? path.resolve(".") : ".";
      }
      return opts;
    }
    function prepareQueries(queries, opts) {
      if (typeof queries === "undefined" || queries === null) {
        var config = browserslist.loadConfig(opts);
        if (config) {
          queries = config;
        } else {
          queries = browserslist.defaults;
        }
      }
      return queries;
    }
    function checkQueries(queries) {
      if (!(typeof queries === "string" || Array.isArray(queries))) {
        throw new BrowserslistError(
          "Browser queries must be an array or string. Got " + typeof queries + "."
        );
      }
    }
    var cache = {};
    function browserslist(queries, opts) {
      opts = prepareOpts(opts);
      queries = prepareQueries(queries, opts);
      checkQueries(queries);
      var context = {
        ignoreUnknownVersions: opts.ignoreUnknownVersions,
        dangerousExtend: opts.dangerousExtend,
        mobileToDesktop: opts.mobileToDesktop,
        path: opts.path,
        env: opts.env
      };
      env.oldDataWarning(browserslist.data);
      var stats = env.getStat(opts, browserslist.data);
      if (stats) {
        context.customUsage = {};
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser]);
        }
      }
      var cacheKey = JSON.stringify([queries, context]);
      if (cache[cacheKey])
        return cache[cacheKey];
      var result = uniq(resolve(queries, context)).sort(function(name1, name2) {
        name1 = name1.split(" ");
        name2 = name2.split(" ");
        if (name1[0] === name2[0]) {
          var version1 = name1[1].split("-")[0];
          var version2 = name2[1].split("-")[0];
          return compareSemver(version2.split("."), version1.split("."));
        } else {
          return compare(name1[0], name2[0]);
        }
      });
      if (!env.env.BROWSERSLIST_DISABLE_CACHE) {
        cache[cacheKey] = result;
      }
      return result;
    }
    browserslist.parse = function(queries, opts) {
      opts = prepareOpts(opts);
      queries = prepareQueries(queries, opts);
      checkQueries(queries);
      return parse(QUERIES, queries);
    };
    browserslist.cache = {};
    browserslist.data = {};
    browserslist.usage = {
      global: {},
      custom: null
    };
    browserslist.defaults = ["> 0.5%", "last 2 versions", "Firefox ESR", "not dead"];
    browserslist.aliases = {
      fx: "firefox",
      ff: "firefox",
      ios: "ios_saf",
      explorer: "ie",
      blackberry: "bb",
      explorermobile: "ie_mob",
      operamini: "op_mini",
      operamobile: "op_mob",
      chromeandroid: "and_chr",
      firefoxandroid: "and_ff",
      ucandroid: "and_uc",
      qqandroid: "and_qq"
    };
    browserslist.desktopNames = {
      and_chr: "chrome",
      and_ff: "firefox",
      ie_mob: "ie",
      op_mob: "opera",
      android: "chrome"
      // has extra processing logic
    };
    browserslist.versionAliases = {};
    browserslist.clearCaches = env.clearCaches;
    browserslist.parseConfig = env.parseConfig;
    browserslist.readConfig = env.readConfig;
    browserslist.findConfig = env.findConfig;
    browserslist.loadConfig = env.loadConfig;
    browserslist.coverage = function(browsers, stats) {
      var data;
      if (typeof stats === "undefined") {
        data = browserslist.usage.global;
      } else if (stats === "my stats") {
        var opts = {};
        opts.path = path.resolve ? path.resolve(".") : ".";
        var customStats = env.getStat(opts);
        if (!customStats) {
          throw new BrowserslistError("Custom usage statistics was not provided");
        }
        data = {};
        for (var browser in customStats) {
          fillUsage(data, browser, customStats[browser]);
        }
      } else if (typeof stats === "string") {
        if (stats.length > 2) {
          stats = stats.toLowerCase();
        } else {
          stats = stats.toUpperCase();
        }
        env.loadCountry(browserslist.usage, stats, browserslist.data);
        data = browserslist.usage[stats];
      } else {
        if ("dataByBrowser" in stats) {
          stats = stats.dataByBrowser;
        }
        data = {};
        for (var name in stats) {
          for (var version in stats[name]) {
            data[name + " " + version] = stats[name][version];
          }
        }
      }
      return browsers.reduce(function(all, i) {
        var usage = data[i];
        if (usage === void 0) {
          usage = data[i.replace(/ \S+$/, " 0")];
        }
        return all + (usage || 0);
      }, 0);
    };
    function nodeQuery(context, node) {
      var matched = browserslist.nodeVersions.filter(function(i) {
        return isVersionsMatch(i, node.version);
      });
      if (matched.length === 0) {
        if (context.ignoreUnknownVersions) {
          return [];
        } else {
          throw new BrowserslistError(
            "Unknown version " + node.version + " of Node.js"
          );
        }
      }
      return ["node " + matched[matched.length - 1]];
    }
    function sinceQuery(context, node) {
      var year = parseInt(node.year);
      var month = parseInt(node.month || "01") - 1;
      var day = parseInt(node.day || "01");
      return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context);
    }
    function coverQuery(context, node) {
      var coverage = parseFloat(node.coverage);
      var usage = browserslist.usage.global;
      if (node.place) {
        if (node.place.match(/^my\s+stats$/i)) {
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          usage = context.customUsage;
        } else {
          var place;
          if (node.place.length === 2) {
            place = node.place.toUpperCase();
          } else {
            place = node.place.toLowerCase();
          }
          env.loadCountry(browserslist.usage, place, browserslist.data);
          usage = browserslist.usage[place];
        }
      }
      var versions = Object.keys(usage).sort(function(a, b) {
        return usage[b] - usage[a];
      });
      var coveraged = 0;
      var result = [];
      var version;
      for (var i = 0; i < versions.length; i++) {
        version = versions[i];
        if (usage[version] === 0)
          break;
        coveraged += usage[version];
        result.push(version);
        if (coveraged >= coverage)
          break;
      }
      return result;
    }
    var QUERIES = {
      last_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list = getMajorVersions(data.released, node.versions);
            list = list.map(nameMapper(data.name));
            if (data.name === "android") {
              list = filterAndroid(list, node.versions, context);
            }
            return selected.concat(list);
          }, []);
        }
      },
      last_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list = data.released.slice(-node.versions);
            list = list.map(nameMapper(data.name));
            if (data.name === "android") {
              list = filterAndroid(list, node.versions, context);
            }
            return selected.concat(list);
          }, []);
        }
      },
      last_electron_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
        select: function(context, node) {
          var validVersions = getMajorVersions(Object.keys(e2c), node.versions);
          return validVersions.map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      last_node_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+node\s+major\s+versions?$/i,
        select: function(context, node) {
          return getMajorVersions(browserslist.nodeVersions, node.versions).map(
            function(version) {
              return "node " + version;
            }
          );
        }
      },
      last_browser_major_versions: {
        matches: ["versions", "browser"],
        regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var validVersions = getMajorVersions(data.released, node.versions);
          var list = validVersions.map(nameMapper(data.name));
          if (data.name === "android") {
            list = filterAndroid(list, node.versions, context);
          }
          return list;
        }
      },
      last_electron_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(e2c).slice(-node.versions).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      last_node_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+node\s+versions?$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.slice(-node.versions).map(function(version) {
            return "node " + version;
          });
        }
      },
      last_browser_versions: {
        matches: ["versions", "browser"],
        regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var list = data.released.slice(-node.versions).map(nameMapper(data.name));
          if (data.name === "android") {
            list = filterAndroid(list, node.versions, context);
          }
          return list;
        }
      },
      unreleased_versions: {
        matches: [],
        regexp: /^unreleased\s+versions$/i,
        select: function(context) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list = data.versions.filter(function(v) {
              return data.released.indexOf(v) === -1;
            });
            list = list.map(nameMapper(data.name));
            return selected.concat(list);
          }, []);
        }
      },
      unreleased_electron_versions: {
        matches: [],
        regexp: /^unreleased\s+electron\s+versions?$/i,
        select: function() {
          return [];
        }
      },
      unreleased_browser_versions: {
        matches: ["browser"],
        regexp: /^unreleased\s+(\w+)\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          return data.versions.filter(function(v) {
            return data.released.indexOf(v) === -1;
          }).map(nameMapper(data.name));
        }
      },
      last_years: {
        matches: ["years"],
        regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
        select: function(context, node) {
          return filterByYear(Date.now() - YEAR * node.years, context);
        }
      },
      since_y: {
        matches: ["year"],
        regexp: /^since (\d+)$/i,
        select: sinceQuery
      },
      since_y_m: {
        matches: ["year", "month"],
        regexp: /^since (\d+)-(\d+)$/i,
        select: sinceQuery
      },
      since_y_m_d: {
        matches: ["year", "month", "day"],
        regexp: /^since (\d+)-(\d+)-(\d+)$/i,
        select: sinceQuery
      },
      popularity: {
        matches: ["sign", "popularity"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var usage = browserslist.usage.global;
          return Object.keys(usage).reduce(function(result, version) {
            if (node.sign === ">") {
              if (usage[version] > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (usage[version] < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (usage[version] <= popularity) {
                result.push(version);
              }
            } else if (usage[version] >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_my_stats: {
        matches: ["sign", "popularity"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          var usage = context.customUsage;
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_config_stats: {
        matches: ["sign", "popularity", "config"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var stats = env.loadStat(context, node.config, browserslist.data);
          if (stats) {
            context.customUsage = {};
            for (var browser in stats) {
              fillUsage(context.customUsage, browser, stats[browser]);
            }
          }
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          var usage = context.customUsage;
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_place: {
        matches: ["sign", "popularity", "place"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var place = node.place;
          if (place.length === 2) {
            place = place.toUpperCase();
          } else {
            place = place.toLowerCase();
          }
          env.loadCountry(browserslist.usage, place, browserslist.data);
          var usage = browserslist.usage[place];
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      cover: {
        matches: ["coverage"],
        regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,
        select: coverQuery
      },
      cover_in: {
        matches: ["coverage", "place"],
        regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,
        select: coverQuery
      },
      supports: {
        matches: ["feature"],
        regexp: /^supports\s+([\w-]+)$/,
        select: function(context, node) {
          env.loadFeature(browserslist.cache, node.feature);
          var features = browserslist.cache[node.feature];
          return Object.keys(features).reduce(function(result, version) {
            var flags = features[version];
            if (flags.indexOf("y") >= 0 || flags.indexOf("a") >= 0) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      electron_range: {
        matches: ["from", "to"],
        regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          var fromToUse = normalizeElectron(node.from);
          var toToUse = normalizeElectron(node.to);
          var from = parseFloat(node.from);
          var to = parseFloat(node.to);
          if (!e2c[fromToUse]) {
            throw new BrowserslistError("Unknown version " + from + " of electron");
          }
          if (!e2c[toToUse]) {
            throw new BrowserslistError("Unknown version " + to + " of electron");
          }
          return Object.keys(e2c).filter(function(i) {
            var parsed = parseFloat(i);
            return parsed >= from && parsed <= to;
          }).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      node_range: {
        matches: ["from", "to"],
        regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.filter(semverFilterLoose(">=", node.from)).filter(semverFilterLoose("<=", node.to)).map(function(v) {
            return "node " + v;
          });
        }
      },
      browser_range: {
        matches: ["browser", "from", "to"],
        regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var from = parseFloat(normalizeVersion(data, node.from) || node.from);
          var to = parseFloat(normalizeVersion(data, node.to) || node.to);
          function filter(v) {
            var parsed = parseFloat(v);
            return parsed >= from && parsed <= to;
          }
          return data.released.filter(filter).map(nameMapper(data.name));
        }
      },
      electron_ray: {
        matches: ["sign", "version"],
        regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
        select: function(context, node) {
          var versionToUse = normalizeElectron(node.version);
          return Object.keys(e2c).filter(generateFilter(node.sign, versionToUse)).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      node_ray: {
        matches: ["sign", "version"],
        regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.filter(generateSemverFilter(node.sign, node.version)).map(function(v) {
            return "node " + v;
          });
        }
      },
      browser_ray: {
        matches: ["browser", "sign", "version"],
        regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
        select: function(context, node) {
          var version = node.version;
          var data = checkName(node.browser, context);
          var alias = browserslist.versionAliases[data.name][version];
          if (alias)
            version = alias;
          return data.released.filter(generateFilter(node.sign, version)).map(function(v) {
            return data.name + " " + v;
          });
        }
      },
      firefox_esr: {
        matches: [],
        regexp: /^(firefox|ff|fx)\s+esr$/i,
        select: function() {
          return ["firefox 102"];
        }
      },
      opera_mini_all: {
        matches: [],
        regexp: /(operamini|op_mini)\s+all/i,
        select: function() {
          return ["op_mini all"];
        }
      },
      electron_version: {
        matches: ["version"],
        regexp: /^electron\s+([\d.]+)$/i,
        select: function(context, node) {
          var versionToUse = normalizeElectron(node.version);
          var chrome = e2c[versionToUse];
          if (!chrome) {
            throw new BrowserslistError(
              "Unknown version " + node.version + " of electron"
            );
          }
          return ["chrome " + chrome];
        }
      },
      node_major_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+)$/i,
        select: nodeQuery
      },
      node_minor_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+\.\d+)$/i,
        select: nodeQuery
      },
      node_patch_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
        select: nodeQuery
      },
      current_node: {
        matches: [],
        regexp: /^current\s+node$/i,
        select: function(context) {
          return [env.currentNode(resolve, context)];
        }
      },
      maintained_node: {
        matches: [],
        regexp: /^maintained\s+node\s+versions$/i,
        select: function(context) {
          var now = Date.now();
          var queries = Object.keys(jsEOL).filter(function(key) {
            return now < Date.parse(jsEOL[key].end) && now > Date.parse(jsEOL[key].start) && isEolReleased(key);
          }).map(function(key) {
            return "node " + key.slice(1);
          });
          return resolve(queries, context);
        }
      },
      phantomjs_1_9: {
        matches: [],
        regexp: /^phantomjs\s+1.9$/i,
        select: function() {
          return ["safari 5"];
        }
      },
      phantomjs_2_1: {
        matches: [],
        regexp: /^phantomjs\s+2.1$/i,
        select: function() {
          return ["safari 6"];
        }
      },
      browser_version: {
        matches: ["browser", "version"],
        regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
        select: function(context, node) {
          var version = node.version;
          if (/^tp$/i.test(version))
            version = "TP";
          var data = checkName(node.browser, context);
          var alias = normalizeVersion(data, version);
          if (alias) {
            version = alias;
          } else {
            if (version.indexOf(".") === -1) {
              alias = version + ".0";
            } else {
              alias = version.replace(/\.0$/, "");
            }
            alias = normalizeVersion(data, alias);
            if (alias) {
              version = alias;
            } else if (context.ignoreUnknownVersions) {
              return [];
            } else {
              throw new BrowserslistError(
                "Unknown version " + version + " of " + node.browser
              );
            }
          }
          return [data.name + " " + version];
        }
      },
      browserslist_config: {
        matches: [],
        regexp: /^browserslist config$/i,
        select: function(context) {
          return browserslist(void 0, context);
        }
      },
      extends: {
        matches: ["config"],
        regexp: /^extends (.+)$/i,
        select: function(context, node) {
          return resolve(env.loadQueries(context, node.config), context);
        }
      },
      defaults: {
        matches: [],
        regexp: /^defaults$/i,
        select: function(context) {
          return resolve(browserslist.defaults, context);
        }
      },
      dead: {
        matches: [],
        regexp: /^dead$/i,
        select: function(context) {
          var dead = [
            "Baidu >= 0",
            "ie <= 11",
            "ie_mob <= 11",
            "bb <= 10",
            "op_mob <= 12.1",
            "samsung 4"
          ];
          return resolve(dead, context);
        }
      },
      unknown: {
        matches: [],
        regexp: /^(\w+)$/i,
        select: function(context, node) {
          if (byName(node.query, context)) {
            throw new BrowserslistError(
              "Specify versions in Browserslist query for browser " + node.query
            );
          } else {
            throw unknownQuery(node.query);
          }
        }
      }
    };
    (function() {
      for (var name in agents) {
        var browser = agents[name];
        browserslist.data[name] = {
          name,
          versions: normalize(agents[name].versions),
          released: normalize(agents[name].versions.slice(0, -3)),
          releaseDate: agents[name].release_date
        };
        fillUsage(browserslist.usage.global, name, browser.usage_global);
        browserslist.versionAliases[name] = {};
        for (var i = 0; i < browser.versions.length; i++) {
          var full = browser.versions[i];
          if (!full)
            continue;
          if (full.indexOf("-") !== -1) {
            var interval = full.split("-");
            for (var j = 0; j < interval.length; j++) {
              browserslist.versionAliases[name][interval[j]] = full;
            }
          }
        }
      }
      browserslist.versionAliases.op_mob["59"] = "58";
      browserslist.nodeVersions = jsReleases.map(function(release) {
        return release.version;
      });
    })();
    module.exports = browserslist;
  }
});

// node_modules/caniuse-lite/dist/lib/statuses.js
var require_statuses = __commonJS({
  "node_modules/caniuse-lite/dist/lib/statuses.js"(exports, module) {
    module.exports = {
      1: "ls",
      // WHATWG Living Standard
      2: "rec",
      // W3C Recommendation
      3: "pr",
      // W3C Proposed Recommendation
      4: "cr",
      // W3C Candidate Recommendation
      5: "wd",
      // W3C Working Draft
      6: "other",
      // Non-W3C, but reputable
      7: "unoff"
      // Unofficial, Editor's Draft or W3C "Note"
    };
  }
});

// node_modules/caniuse-lite/dist/lib/supported.js
var require_supported = __commonJS({
  "node_modules/caniuse-lite/dist/lib/supported.js"(exports, module) {
    module.exports = {
      y: 1 << 0,
      n: 1 << 1,
      a: 1 << 2,
      p: 1 << 3,
      u: 1 << 4,
      x: 1 << 5,
      d: 1 << 6
    };
  }
});

// node_modules/caniuse-lite/dist/unpacker/feature.js
var require_feature = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/feature.js"(exports, module) {
    "use strict";
    var statuses = require_statuses();
    var supported = require_supported();
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var MATH2LOG = Math.log(2);
    function unpackSupport(cipher) {
      let stats = Object.keys(supported).reduce((list, support) => {
        if (cipher & supported[support])
          list.push(support);
        return list;
      }, []);
      let notes = cipher >> 7;
      let notesArray = [];
      while (notes) {
        let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift(`#${note}`);
        notes -= Math.pow(2, note - 1);
      }
      return stats.concat(notesArray).join(" ");
    }
    function unpackFeature(packed) {
      let unpacked = { status: statuses[packed.B], title: packed.C };
      unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
        let browser = packed.A[key];
        browserStats[browsers[key]] = Object.keys(browser).reduce(
          (stats, support) => {
            let packedVersions = browser[support].split(" ");
            let unpacked2 = unpackSupport(support);
            packedVersions.forEach((v) => stats[versions[v]] = unpacked2);
            return stats;
          },
          {}
        );
        return browserStats;
      }, {});
      return unpacked;
    }
    module.exports = unpackFeature;
    module.exports.default = unpackFeature;
  }
});

// node_modules/caniuse-lite/data/features/background-clip-text.js
var require_background_clip_text = __commonJS({
  "node_modules/caniuse-lite/data/features/background-clip-text.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "G M N O", "33": "C K L P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB HC IC" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "L G PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "16": "KC 1B", "33": "I x J D E F A B C K LC MC NC OC 2B sB tB 3B" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "1": "oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "16": "1B XC EC YC", "33": "E ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC" }, H: { "2": "rC" }, I: { "16": "vB sC tC uC", "33": "I H vC EC wC xC" }, J: { "33": "D A" }, K: { "16": "A B C sB DC tB", "33": "h" }, L: { "33": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "33": "yC" }, P: { "33": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "33": "3B" }, R: { "33": "CD" }, S: { "1": "DD ED" } }, B: 7, C: "Background-clip: text" };
  }
});

// node_modules/caniuse-lite/data/features/background-img-opts.js
var require_background_img_opts = __commonJS({
  "node_modules/caniuse-lite/data/features/background-img-opts.js"(exports, module) {
    module.exports = { A: { A: { "1": "F A B", "2": "J D E FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC", "36": "IC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "516": "I x J D E F A B C K L" }, E: { "1": "D E F A B C K L G NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "772": "I x J KC 1B LC MC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e UC VC sB DC WC tB", "2": "F SC", "36": "TC" }, G: { "1": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "4": "1B XC EC ZC", "516": "YC" }, H: { "132": "rC" }, I: { "1": "H wC xC", "36": "sC", "516": "vB I vC EC", "548": "tC uC" }, J: { "1": "D A" }, K: { "1": "A B C h sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS3 Background-image options" };
  }
});

// node_modules/caniuse-lite/data/features/border-image.js
var require_border_image = __commonJS({
  "node_modules/caniuse-lite/data/features/border-image.js"(exports, module) {
    module.exports = { A: { A: { "1": "B", "2": "J D E F A FC" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "129": "C K" }, C: { "1": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB", "260": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "804": "I x J D E F A B C K L HC IC" }, D: { "1": "YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "260": "TB UB VB WB XB", "388": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "1412": "0 1 2 3 4 5 6 7 G M N O y g z", "1956": "I x J D E F A B C K L" }, E: { "1": "5B 6B 7B uB 8B 9B AC BC CC RC", "129": "A B C K L G OC 2B sB tB 3B PC QC 4B", "1412": "J D E F MC NC", "1956": "I x KC 1B LC" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F SC TC", "260": "GB HB IB JB KB", "388": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB", "1796": "UC VC", "1828": "B C sB DC WC tB" }, G: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "129": "dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B", "1412": "E ZC aC bC cC", "1956": "1B XC EC YC" }, H: { "1828": "rC" }, I: { "1": "H", "388": "wC xC", "1956": "vB I sC tC uC vC EC" }, J: { "1412": "A", "1924": "D" }, K: { "1": "h", "2": "A", "1828": "B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "B", "2": "A" }, O: { "1": "yC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "260": "zC 0C", "388": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "260": "DD" } }, B: 4, C: "CSS3 Border images" };
  }
});

// node_modules/caniuse-lite/data/features/border-radius.js
var require_border_radius = __commonJS({
  "node_modules/caniuse-lite/data/features/border-radius.js"(exports, module) {
    module.exports = { A: { A: { "1": "F A B", "2": "J D E FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "257": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "289": "vB HC IC", "292": "GC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "I" }, E: { "1": "x D E F A B C K L G NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "I KC 1B", "129": "J LC MC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e UC VC sB DC WC tB", "2": "F SC TC" }, G: { "1": "E XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "1B" }, H: { "2": "rC" }, I: { "1": "vB I H tC uC vC EC wC xC", "33": "sC" }, J: { "1": "D A" }, K: { "1": "B C h sB DC tB", "2": "A" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "257": "DD" } }, B: 4, C: "CSS3 Border-radius (rounded corners)" };
  }
});

// node_modules/caniuse-lite/data/features/calc.js
var require_calc = __commonJS({
  "node_modules/caniuse-lite/data/features/calc.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E FC", "260": "F", "516": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC IC", "33": "I x J D E F A B C K L G" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L G M N O", "33": "0 1 2 3 y g z" }, E: { "1": "D E F A B C K L G MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x KC 1B LC", "33": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB" }, G: { "1": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "33": "ZC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC", "132": "wC xC" }, J: { "1": "A", "2": "D" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "calc() as CSS unit value" };
  }
});

// node_modules/caniuse-lite/data/features/css-animation.js
var require_css_animation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-animation.js"(exports, module) {
    module.exports = { A: { A: { "1": "A B", "2": "J D E F FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I HC IC", "33": "x J D E F A B C K L G" }, D: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "KC 1B", "33": "J D E LC MC NC", "292": "I x" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F B SC TC UC VC sB DC WC", "33": "0 1 2 3 4 5 6 7 C G M N O y g z" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "E ZC aC bC", "164": "1B XC EC YC" }, H: { "2": "rC" }, I: { "1": "H", "33": "I vC EC wC xC", "164": "vB sC tC uC" }, J: { "33": "D A" }, K: { "1": "h tB", "2": "A B C sB DC" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 5, C: "CSS Animation" };
  }
});

// node_modules/caniuse-lite/data/features/css-any-link.js
var require_css_any_link = __commonJS({
  "node_modules/caniuse-lite/data/features/css-any-link.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "16": "GC", "33": "0 1 2 3 4 5 6 7 8 9 vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB HC IC" }, D: { "1": "fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "16": "I x J D E F A B C K L", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "16": "I x J KC 1B LC", "33": "D E MC NC" }, F: { "1": "UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "16": "1B XC EC YC", "33": "E ZC aC bC" }, H: { "2": "rC" }, I: { "1": "H", "16": "vB I sC tC uC vC EC", "33": "wC xC" }, J: { "16": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "16": "I", "33": "zC 0C 1C 2C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "33": "DD" } }, B: 5, C: "CSS :any-link selector" };
  }
});

// node_modules/caniuse-lite/data/features/css-appearance.js
var require_css_appearance = __commonJS({
  "node_modules/caniuse-lite/data/features/css-appearance.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "33": "S", "164": "P Q R", "388": "C K L G M N O" }, C: { "1": "Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "164": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P", "676": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB HC IC" }, D: { "1": "T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "S", "164": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R" }, E: { "1": "5B 6B 7B uB 8B 9B AC BC CC RC", "164": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B" }, F: { "1": "h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "kB lB mB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "164": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B" }, H: { "2": "rC" }, I: { "1": "H", "164": "vB I sC tC uC vC EC wC xC" }, J: { "164": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A", "388": "B" }, O: { "164": "yC" }, P: { "164": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "164": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "164": "DD" } }, B: 5, C: "CSS Appearance" };
  }
});

// node_modules/caniuse-lite/data/features/css-autofill.js
var require_css_autofill = __commonJS({
  "node_modules/caniuse-lite/data/features/css-autofill.js"(exports, module) {
    module.exports = { A: { D: { "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U HC IC" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, K: { "2": "A B C sB DC tB", "33": "h" }, E: { "1": "G QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "RC", "33": "I x J D E F A B C K L KC 1B LC MC NC OC 2B sB tB 3B PC" }, G: { "1": "qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC" }, P: { "33": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, I: { "2": "vB I sC tC uC vC EC", "33": "H wC xC" } }, B: 6, C: ":autofill CSS pseudo-class" };
  }
});

// node_modules/caniuse-lite/data/features/css-backdrop-filter.js
var require_css_backdrop_filter = __commonJS({
  "node_modules/caniuse-lite/data/features/css-backdrop-filter.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M", "257": "N O" }, C: { "1": "p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB HC IC", "578": "kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o" }, D: { "1": "pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "194": "PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB" }, E: { "2": "I x J D E KC 1B LC MC NC", "33": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "1": "eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB SC TC UC VC sB DC WC tB", "194": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB" }, G: { "2": "E 1B XC EC YC ZC aC bC", "33": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g 5C 6C 7C 8C uB 9C AD BD", "2": "I", "194": "zC 0C 1C 2C 3C 2B 4C" }, Q: { "2": "3B" }, R: { "1": "CD" }, S: { "2": "DD ED" } }, B: 7, C: "CSS Backdrop Filter" };
  }
});

// node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js
var require_css_boxdecorationbreak = __commonJS({
  "node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z HC IC" }, D: { "2": "I x J D E F A B C K L G M N O y g z", "164": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "2": "I x J KC 1B LC", "164": "D E F A B C K L G MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "2": "F SC TC UC VC", "129": "B C sB DC WC tB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "2": "1B XC EC YC ZC", "164": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "132": "rC" }, I: { "2": "vB I sC tC uC vC EC", "164": "H wC xC" }, J: { "2": "D", "164": "A" }, K: { "2": "A", "129": "B C sB DC tB", "164": "h" }, L: { "164": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "164": "yC" }, P: { "164": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "164": "3B" }, R: { "164": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS box-decoration-break" };
  }
});

// node_modules/caniuse-lite/data/features/css-boxshadow.js
var require_css_boxshadow = __commonJS({
  "node_modules/caniuse-lite/data/features/css-boxshadow.js"(exports, module) {
    module.exports = { A: { A: { "1": "F A B", "2": "J D E FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB", "33": "HC IC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "I x J D E F" }, E: { "1": "J D E F A B C K L G LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "x", "164": "I KC 1B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e UC VC sB DC WC tB", "2": "F SC TC" }, G: { "1": "E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "XC EC", "164": "1B" }, H: { "2": "rC" }, I: { "1": "I H vC EC wC xC", "164": "vB sC tC uC" }, J: { "1": "A", "33": "D" }, K: { "1": "B C h sB DC tB", "2": "A" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS3 Box-shadow" };
  }
});

// node_modules/caniuse-lite/data/features/css-clip-path.js
var require_css_clip_path = __commonJS({
  "node_modules/caniuse-lite/data/features/css-clip-path.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N", "260": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "3138": "O" }, C: { "1": "WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB", "132": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC", "644": "PB QB RB SB TB UB VB" }, D: { "2": "0 1 I x J D E F A B C K L G M N O y g z", "260": "XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "292": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "2": "I x J KC 1B LC MC", "260": "L G 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "292": "D E F A B C K NC OC 2B sB tB" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "260": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "292": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB" }, G: { "2": "1B XC EC YC ZC", "260": "kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "292": "E aC bC cC dC eC fC gC hC iC jC" }, H: { "2": "rC" }, I: { "2": "vB I sC tC uC vC EC", "260": "H", "292": "wC xC" }, J: { "2": "D A" }, K: { "2": "A B C sB DC tB", "260": "h" }, L: { "260": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "260": "yC" }, P: { "292": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "260": "3B" }, R: { "260": "CD" }, S: { "1": "ED", "644": "DD" } }, B: 4, C: "CSS clip-path property (for HTML)" };
  }
});

// node_modules/caniuse-lite/data/features/css-crisp-edges.js
var require_css_crisp_edges = __commonJS({
  "node_modules/caniuse-lite/data/features/css-crisp-edges.js"(exports, module) {
    module.exports = { A: { A: { "2": "J FC", "2340": "D E F A B" }, B: { "2": "C K L G M N O", "1025": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC", "513": "fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b", "545": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB IC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB", "1025": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "A B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x KC 1B LC", "164": "J", "4644": "D E F MC NC OC" }, F: { "2": "0 1 2 3 4 5 F B G M N O y g z SC TC UC VC sB DC", "545": "C WC tB", "1025": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "1": "eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC", "4260": "YC ZC", "4644": "E aC bC cC dC" }, H: { "2": "rC" }, I: { "2": "vB I sC tC uC vC EC wC xC", "1025": "H" }, J: { "2": "D", "4260": "A" }, K: { "2": "A B sB DC", "545": "C tB", "1025": "h" }, L: { "1025": "H" }, M: { "1": "f" }, N: { "2340": "A B" }, O: { "1025": "yC" }, P: { "1025": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1025": "3B" }, R: { "1025": "CD" }, S: { "1": "ED", "4097": "DD" } }, B: 4, C: "Crisp edges/pixelated images" };
  }
});

// node_modules/caniuse-lite/data/features/css-cross-fade.js
var require_css_cross_fade = __commonJS({
  "node_modules/caniuse-lite/data/features/css-cross-fade.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, D: { "2": "I x J D E F A B C K L G M", "33": "0 1 2 3 4 5 6 7 8 9 N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "A B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x KC 1B", "33": "J D E F LC MC NC OC" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "1": "eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC", "33": "E YC ZC aC bC cC dC" }, H: { "2": "rC" }, I: { "2": "vB I sC tC uC vC EC", "33": "H wC xC" }, J: { "2": "D A" }, K: { "2": "A B C sB DC tB", "33": "h" }, L: { "33": "H" }, M: { "2": "f" }, N: { "2": "A B" }, O: { "33": "yC" }, P: { "33": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "33": "3B" }, R: { "33": "CD" }, S: { "2": "DD ED" } }, B: 4, C: "CSS Cross-Fade Function" };
  }
});

// node_modules/caniuse-lite/data/features/css-deviceadaptation.js
var require_css_deviceadaptation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-deviceadaptation.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "164": "A B" }, B: { "66": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "164": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, D: { "2": "0 1 2 3 4 5 6 I x J D E F A B C K L G M N O y g z", "66": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "2": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB SC TC UC VC sB DC WC tB", "66": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "292": "rC" }, I: { "2": "vB I H sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "2": "A h", "292": "B C sB DC tB" }, L: { "2": "H" }, M: { "2": "f" }, N: { "164": "A B" }, O: { "2": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "66": "3B" }, R: { "2": "CD" }, S: { "2": "DD ED" } }, B: 5, C: "CSS Device Adaptation" };
  }
});

// node_modules/caniuse-lite/data/features/css-element-function.js
var require_css_element_function = __commonJS({
  "node_modules/caniuse-lite/data/features/css-element-function.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "164": "GC vB HC IC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "2": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e SC TC UC VC sB DC WC tB" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "2": "vB I H sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "2": "A B C h sB DC tB" }, L: { "2": "H" }, M: { "33": "f" }, N: { "2": "A B" }, O: { "2": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "2": "3B" }, R: { "2": "CD" }, S: { "33": "DD ED" } }, B: 5, C: "CSS element() function" };
  }
});

// node_modules/caniuse-lite/data/features/css-file-selector-button.js
var require_css_file_selector_button = __commonJS({
  "node_modules/caniuse-lite/data/features/css-file-selector-button.js"(exports, module) {
    module.exports = { A: { D: { "1": "Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X" }, L: { "1": "H" }, B: { "1": "Y Z a b c d e i j k l m n o p q r s t u v f w H", "33": "C K L G M N O P Q R S T U V W X" }, C: { "1": "yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R HC IC" }, M: { "1": "f" }, A: { "2": "J D E F FC", "33": "A B" }, F: { "1": "oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "G PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "RC", "33": "I x J D E F A B C K L KC 1B LC MC NC OC 2B sB tB 3B" }, G: { "1": "pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC" }, P: { "1": "g 8C uB 9C AD BD", "33": "I zC 0C 1C 2C 3C 2B 4C 5C 6C 7C" }, I: { "1": "H", "2": "vB I sC tC uC vC EC", "33": "wC xC" } }, B: 6, C: "::file-selector-button CSS pseudo-element" };
  }
});

// node_modules/caniuse-lite/data/features/css-filter-function.js
var require_css_filter_function = __commonJS({
  "node_modules/caniuse-lite/data/features/css-filter-function.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D E KC 1B LC MC NC", "33": "F" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e SC TC UC VC sB DC WC tB" }, G: { "1": "eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC", "33": "cC dC" }, H: { "2": "rC" }, I: { "2": "vB I H sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "2": "A B C h sB DC tB" }, L: { "2": "H" }, M: { "2": "f" }, N: { "2": "A B" }, O: { "2": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "2": "3B" }, R: { "2": "CD" }, S: { "2": "DD ED" } }, B: 5, C: "CSS filter() function" };
  }
});

// node_modules/caniuse-lite/data/features/css-filters.js
var require_css_filters = __commonJS({
  "node_modules/caniuse-lite/data/features/css-filters.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "1028": "K L G M N O", "1346": "C" }, C: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC", "196": "CB", "516": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB IC" }, D: { "1": "VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L G M N", "33": "0 1 2 3 4 5 6 7 8 9 O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB" }, E: { "1": "A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x KC 1B LC", "33": "J D E F MC NC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB" }, G: { "1": "dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "33": "E ZC aC bC cC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC", "33": "wC xC" }, J: { "2": "D", "33": "A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "33": "I zC 0C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 5, C: "CSS Filter Effects" };
  }
});

// node_modules/caniuse-lite/data/features/css-gradients.js
var require_css_gradients = __commonJS({
  "node_modules/caniuse-lite/data/features/css-gradients.js"(exports, module) {
    module.exports = { A: { A: { "1": "A B", "2": "J D E F FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC", "260": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB", "292": "I x J D E F A B C K L G IC" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 A B C K L G M N O y g z", "548": "I x J D E F" }, E: { "1": "5B 6B 7B uB 8B 9B AC BC CC RC", "2": "KC 1B", "260": "D E F A B C K L G MC NC OC 2B sB tB 3B PC QC 4B", "292": "J LC", "804": "I x" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F B SC TC UC VC", "33": "C WC", "164": "sB DC" }, G: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "260": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B", "292": "YC ZC", "804": "1B XC EC" }, H: { "2": "rC" }, I: { "1": "H wC xC", "33": "I vC EC", "548": "vB sC tC uC" }, J: { "1": "A", "548": "D" }, K: { "1": "h tB", "2": "A B", "33": "C", "164": "sB DC" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS Gradients" };
  }
});

// node_modules/caniuse-lite/data/features/css-grid.js
var require_css_grid = __commonJS({
  "node_modules/caniuse-lite/data/features/css-grid.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E FC", "8": "F", "292": "A B" }, B: { "1": "M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "292": "C K L G" }, C: { "1": "WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F A B C K L G M N O HC IC", "8": "0 1 2 3 4 5 6 7 8 9 y g z AB BB CB DB EB FB GB HB", "584": "IB JB KB LB MB NB OB PB QB RB SB TB", "1025": "UB VB" }, D: { "1": "aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 I x J D E F A B C K L G M N O y g z", "8": "3 4 5 6", "200": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "1025": "ZB" }, E: { "1": "B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x KC 1B LC", "8": "J D E F A MC NC OC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 F B C G M N O y g z SC TC UC VC sB DC WC tB", "200": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB" }, G: { "1": "fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "8": "E ZC aC bC cC dC eC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC", "8": "EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "292": "A B" }, O: { "1": "yC" }, P: { "1": "g 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "zC", "8": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS Grid Layout (level 1)" };
  }
});

// node_modules/caniuse-lite/data/features/css-hyphens.js
var require_css_hyphens = __commonJS({
  "node_modules/caniuse-lite/data/features/css-hyphens.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "33": "A B" }, B: { "1": "r s t u v f w H", "33": "C K L G M N O", "132": "P Q R S T U V W", "260": "X Y Z a b c d e i j k l m n o p q" }, C: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x HC IC", "33": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB" }, D: { "1": "X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "132": "XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W" }, E: { "2": "I x KC 1B", "33": "J D E F A B C K L G LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "1": "a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB SC TC UC VC sB DC WC tB", "132": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z" }, G: { "2": "1B XC", "33": "E EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "4": "yC" }, P: { "1": "g 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I", "132": "zC" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS Hyphenation" };
  }
});

// node_modules/caniuse-lite/data/features/css-image-set.js
var require_css_image_set = __commonJS({
  "node_modules/caniuse-lite/data/features/css-image-set.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U HC IC", "66": "V W", "2305": "Y Z a b c d e i j k l m n o p q r s t u v f w H", "2820": "X" }, D: { "2": "I x J D E F A B C K L G M N O y g", "164": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2049": "zB 0B JC" }, E: { "1": "RC", "2": "I x KC 1B LC", "132": "A B C K 2B sB tB 3B", "164": "J D E F MC NC OC", "1540": "L G PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "2": "1B XC EC YC", "132": "eC fC gC hC iC jC kC lC mC nC", "164": "E ZC aC bC cC dC", "1540": "oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "2": "vB I sC tC uC vC EC", "164": "H wC xC" }, J: { "2": "D", "164": "A" }, K: { "2": "A B C sB DC tB", "164": "h" }, L: { "164": "H" }, M: { "2305": "f" }, N: { "2": "A B" }, O: { "164": "yC" }, P: { "164": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "164": "3B" }, R: { "164": "CD" }, S: { "2": "DD ED" } }, B: 5, C: "CSS image-set" };
  }
});

// node_modules/caniuse-lite/data/features/css-logical-props.js
var require_css_logical_props = __commonJS({
  "node_modules/caniuse-lite/data/features/css-logical-props.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O", "1028": "W X", "1540": "P Q R S T U V" }, C: { "1": "gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC", "164": "0 1 2 3 4 5 6 7 8 9 vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB HC IC", "1540": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB" }, D: { "1": "Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "292": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB", "1028": "W X", "1540": "jB kB lB mB h nB oB pB qB rB P Q R S T U V" }, E: { "1": "G QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "292": "I x J D E F A B C KC 1B LC MC NC OC 2B sB", "1540": "K L tB 3B", "5124": "PC" }, F: { "1": "pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "292": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "1028": "nB oB", "1540": "YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h" }, G: { "1": "qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "292": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC", "1540": "jC kC lC mC nC oC", "5124": "pC" }, H: { "2": "rC" }, I: { "1": "H", "292": "vB I sC tC uC vC EC wC xC" }, J: { "292": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "292": "yC" }, P: { "1": "g 8C uB 9C AD BD", "292": "I zC 0C 1C 2C 3C", "1540": "2B 4C 5C 6C 7C" }, Q: { "1540": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "1540": "DD" } }, B: 5, C: "CSS Logical Properties" };
  }
});

// node_modules/caniuse-lite/data/features/css-masks.js
var require_css_masks = __commonJS({
  "node_modules/caniuse-lite/data/features/css-masks.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M", "164": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "3138": "N", "12292": "O" }, C: { "1": "VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB", "260": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC" }, D: { "164": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "5B 6B 7B uB 8B 9B AC BC CC RC", "2": "KC 1B", "164": "I x J D E F A B C K L G LC MC NC OC 2B sB tB 3B PC QC 4B" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "164": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B" }, H: { "2": "rC" }, I: { "164": "H wC xC", "676": "vB I sC tC uC vC EC" }, J: { "164": "D A" }, K: { "2": "A B C sB DC tB", "164": "h" }, L: { "164": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "164": "yC" }, P: { "164": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "164": "3B" }, R: { "164": "CD" }, S: { "1": "ED", "260": "DD" } }, B: 4, C: "CSS Masks" };
  }
});

// node_modules/caniuse-lite/data/features/css-media-resolution.js
var require_css_media_resolution = __commonJS({
  "node_modules/caniuse-lite/data/features/css-media-resolution.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E FC", "132": "F A B" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "1028": "C K L G M N O" }, C: { "1": "cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB", "260": "I x J D E F A B C K L G HC IC", "1028": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB" }, D: { "1": "iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "548": "0 1 2 3 4 5 6 I x J D E F A B C K L G M N O y g z", "1028": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB" }, E: { "1": "uB 8B 9B AC BC CC RC", "2": "KC 1B", "548": "I x J D E F A B C K L G LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B" }, F: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F", "548": "B C SC TC UC VC sB DC WC", "1028": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "1": "uB 8B 9B AC BC CC", "16": "1B", "548": "E XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B" }, H: { "132": "rC" }, I: { "1": "H", "16": "sC tC", "548": "vB I uC vC EC", "1028": "wC xC" }, J: { "548": "D A" }, K: { "1": "h tB", "548": "A B C sB DC" }, L: { "1": "H" }, M: { "1": "f" }, N: { "132": "A B" }, O: { "1": "yC" }, P: { "1": "g 2B 4C 5C 6C 7C 8C uB 9C AD BD", "1028": "I zC 0C 1C 2C 3C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "Media Queries: resolution feature" };
  }
});

// node_modules/caniuse-lite/data/features/css-overscroll-behavior.js
var require_css_overscroll_behavior = __commonJS({
  "node_modules/caniuse-lite/data/features/css-overscroll-behavior.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "132": "A B" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "132": "C K L G M N", "516": "O" }, C: { "1": "wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB HC IC" }, D: { "1": "fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB", "260": "dB eB" }, E: { "1": "uB 8B 9B AC BC CC RC", "2": "I x J D E F A B C K L KC 1B LC MC NC OC 2B sB tB 3B", "1090": "G PC QC 4B 5B 6B 7B" }, F: { "1": "UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SC TC UC VC sB DC WC tB", "260": "SB TB" }, G: { "1": "uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC", "1090": "pC qC 4B 5B 6B 7B" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "132": "A B" }, O: { "1": "yC" }, P: { "1": "g 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC 0C 1C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "2": "DD" } }, B: 5, C: "CSS overscroll-behavior" };
  }
});

// node_modules/caniuse-lite/data/features/css-placeholder-shown.js
var require_css_placeholder_shown = __commonJS({
  "node_modules/caniuse-lite/data/features/css-placeholder-shown.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "292": "A B" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC IC", "164": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, D: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D E KC 1B LC MC NC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB SC TC UC VC sB DC WC tB" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "164": "DD" } }, B: 5, C: ":placeholder-shown CSS pseudo-class" };
  }
});

// node_modules/caniuse-lite/data/features/css-placeholder.js
var require_css_placeholder = __commonJS({
  "node_modules/caniuse-lite/data/features/css-placeholder.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "36": "C K L G M N O" }, C: { "1": "TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F A B C K L G M N O HC IC", "33": "0 1 2 3 4 5 6 7 8 9 y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, D: { "1": "ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "36": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, E: { "1": "B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I KC 1B", "36": "x J D E F A LC MC NC OC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "36": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB" }, G: { "1": "fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC", "36": "E EC YC ZC aC bC cC dC eC" }, H: { "2": "rC" }, I: { "1": "H", "36": "vB I sC tC uC vC EC wC xC" }, J: { "36": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "36": "A B" }, O: { "1": "yC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "36": "I zC 0C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "33": "DD" } }, B: 5, C: "::placeholder CSS pseudo-element" };
  }
});

// node_modules/caniuse-lite/data/features/css-print-color-adjust.js
var require_css_print_color_adjust = __commonJS({
  "node_modules/caniuse-lite/data/features/css-print-color-adjust.js"(exports, module) {
    module.exports = { A: { D: { "2": "I x J D E F A B C K L G M", "33": "0 1 2 3 4 5 6 7 8 9 N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB HC IC", "33": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, K: { "2": "A B C sB DC tB", "33": "h" }, E: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "2": "I x KC 1B LC RC", "33": "J D E F A B C K L G MC NC OC 2B sB tB 3B PC QC 4B" }, G: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "33": "E ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B" }, P: { "33": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, I: { "2": "vB I sC tC uC vC EC", "33": "H wC xC" } }, B: 6, C: "print-color-adjust property" };
  }
});

// node_modules/caniuse-lite/data/features/css-read-only-write.js
var require_css_read_only_write = __commonJS({
  "node_modules/caniuse-lite/data/features/css-read-only-write.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C" }, C: { "1": "rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "16": "GC", "33": "0 1 2 3 4 5 6 7 8 9 vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB HC IC" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "16": "I x J D E F A B C K L", "132": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "16": "KC 1B", "132": "I x J D E LC MC NC" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "16": "F B SC TC UC VC sB", "132": "0 C G M N O y g z DC WC tB" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "16": "1B XC", "132": "E EC YC ZC aC bC" }, H: { "2": "rC" }, I: { "1": "H", "16": "sC tC", "132": "vB I uC vC EC wC xC" }, J: { "1": "A", "132": "D" }, K: { "1": "h", "2": "A B sB", "132": "C DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "33": "DD" } }, B: 1, C: "CSS :read-only and :read-write selectors" };
  }
});

// node_modules/caniuse-lite/data/features/css-regions.js
var require_css_regions = __commonJS({
  "node_modules/caniuse-lite/data/features/css-regions.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "420": "A B" }, B: { "2": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "420": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, D: { "2": "I x J D E F A B C K L DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "36": "G M N O", "66": "0 1 2 3 4 5 6 7 8 9 y g z AB BB CB" }, E: { "2": "I x J C K L G KC 1B LC sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "D E F A B MC NC OC 2B" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e SC TC UC VC sB DC WC tB" }, G: { "2": "1B XC EC YC ZC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "E aC bC cC dC eC fC gC" }, H: { "2": "rC" }, I: { "2": "vB I H sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "2": "A B C h sB DC tB" }, L: { "2": "H" }, M: { "2": "f" }, N: { "420": "A B" }, O: { "2": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "2": "3B" }, R: { "2": "CD" }, S: { "2": "DD ED" } }, B: 5, C: "CSS Regions" };
  }
});

// node_modules/caniuse-lite/data/features/css-selection.js
var require_css_selection = __commonJS({
  "node_modules/caniuse-lite/data/features/css-selection.js"(exports, module) {
    module.exports = { A: { A: { "1": "F A B", "2": "J D E FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "33": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB HC IC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e SC TC UC VC sB DC WC tB", "2": "F" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H wC xC", "2": "vB I sC tC uC vC EC" }, J: { "1": "A", "2": "D" }, K: { "1": "C h DC tB", "16": "A B sB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "33": "DD" } }, B: 5, C: "::selection CSS pseudo-element" };
  }
});

// node_modules/caniuse-lite/data/features/css-shapes.js
var require_css_shapes = __commonJS({
  "node_modules/caniuse-lite/data/features/css-shapes.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB HC IC", "322": "TB UB VB WB XB YB ZB aB wB bB xB" }, D: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB", "194": "CB DB EB" }, E: { "1": "B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D KC 1B LC MC", "33": "E F A NC OC" }, F: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 F B C G M N O y g z SC TC UC VC sB DC WC tB" }, G: { "1": "fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC aC", "33": "E bC cC dC eC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "2": "DD" } }, B: 4, C: "CSS Shapes Level 1" };
  }
});

// node_modules/caniuse-lite/data/features/css-snappoints.js
var require_css_snappoints = __commonJS({
  "node_modules/caniuse-lite/data/features/css-snappoints.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "6308": "A", "6436": "B" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "6436": "C K L G M N O" }, C: { "1": "iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HC IC", "2052": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB" }, D: { "1": "jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB", "8258": "gB hB iB" }, E: { "1": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D E KC 1B LC MC NC", "3108": "F A OC 2B" }, F: { "1": "eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB SC TC UC VC sB DC WC tB", "8258": "WB XB YB ZB aB bB cB dB" }, G: { "1": "gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC", "3108": "cC dC eC fC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC 0C 1C 2C 3C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "2052": "DD" } }, B: 4, C: "CSS Scroll Snap" };
  }
});

// node_modules/caniuse-lite/data/features/css-sticky.js
var require_css_sticky = __commonJS({
  "node_modules/caniuse-lite/data/features/css-sticky.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G", "1028": "P Q R S T U V W X Y Z", "4100": "M N O" }, C: { "1": "wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 GC vB I x J D E F A B C K L G M N O y g z HC IC", "194": "4 5 6 7 8 9", "516": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB" }, D: { "1": "a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 I x J D E F A B C K L G M N O y g z FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "322": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB UB VB WB XB", "1028": "YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z" }, E: { "1": "K L G 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J KC 1B LC", "33": "E F A B C NC OC 2B sB tB", "2084": "D MC" }, F: { "1": "rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB SC TC UC VC sB DC WC tB", "322": "HB IB JB", "1028": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB" }, G: { "1": "kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "33": "E bC cC dC eC fC gC hC iC jC", "2084": "ZC aC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1028": "yC" }, P: { "1": "g 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC" }, Q: { "1028": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "516": "DD" } }, B: 5, C: "CSS position:sticky" };
  }
});

// node_modules/caniuse-lite/data/features/css-text-align-last.js
var require_css_text_align_last = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-align-last.js"(exports, module) {
    module.exports = { A: { A: { "132": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "4": "C K L G M N O" }, C: { "1": "RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F A B HC IC", "33": "0 1 2 3 4 5 6 7 8 9 C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, D: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB", "322": "DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "uB 8B 9B AC BC CC RC", "2": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C G M N O y g z SC TC UC VC sB DC WC tB", "578": "0 1 2 3 4 5 6 7 8 9 AB BB" }, G: { "1": "uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "132": "A B" }, O: { "1": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "33": "DD" } }, B: 4, C: "CSS3 text-align-last" };
  }
});

// node_modules/caniuse-lite/data/features/css-text-orientation.js
var require_css_text_orientation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-orientation.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB HC IC", "194": "GB HB IB" }, D: { "1": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "1": "L G PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D E F KC 1B LC MC NC OC", "16": "A", "33": "B C K 2B sB tB 3B" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB SC TC UC VC sB DC WC tB" }, G: { "1": "eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC cC dC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 2, C: "CSS text-orientation" };
  }
});

// node_modules/caniuse-lite/data/features/css-text-spacing.js
var require_css_text_spacing = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-spacing.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D FC", "161": "E F A B" }, B: { "2": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "161": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "2": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e SC TC UC VC sB DC WC tB" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "2": "vB I H sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "2": "A B C h sB DC tB" }, L: { "2": "H" }, M: { "2": "f" }, N: { "16": "A B" }, O: { "2": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "2": "3B" }, R: { "2": "CD" }, S: { "2": "DD ED" } }, B: 5, C: "CSS Text 4 text-spacing" };
  }
});

// node_modules/caniuse-lite/data/features/css-transitions.js
var require_css_transitions = __commonJS({
  "node_modules/caniuse-lite/data/features/css-transitions.js"(exports, module) {
    module.exports = { A: { A: { "1": "A B", "2": "J D E F FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC IC", "33": "x J D E F A B C K L G", "164": "I" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 I x J D E F A B C K L G M N O y g z" }, E: { "1": "D E F A B C K L G MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "J LC", "164": "I x KC 1B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F SC TC", "33": "C", "164": "B UC VC sB DC WC" }, G: { "1": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "ZC", "164": "1B XC EC YC" }, H: { "2": "rC" }, I: { "1": "H wC xC", "33": "vB I sC tC uC vC EC" }, J: { "1": "A", "33": "D" }, K: { "1": "h tB", "33": "C", "164": "A B sB DC" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 5, C: "CSS3 Transitions" };
  }
});

// node_modules/caniuse-lite/data/features/css-width-stretch.js
var require_css_width_stretch = __commonJS({
  "node_modules/caniuse-lite/data/features/css-width-stretch.js"(exports, module) {
    module.exports = { A: { D: { "2": "I x J D E F A B C K L G M N O y g z", "33": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "2": "GC", "33": "0 1 2 3 4 5 6 7 8 9 vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, M: { "33": "f" }, A: { "2": "J D E F A B FC" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, K: { "2": "A B C sB DC tB", "33": "h" }, E: { "2": "I x J KC 1B LC MC RC", "33": "D E F A B C K L G NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, G: { "2": "1B XC EC YC ZC", "33": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, P: { "2": "I", "33": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, I: { "2": "vB I sC tC uC vC EC", "33": "H wC xC" } }, B: 6, C: "width: stretch property" };
  }
});

// node_modules/caniuse-lite/data/features/css-writing-mode.js
var require_css_writing_mode = __commonJS({
  "node_modules/caniuse-lite/data/features/css-writing-mode.js"(exports, module) {
    module.exports = { A: { A: { "132": "J D E F A B FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB HC IC", "322": "EB FB GB HB IB" }, D: { "1": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J", "16": "D", "33": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "1": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I KC 1B", "16": "x", "33": "J D E F A LC MC NC OC 2B" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB" }, G: { "1": "gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "16": "1B XC EC", "33": "E YC ZC aC bC cC dC eC fC" }, H: { "2": "rC" }, I: { "1": "H", "2": "sC tC uC", "33": "vB I vC EC wC xC" }, J: { "33": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "36": "A B" }, O: { "1": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "33": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 2, C: "CSS writing-mode property" };
  }
});

// node_modules/caniuse-lite/data/features/css3-boxsizing.js
var require_css3_boxsizing = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-boxsizing.js"(exports, module) {
    module.exports = { A: { A: { "1": "E F A B", "8": "J D FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "33": "0 1 2 3 4 5 6 GC vB I x J D E F A B C K L G M N O y g z HC IC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "I x J D E F" }, E: { "1": "J D E F A B C K L G LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "I x KC 1B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e SC TC UC VC sB DC WC tB", "2": "F" }, G: { "1": "E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "1B XC EC" }, H: { "1": "rC" }, I: { "1": "I H vC EC wC xC", "33": "vB sC tC uC" }, J: { "1": "A", "33": "D" }, K: { "1": "A B C h sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 5, C: "CSS3 Box-sizing" };
  }
});

// node_modules/caniuse-lite/data/features/css3-cursors-grab.js
var require_css3_cursors_grab = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-cursors-grab.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "33": "0 1 2 3 4 GC vB I x J D E F A B C K L G M N O y g z HC IC" }, D: { "1": "iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB" }, E: { "1": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "I x J D E F A KC 1B LC MC NC OC 2B" }, F: { "1": "C XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e WC tB", "2": "F B SC TC UC VC sB DC", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "33": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "2": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "2": "DD ED" } }, B: 2, C: "CSS grab & grabbing cursors" };
  }
});

// node_modules/caniuse-lite/data/features/css3-cursors-newer.js
var require_css3_cursors_newer = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-cursors-newer.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "33": "0 1 GC vB I x J D E F A B C K L G M N O y g z HC IC" }, D: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "I x J D E KC 1B LC MC NC" }, F: { "1": "2 3 4 5 6 7 8 9 C AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e WC tB", "2": "F B SC TC UC VC sB DC", "33": "0 1 G M N O y g z" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "33": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "2": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "2": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "2": "DD ED" } }, B: 2, C: "CSS3 Cursors: zoom-in & zoom-out" };
  }
});

// node_modules/caniuse-lite/data/features/css3-tabsize.js
var require_css3_tabsize = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-tabsize.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC IC", "33": "VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z", "164": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L G M N O y g", "132": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "L G 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J KC 1B LC", "132": "D E F A B C K MC NC OC 2B sB tB" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F SC TC UC", "132": "0 1 2 3 4 5 6 G M N O y g z", "164": "B C VC sB DC WC tB" }, G: { "1": "nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC", "132": "E aC bC cC dC eC fC gC hC iC jC kC lC mC" }, H: { "164": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC", "132": "wC xC" }, J: { "132": "D A" }, K: { "1": "h", "2": "A", "164": "B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "164": "DD ED" } }, B: 4, C: "CSS3 tab-size" };
  }
});

// node_modules/caniuse-lite/data/features/flexbox.js
var require_flexbox = __commonJS({
  "node_modules/caniuse-lite/data/features/flexbox.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "1028": "B", "1316": "A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "164": "GC vB I x J D E F A B C K L G M N O y g z HC IC", "516": "0 1 2 3 4 5" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 z", "164": "I x J D E F A B C K L G M N O y g" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "D E MC NC", "164": "I x J KC 1B LC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F B C SC TC UC VC sB DC WC", "33": "G M" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "E aC bC", "164": "1B XC EC YC ZC" }, H: { "1": "rC" }, I: { "1": "H wC xC", "164": "vB I sC tC uC vC EC" }, J: { "1": "A", "164": "D" }, K: { "1": "h tB", "2": "A B C sB DC" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "B", "292": "A" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS Flexible Box Layout Module" };
  }
});

// node_modules/caniuse-lite/data/features/font-feature.js
var require_font_feature = __commonJS({
  "node_modules/caniuse-lite/data/features/font-feature.js"(exports, module) {
    module.exports = { A: { A: { "1": "A B", "2": "J D E F FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB HC IC", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB", "164": "I x J D E F A B C K L" }, D: { "1": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L G", "33": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "292": "M N O y g" }, E: { "1": "A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "D E F KC 1B MC NC", "4": "I x J LC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB" }, G: { "1": "dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "E aC bC cC", "4": "1B XC EC YC ZC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC", "33": "wC xC" }, J: { "2": "D", "33": "A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "33": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 2, C: "CSS font-feature-settings" };
  }
});

// node_modules/caniuse-lite/data/features/font-kerning.js
var require_font_kerning = __commonJS({
  "node_modules/caniuse-lite/data/features/font-kerning.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 GC vB I x J D E F A B C K L G M N O y g z HC IC", "194": "2 3 4 5 6 7 8 9 AB BB" }, D: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 I x J D E F A B C K L G M N O y g z", "33": "7 8 9 AB" }, E: { "1": "A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J KC 1B LC MC", "33": "D E F NC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C G SC TC UC VC sB DC WC tB", "33": "M N O y" }, G: { "1": "iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC aC", "33": "E bC cC dC eC fC gC hC" }, H: { "2": "rC" }, I: { "1": "H xC", "2": "vB I sC tC uC vC EC", "33": "wC" }, J: { "2": "D", "33": "A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS3 font-kerning" };
  }
});

// node_modules/caniuse-lite/data/features/fullscreen.js
var require_fullscreen = __commonJS({
  "node_modules/caniuse-lite/data/features/fullscreen.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A FC", "548": "B" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "516": "C K L G M N O" }, C: { "1": "eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F HC IC", "676": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "1700": "PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB" }, D: { "1": "lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L", "676": "G M N O y", "804": "0 1 2 3 4 5 6 7 8 9 g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB" }, E: { "1": "BC CC RC", "2": "I x KC 1B", "548": "5B 6B 7B uB 8B 9B AC", "676": "LC", "804": "J D E F A B C K L G MC NC OC 2B sB tB 3B PC QC 4B" }, F: { "1": "eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F B C SC TC UC VC sB DC WC", "804": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB" }, G: { "2": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC", "2052": "iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "2": "vB I H sC tC uC vC EC wC xC" }, J: { "2": "D", "292": "A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A", "548": "B" }, O: { "1": "yC" }, P: { "1": "g 2B 4C 5C 6C 7C 8C uB 9C AD BD", "804": "I zC 0C 1C 2C 3C" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 1, C: "Full Screen API" };
  }
});

// node_modules/caniuse-lite/data/features/intrinsic-width.js
var require_intrinsic_width = __commonJS({
  "node_modules/caniuse-lite/data/features/intrinsic-width.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O", "1025": "d e i j k l m n o p q r s t u v f w H", "1537": "P Q R S T U V W X Y Z a b c" }, C: { "2": "GC", "932": "0 1 2 3 4 5 6 7 8 9 vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB HC IC", "2308": "gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B" }, D: { "2": "I x J D E F A B C K L G M N O y g z", "545": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "1025": "d e i j k l m n o p q r s t u v f w H zB 0B JC", "1537": "OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c" }, E: { "1": "uB 8B 9B AC BC CC RC", "2": "I x J KC 1B LC", "516": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B", "548": "F A OC 2B", "676": "D E MC NC" }, F: { "2": "F B C SC TC UC VC sB DC WC tB", "513": "CB", "545": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB", "1025": "e", "1537": "BB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d" }, G: { "1": "uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC", "516": "oC pC qC 4B 5B 6B 7B", "548": "cC dC eC fC gC hC iC jC kC lC mC nC", "676": "E aC bC" }, H: { "2": "rC" }, I: { "2": "vB I sC tC uC vC EC", "545": "wC xC", "1025": "H" }, J: { "2": "D", "545": "A" }, K: { "2": "A B C sB DC tB", "1025": "h" }, L: { "1025": "H" }, M: { "2308": "f" }, N: { "2": "A B" }, O: { "1537": "yC" }, P: { "545": "I", "1025": "g 9C AD BD", "1537": "zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB" }, Q: { "1537": "3B" }, R: { "1537": "CD" }, S: { "932": "DD", "2308": "ED" } }, B: 5, C: "Intrinsic & Extrinsic Sizing" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js
var require_mdn_css_unicode_bidi_isolate_override = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js"(exports, module) {
    module.exports = { A: { D: { "1": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F A B C K L G M HC IC", "33": "0 1 2 3 4 5 6 7 8 9 N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB SC TC UC VC sB DC WC tB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "I x J KC 1B LC MC RC", "33": "D E F A NC OC 2B" }, G: { "1": "gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC", "33": "E aC bC cC dC eC fC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "isolate-override from unicode-bidi" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js
var require_mdn_css_unicode_bidi_isolate = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js"(exports, module) {
    module.exports = { A: { D: { "1": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L G", "33": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F HC IC", "33": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "I x KC 1B LC RC", "33": "J D E F A MC NC OC 2B" }, G: { "1": "gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "33": "E ZC aC bC cC dC eC fC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "isolate from unicode-bidi" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js
var require_mdn_css_unicode_bidi_plaintext = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js"(exports, module) {
    module.exports = { A: { D: { "1": "QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F HC IC", "33": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB SC TC UC VC sB DC WC tB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "B C K L G sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "I x KC 1B LC RC", "33": "J D E F A MC NC OC 2B" }, G: { "1": "gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC", "33": "E ZC aC bC cC dC eC fC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "plaintext from unicode-bidi" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js
var require_mdn_text_decoration_color = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js"(exports, module) {
    module.exports = { A: { D: { "1": "ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x HC IC", "33": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB SC TC UC VC sB DC WC tB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "K L G tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "I x J D KC 1B LC MC NC RC", "33": "E F A B C OC 2B sB" }, G: { "1": "jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC aC", "33": "E bC cC dC eC fC gC hC iC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC 0C" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "text-decoration-color property" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js
var require_mdn_text_decoration_line = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js"(exports, module) {
    module.exports = { A: { D: { "1": "ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x HC IC", "33": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB SC TC UC VC sB DC WC tB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "K L G tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "I x J D KC 1B LC MC NC RC", "33": "E F A B C OC 2B sB" }, G: { "1": "jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC aC", "33": "E bC cC dC eC fC gC hC iC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC 0C" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "text-decoration-line property" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js
var require_mdn_text_decoration_shorthand = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js"(exports, module) {
    module.exports = { A: { D: { "1": "ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x HC IC" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB SC TC UC VC sB DC WC tB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "2": "I x J D KC 1B LC MC NC RC", "33": "E F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, G: { "2": "1B XC EC YC ZC aC", "33": "E bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC 0C" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "text-decoration shorthand property" };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js
var require_mdn_text_decoration_style = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js"(exports, module) {
    module.exports = { A: { D: { "1": "ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G M N O" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x HC IC", "33": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB" }, M: { "1": "f" }, A: { "2": "J D E F A B FC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB SC TC UC VC sB DC WC tB" }, K: { "1": "h", "2": "A B C sB DC tB" }, E: { "1": "K L G tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "I x J D KC 1B LC MC NC RC", "33": "E F A B C OC 2B sB" }, G: { "1": "jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC aC", "33": "E bC cC dC eC fC gC hC iC" }, P: { "1": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I zC 0C" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" } }, B: 6, C: "text-decoration-style property" };
  }
});

// node_modules/caniuse-lite/data/features/multicolumn.js
var require_multicolumn = __commonJS({
  "node_modules/caniuse-lite/data/features/multicolumn.js"(exports, module) {
    module.exports = { A: { A: { "1": "A B", "2": "J D E F FC" }, B: { "1": "C K L G M N O", "516": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "132": "UB VB WB XB YB ZB aB wB bB xB cB dB eB", "164": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB HC IC", "516": "fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a", "1028": "b c d e i j k l m n o p q r s t u v f w H zB 0B" }, D: { "420": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "516": "SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "A B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "132": "F OC", "164": "D E NC", "420": "I x J KC 1B LC MC" }, F: { "1": "C sB DC WC tB", "2": "F B SC TC UC VC", "420": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB", "516": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "1": "eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "132": "cC dC", "164": "E aC bC", "420": "1B XC EC YC ZC" }, H: { "1": "rC" }, I: { "420": "vB I sC tC uC vC EC wC xC", "516": "H" }, J: { "420": "D A" }, K: { "1": "C sB DC tB", "2": "A B", "516": "h" }, L: { "516": "H" }, M: { "1028": "f" }, N: { "1": "A B" }, O: { "516": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "420": "I" }, Q: { "516": "3B" }, R: { "516": "CD" }, S: { "164": "DD ED" } }, B: 4, C: "CSS3 Multiple column layout" };
  }
});

// node_modules/caniuse-lite/data/features/object-fit.js
var require_object_fit = __commonJS({
  "node_modules/caniuse-lite/data/features/object-fit.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "2": "C K L G", "260": "M N O" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB HC IC" }, D: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z" }, E: { "1": "A B C K L G 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D KC 1B LC MC", "132": "E F NC OC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F G M N O SC TC UC", "33": "B C VC sB DC WC tB" }, G: { "1": "eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC aC", "132": "E bC cC dC" }, H: { "33": "rC" }, I: { "1": "H xC", "2": "vB I sC tC uC vC EC wC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A", "33": "B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS3 object-fit/object-position" };
  }
});

// node_modules/caniuse-lite/data/features/pointer.js
var require_pointer = __commonJS({
  "node_modules/caniuse-lite/data/features/pointer.js"(exports, module) {
    module.exports = { A: { A: { "1": "B", "2": "J D E F FC", "164": "A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x HC IC", "8": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB", "328": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB" }, D: { "1": "XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B C K L G M N O y g z", "8": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "584": "UB VB WB" }, E: { "1": "K L G 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J KC 1B LC", "8": "D E F A B C MC NC OC 2B sB", "1096": "tB" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "8": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB", "584": "HB IB JB" }, G: { "1": "lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "8": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC", "6148": "kC" }, H: { "2": "rC" }, I: { "1": "H", "8": "vB I sC tC uC vC EC wC xC" }, J: { "8": "D A" }, K: { "1": "h", "2": "A", "8": "B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "B", "36": "A" }, O: { "1": "yC" }, P: { "1": "g 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "zC", "8": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "328": "DD" } }, B: 2, C: "Pointer events" };
  }
});

// node_modules/caniuse-lite/data/features/text-decoration.js
var require_text_decoration = __commonJS({
  "node_modules/caniuse-lite/data/features/text-decoration.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "2": "C K L G M N O", "2052": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "2": "GC vB I x HC IC", "1028": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "1060": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O y g z AB BB CB DB" }, D: { "2": "0 1 2 3 I x J D E F A B C K L G M N O y g z", "226": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "2052": "ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "2": "I x J D KC 1B LC MC", "772": "K L G tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "804": "E F A B C OC 2B sB", "1316": "NC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB SC TC UC VC sB DC WC tB", "226": "DB EB FB GB HB IB JB KB LB", "2052": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e" }, G: { "2": "1B XC EC YC ZC aC", "292": "E bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "2": "A B C sB DC tB", "2052": "h" }, L: { "2052": "H" }, M: { "1028": "f" }, N: { "2": "A B" }, O: { "2052": "yC" }, P: { "2": "I zC 0C", "2052": "g 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "2052": "3B" }, R: { "2052": "CD" }, S: { "1028": "DD ED" } }, B: 4, C: "text-decoration styling" };
  }
});

// node_modules/caniuse-lite/data/features/text-emphasis.js
var require_text_emphasis = __commonJS({
  "node_modules/caniuse-lite/data/features/text-emphasis.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "l m n o p q r s t u v f w H", "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a b c d e i j k" }, C: { "1": "OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB HC IC", "322": "NB" }, D: { "1": "l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 I x J D E F A B C K L G M N O y g z", "164": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k" }, E: { "1": "E F A B C K L G NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J KC 1B LC", "164": "D MC" }, F: { "1": "V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U" }, G: { "1": "E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "1B XC EC YC ZC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC", "164": "wC xC" }, J: { "2": "D", "164": "A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "164": "yC" }, P: { "1": "g AD BD", "164": "I zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C" }, Q: { "164": "3B" }, R: { "164": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "text-emphasis styling" };
  }
});

// node_modules/caniuse-lite/data/features/text-overflow.js
var require_text_overflow = __commonJS({
  "node_modules/caniuse-lite/data/features/text-overflow.js"(exports, module) {
    module.exports = { A: { A: { "1": "J D E F A B", "2": "FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "8": "GC vB I x J HC IC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC" }, E: { "1": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e sB DC WC tB", "33": "F SC TC UC VC" }, G: { "1": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "1": "rC" }, I: { "1": "vB I H sC tC uC vC EC wC xC" }, J: { "1": "D A" }, K: { "1": "h tB", "33": "A B C sB DC" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 2, C: "CSS3 Text-overflow" };
  }
});

// node_modules/caniuse-lite/data/features/text-size-adjust.js
var require_text_size_adjust = __commonJS({
  "node_modules/caniuse-lite/data/features/text-size-adjust.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "33": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B HC IC" }, D: { "1": "WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB", "258": "4" }, E: { "2": "I x J D E F A B C K L G KC 1B MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "258": "LC" }, F: { "1": "LB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O y g z AB BB CB DB EB FB GB HB IB JB KB MB SC TC UC VC sB DC WC tB" }, G: { "2": "1B XC EC", "33": "E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "2": "vB I sC tC uC vC EC wC xC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "33": "f" }, N: { "161": "A B" }, O: { "1": "yC" }, P: { "1": "g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "2": "I" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "2": "DD ED" } }, B: 7, C: "CSS text-size-adjust" };
  }
});

// node_modules/caniuse-lite/data/features/transforms2d.js
var require_transforms2d = __commonJS({
  "node_modules/caniuse-lite/data/features/transforms2d.js"(exports, module) {
    module.exports = { A: { A: { "2": "FC", "8": "J D E", "129": "A B", "161": "F" }, B: { "1": "N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "129": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB", "33": "I x J D E F A B C K L G HC IC" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "33": "I x J D E KC 1B LC MC NC" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F SC TC", "33": "0 B C G M N O y g z UC VC sB DC WC" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "33": "E 1B XC EC YC ZC aC bC" }, H: { "2": "rC" }, I: { "1": "H", "33": "vB I sC tC uC vC EC wC xC" }, J: { "33": "D A" }, K: { "1": "B C h sB DC tB", "2": "A" }, L: { "1": "H" }, M: { "1": "f" }, N: { "1": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS3 2D Transforms" };
  }
});

// node_modules/caniuse-lite/data/features/transforms3d.js
var require_transforms3d = __commonJS({
  "node_modules/caniuse-lite/data/features/transforms3d.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "132": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F HC IC", "33": "A B C K L G" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "I x J D E F A B", "33": "0 1 2 3 4 5 6 7 8 9 C K L G M N O y g z AB BB CB DB" }, E: { "1": "5B 6B 7B uB 8B 9B AC BC CC RC", "2": "KC 1B", "33": "I x J D E LC MC NC", "257": "F A B C K L G OC 2B sB tB 3B PC QC 4B" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 G M N O y g z" }, G: { "1": "5B 6B 7B uB 8B 9B AC BC CC", "33": "E 1B XC EC YC ZC aC bC", "257": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B" }, H: { "2": "rC" }, I: { "1": "H", "2": "sC tC uC", "33": "vB I vC EC wC xC" }, J: { "33": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "132": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 5, C: "CSS3 3D Transforms" };
  }
});

// node_modules/caniuse-lite/data/features/user-select-none.js
var require_user_select_none = __commonJS({
  "node_modules/caniuse-lite/data/features/user-select-none.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F FC", "33": "A B" }, B: { "1": "P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H", "33": "C K L G M N O" }, C: { "1": "jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "33": "0 1 2 3 4 5 6 7 8 9 GC vB I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB HC IC" }, D: { "1": "WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "33": "0 1 2 3 4 5 6 7 8 9 I x J D E F A B C K L G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, E: { "1": "RC", "33": "I x J D E F A B C K L G KC 1B LC MC NC OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e", "2": "F B C SC TC UC VC sB DC WC tB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB" }, G: { "33": "E 1B XC EC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC" }, H: { "2": "rC" }, I: { "1": "H", "33": "vB I sC tC uC vC EC wC xC" }, J: { "33": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "33": "A B" }, O: { "1": "yC" }, P: { "1": "g 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD", "33": "I zC" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "ED", "33": "DD" } }, B: 5, C: "CSS user-select: none" };
  }
});

// node_modules/caniuse-lite/data/features/css-featurequeries.js
var require_css_featurequeries = __commonJS({
  "node_modules/caniuse-lite/data/features/css-featurequeries.js"(exports, module) {
    module.exports = { A: { A: { "2": "J D E F A B FC" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B", "2": "GC vB I x J D E F A B C K L G M N O y g z HC IC" }, D: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB wB bB xB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f w H zB 0B JC", "2": "0 1 2 3 4 5 I x J D E F A B C K L G M N O y g z" }, E: { "1": "F A B C K L G OC 2B sB tB 3B PC QC 4B 5B 6B 7B uB 8B 9B AC BC CC RC", "2": "I x J D E KC 1B LC MC NC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O y g z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB h nB oB pB qB rB P Q R yB S T U V W X Y Z a b c d e tB", "2": "F B C SC TC UC VC sB DC WC" }, G: { "1": "cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 4B 5B 6B 7B uB 8B 9B AC BC CC", "2": "E 1B XC EC YC ZC aC bC" }, H: { "1": "rC" }, I: { "1": "H wC xC", "2": "vB I sC tC uC vC EC" }, J: { "2": "D A" }, K: { "1": "h", "2": "A B C sB DC tB" }, L: { "1": "H" }, M: { "1": "f" }, N: { "2": "A B" }, O: { "1": "yC" }, P: { "1": "I g zC 0C 1C 2C 3C 2B 4C 5C 6C 7C 8C uB 9C AD BD" }, Q: { "1": "3B" }, R: { "1": "CD" }, S: { "1": "DD ED" } }, B: 4, C: "CSS Feature Queries" };
  }
});

// node_modules/postcss-value-parser/lib/parse.js
var require_parse3 = __commonJS({
  "node_modules/postcss-value-parser/lib/parse.js"(exports, module) {
    var openParentheses = "(".charCodeAt(0);
    var closeParentheses = ")".charCodeAt(0);
    var singleQuote = "'".charCodeAt(0);
    var doubleQuote = '"'.charCodeAt(0);
    var backslash = "\\".charCodeAt(0);
    var slash = "/".charCodeAt(0);
    var comma = ",".charCodeAt(0);
    var colon = ":".charCodeAt(0);
    var star = "*".charCodeAt(0);
    var uLower = "u".charCodeAt(0);
    var uUpper = "U".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var isUnicodeRange = /^[a-f0-9?-]+$/i;
    module.exports = function(input) {
      var tokens = [];
      var value = input;
      var next, quote, prev, token, escape, escapePos, whitespacePos, parenthesesOpenPos;
      var pos = 0;
      var code = value.charCodeAt(pos);
      var max = value.length;
      var stack = [{ nodes: tokens }];
      var balanced = 0;
      var parent;
      var name = "";
      var before = "";
      var after = "";
      while (pos < max) {
        if (code <= 32) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          token = value.slice(pos, next);
          prev = tokens[tokens.length - 1];
          if (code === closeParentheses && balanced) {
            after = token;
          } else if (prev && prev.type === "div") {
            prev.after = token;
            prev.sourceEndIndex += token.length;
          } else if (code === comma || code === colon || code === slash && value.charCodeAt(next + 1) !== star && (!parent || parent && parent.type === "function" && parent.value !== "calc")) {
            before = token;
          } else {
            tokens.push({
              type: "space",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        } else if (code === singleQuote || code === doubleQuote) {
          next = pos;
          quote = code === singleQuote ? "'" : '"';
          token = {
            type: "string",
            sourceIndex: pos,
            quote
          };
          do {
            escape = false;
            next = value.indexOf(quote, next + 1);
            if (~next) {
              escapePos = next;
              while (value.charCodeAt(escapePos - 1) === backslash) {
                escapePos -= 1;
                escape = !escape;
              }
            } else {
              value += quote;
              next = value.length - 1;
              token.unclosed = true;
            }
          } while (escape);
          token.value = value.slice(pos + 1, next);
          token.sourceEndIndex = token.unclosed ? next : next + 1;
          tokens.push(token);
          pos = next + 1;
          code = value.charCodeAt(pos);
        } else if (code === slash && value.charCodeAt(pos + 1) === star) {
          next = value.indexOf("*/", pos);
          token = {
            type: "comment",
            sourceIndex: pos,
            sourceEndIndex: next + 2
          };
          if (next === -1) {
            token.unclosed = true;
            next = value.length;
            token.sourceEndIndex = next;
          }
          token.value = value.slice(pos + 2, next);
          tokens.push(token);
          pos = next + 2;
          code = value.charCodeAt(pos);
        } else if ((code === slash || code === star) && parent && parent.type === "function" && parent.value === "calc") {
          token = value[pos];
          tokens.push({
            type: "word",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token
          });
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (code === slash || code === comma || code === colon) {
          token = value[pos];
          tokens.push({
            type: "div",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token,
            before,
            after: ""
          });
          before = "";
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (openParentheses === code) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          parenthesesOpenPos = pos;
          token = {
            type: "function",
            sourceIndex: pos - name.length,
            value: name,
            before: value.slice(parenthesesOpenPos + 1, next)
          };
          pos = next;
          if (name === "url" && code !== singleQuote && code !== doubleQuote) {
            next -= 1;
            do {
              escape = false;
              next = value.indexOf(")", next + 1);
              if (~next) {
                escapePos = next;
                while (value.charCodeAt(escapePos - 1) === backslash) {
                  escapePos -= 1;
                  escape = !escape;
                }
              } else {
                value += ")";
                next = value.length - 1;
                token.unclosed = true;
              }
            } while (escape);
            whitespacePos = next;
            do {
              whitespacePos -= 1;
              code = value.charCodeAt(whitespacePos);
            } while (code <= 32);
            if (parenthesesOpenPos < whitespacePos) {
              if (pos !== whitespacePos + 1) {
                token.nodes = [
                  {
                    type: "word",
                    sourceIndex: pos,
                    sourceEndIndex: whitespacePos + 1,
                    value: value.slice(pos, whitespacePos + 1)
                  }
                ];
              } else {
                token.nodes = [];
              }
              if (token.unclosed && whitespacePos + 1 !== next) {
                token.after = "";
                token.nodes.push({
                  type: "space",
                  sourceIndex: whitespacePos + 1,
                  sourceEndIndex: next,
                  value: value.slice(whitespacePos + 1, next)
                });
              } else {
                token.after = value.slice(whitespacePos + 1, next);
                token.sourceEndIndex = next;
              }
            } else {
              token.after = "";
              token.nodes = [];
            }
            pos = next + 1;
            token.sourceEndIndex = token.unclosed ? next : pos;
            code = value.charCodeAt(pos);
            tokens.push(token);
          } else {
            balanced += 1;
            token.after = "";
            token.sourceEndIndex = pos + 1;
            tokens.push(token);
            stack.push(token);
            tokens = token.nodes = [];
            parent = token;
          }
          name = "";
        } else if (closeParentheses === code && balanced) {
          pos += 1;
          code = value.charCodeAt(pos);
          parent.after = after;
          parent.sourceEndIndex += after.length;
          after = "";
          balanced -= 1;
          stack[stack.length - 1].sourceEndIndex = pos;
          stack.pop();
          parent = stack[balanced];
          tokens = parent.nodes;
        } else {
          next = pos;
          do {
            if (code === backslash) {
              next += 1;
            }
            next += 1;
            code = value.charCodeAt(next);
          } while (next < max && !(code <= 32 || code === singleQuote || code === doubleQuote || code === comma || code === colon || code === slash || code === openParentheses || code === star && parent && parent.type === "function" && parent.value === "calc" || code === slash && parent.type === "function" && parent.value === "calc" || code === closeParentheses && balanced));
          token = value.slice(pos, next);
          if (openParentheses === code) {
            name = token;
          } else if ((uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) && plus === token.charCodeAt(1) && isUnicodeRange.test(token.slice(2))) {
            tokens.push({
              type: "unicode-range",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          } else {
            tokens.push({
              type: "word",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        }
      }
      for (pos = stack.length - 1; pos; pos -= 1) {
        stack[pos].unclosed = true;
        stack[pos].sourceEndIndex = value.length;
      }
      return stack[0].nodes;
    };
  }
});

// node_modules/postcss-value-parser/lib/walk.js
var require_walk = __commonJS({
  "node_modules/postcss-value-parser/lib/walk.js"(exports, module) {
    module.exports = function walk(nodes, cb, bubble) {
      var i, max, node, result;
      for (i = 0, max = nodes.length; i < max; i += 1) {
        node = nodes[i];
        if (!bubble) {
          result = cb(node, i, nodes);
        }
        if (result !== false && node.type === "function" && Array.isArray(node.nodes)) {
          walk(node.nodes, cb, bubble);
        }
        if (bubble) {
          cb(node, i, nodes);
        }
      }
    };
  }
});

// node_modules/postcss-value-parser/lib/stringify.js
var require_stringify2 = __commonJS({
  "node_modules/postcss-value-parser/lib/stringify.js"(exports, module) {
    function stringifyNode(node, custom) {
      var type = node.type;
      var value = node.value;
      var buf;
      var customResult;
      if (custom && (customResult = custom(node)) !== void 0) {
        return customResult;
      } else if (type === "word" || type === "space") {
        return value;
      } else if (type === "string") {
        buf = node.quote || "";
        return buf + value + (node.unclosed ? "" : buf);
      } else if (type === "comment") {
        return "/*" + value + (node.unclosed ? "" : "*/");
      } else if (type === "div") {
        return (node.before || "") + value + (node.after || "");
      } else if (Array.isArray(node.nodes)) {
        buf = stringify(node.nodes, custom);
        if (type !== "function") {
          return buf;
        }
        return value + "(" + (node.before || "") + buf + (node.after || "") + (node.unclosed ? "" : ")");
      }
      return value;
    }
    function stringify(nodes, custom) {
      var result, i;
      if (Array.isArray(nodes)) {
        result = "";
        for (i = nodes.length - 1; ~i; i -= 1) {
          result = stringifyNode(nodes[i], custom) + result;
        }
        return result;
      }
      return stringifyNode(nodes, custom);
    }
    module.exports = stringify;
  }
});

// node_modules/postcss-value-parser/lib/unit.js
var require_unit = __commonJS({
  "node_modules/postcss-value-parser/lib/unit.js"(exports, module) {
    var minus = "-".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var dot = ".".charCodeAt(0);
    var exp = "e".charCodeAt(0);
    var EXP = "E".charCodeAt(0);
    function likeNumber(value) {
      var code = value.charCodeAt(0);
      var nextCode;
      if (code === plus || code === minus) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        var nextNextCode = value.charCodeAt(2);
        if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code === dot) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code >= 48 && code <= 57) {
        return true;
      }
      return false;
    }
    module.exports = function(value) {
      var pos = 0;
      var length = value.length;
      var code;
      var nextCode;
      var nextNextCode;
      if (length === 0 || !likeNumber(value)) {
        return false;
      }
      code = value.charCodeAt(pos);
      if (code === plus || code === minus) {
        pos++;
      }
      while (pos < length) {
        code = value.charCodeAt(pos);
        if (code < 48 || code > 57) {
          break;
        }
        pos += 1;
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      if (code === dot && nextCode >= 48 && nextCode <= 57) {
        pos += 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      nextNextCode = value.charCodeAt(pos + 2);
      if ((code === exp || code === EXP) && (nextCode >= 48 && nextCode <= 57 || (nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57)) {
        pos += nextCode === plus || nextCode === minus ? 3 : 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      return {
        number: value.slice(0, pos),
        unit: value.slice(pos)
      };
    };
  }
});

// node_modules/postcss-value-parser/lib/index.js
var require_lib = __commonJS({
  "node_modules/postcss-value-parser/lib/index.js"(exports, module) {
    var parse = require_parse3();
    var walk = require_walk();
    var stringify = require_stringify2();
    function ValueParser(value) {
      if (this instanceof ValueParser) {
        this.nodes = parse(value);
        return this;
      }
      return new ValueParser(value);
    }
    ValueParser.prototype.toString = function() {
      return Array.isArray(this.nodes) ? stringify(this.nodes) : "";
    };
    ValueParser.prototype.walk = function(cb, bubble) {
      walk(this.nodes, cb, bubble);
      return this;
    };
    ValueParser.unit = require_unit();
    ValueParser.walk = walk;
    ValueParser.stringify = stringify;
    module.exports = ValueParser;
  }
});

export {
  require_path,
  require_picocolors_browser,
  require_url,
  require_fs,
  require_postcss,
  require_browsers2 as require_browsers,
  require_agents2 as require_agents,
  require_browserslist,
  require_feature,
  require_background_clip_text,
  require_background_img_opts,
  require_border_image,
  require_border_radius,
  require_calc,
  require_css_animation,
  require_css_any_link,
  require_css_appearance,
  require_css_autofill,
  require_css_backdrop_filter,
  require_css_boxdecorationbreak,
  require_css_boxshadow,
  require_css_clip_path,
  require_css_crisp_edges,
  require_css_cross_fade,
  require_css_deviceadaptation,
  require_css_element_function,
  require_css_featurequeries,
  require_css_file_selector_button,
  require_css_filter_function,
  require_css_filters,
  require_css_gradients,
  require_css_grid,
  require_css_hyphens,
  require_css_image_set,
  require_css_logical_props,
  require_css_masks,
  require_css_media_resolution,
  require_css_overscroll_behavior,
  require_css_placeholder_shown,
  require_css_placeholder,
  require_css_print_color_adjust,
  require_css_read_only_write,
  require_css_regions,
  require_css_selection,
  require_css_shapes,
  require_css_snappoints,
  require_css_sticky,
  require_css_text_align_last,
  require_css_text_orientation,
  require_css_text_spacing,
  require_css_transitions,
  require_css_width_stretch,
  require_css_writing_mode,
  require_css3_boxsizing,
  require_css3_cursors_grab,
  require_css3_cursors_newer,
  require_css3_tabsize,
  require_flexbox,
  require_font_feature,
  require_font_kerning,
  require_fullscreen,
  require_intrinsic_width,
  require_mdn_css_unicode_bidi_isolate_override,
  require_mdn_css_unicode_bidi_isolate,
  require_mdn_css_unicode_bidi_plaintext,
  require_mdn_text_decoration_color,
  require_mdn_text_decoration_line,
  require_mdn_text_decoration_shorthand,
  require_mdn_text_decoration_style,
  require_multicolumn,
  require_object_fit,
  require_pointer,
  require_text_decoration,
  require_text_emphasis,
  require_text_overflow,
  require_text_size_adjust,
  require_transforms2d,
  require_transforms3d,
  require_user_select_none,
  require_lib
};
//# sourceMappingURL=chunk-TLMUE5OS.js.map
